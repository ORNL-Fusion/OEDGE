c     -*-Fortran-*-
c 
c     These common blocks contain data relevant to the ion far
c     periphery options. 
c
      integer,parameter ::  num_fp_regions = 2
      integer,parameter ::  fp_main = 1
      integer,parameter ::  fp_pfz  = 2
c
      common /fp_com/ FPXMAXO,FPTIMO,fpxmaxi,fptimi,cdperpfp,
     >                fpopt,fpropt
      save /fp_com/
      integer fpopt, fpropt
      real FPXMAXO,FPTIMO,fpxmaxi,fptimi,cdperpfp
c    
c
c
      common /fp_neut/ fp_neut_opt,fp_plasma_opt,fp_flow_opt,
     >       fp_te,fp_ne,
     >       fp_flow_velocity_input,
     >       fp_neut_ent,fp_neut_ioniz,fp_neut_wall,fp_neut_tmax,
     >       fp_neut_targ,fp_neut_data
      save /fp_neut/
c
      integer fp_neut_opt,fp_plasma_opt,fp_flow_opt
      real    fp_te,fp_ne,fp_neut_ent,fp_neut_ioniz,fp_neut_wall,
     >        fp_neut_tmax,fp_neut_targ,fp_neut_data(maxpts+1,5),
     >        fp_flow_velocity_input
c
c
c 
      common /fp_data/ fp_plasma,fp_virt_rings,
     >                 fp_region,fp_s,fp_rings,fp_cells,
     >                 fp_walldist,min_fp_walldist,
     >                 fp_wallcoords,fp_flow_velocity
c     >                ,fp_sdrft_start,fp_sdrft_end
      save /fp_data/
c
      integer fp_region,
     >        fp_virt_rings(num_fp_regions),
     >        fp_rings(num_fp_regions),
     >        fp_cells(num_fp_regions)
      real fp_plasma(maxnks,num_fp_regions,7),
     >     min_fp_walldist(maxnks,num_fp_regions),
     >     fp_walldist(0:2*maxnks,num_fp_regions),
     >     fp_wallcoords(0:2*maxnks,num_fp_regions,2),
     >     fp_flow_velocity(num_fp_regions)
c     >    ,fp_sdrft_start(num_fp_regions),
c     >    ,fp_sdrft_end(num_fp_regions)
      
      real fp_s(0:2*maxnks,num_fp_regions)
c
c     Hard coded flag for debugging the new fp options
c
      logical :: debug_fp = .false.
c
c     Contents of fp_plasma array:
c
c     fp_plasma(ik,ireg,1) = ne
c     fp_plasma(ik,ireg,2) = te
c     fp_plasma(ik,ireg,3) = ti
c     fp_plasma(ik,ireg,4) = vb
c     fp_plasma(ik,ireg,5) = efield
c     fp_plasma(ik,ireg,6) = tgrade
c     fp_plasma(ik,ireg,7) = tgradi
c
