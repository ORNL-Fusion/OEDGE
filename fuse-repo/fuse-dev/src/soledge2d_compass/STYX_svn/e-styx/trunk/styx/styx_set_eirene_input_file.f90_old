subroutine set_eirene_input_file(ical)
  use all_variables, only : global_parameters
  use eirmod_precision
  use styx2eirene
  use eirmod_comprt, only : iunout
  
  implicit none
  
  integer,intent(in) :: ical
  integer :: NRTAL,NTRIAN,NLTVOUT,NLTSOUT,NGSTAL
  integer :: i,nc,nsp,nreac,isp,ireac,nreacH,iz
  integer :: iatm,imol,iion,ipls,ising,nreacisp
  integer :: icx,ncx,nadv
  character(72) :: A
  character(72) :: B
  character(2) :: yearc,symbol,ispc,iionc,isingc
  character(2) :: nreacispc
  character(3) :: ncc,massc,izc,Zc,ireacc,nadvc
  character(6) :: format
  character(6) :: NRTALc,NGSTALc
  character(6) :: NTTRA_styxc
  character(6) :: NTRIANc 
  character(6) :: NRKNOT_styxc
  character(6) :: NLTVOUTc,NLTSOUTc
  character(12) :: LZc,dtimvc,ROA_styxc,chic
  character(6) :: NSTRATAc
  character(6) :: ntime_c,nprnlic,nptstc
  character(6) :: ibulk,iscd1,iscd2,iscde
  character(NSTRATA*6) :: INDSRCc
  character(NSTRATA+1) :: TRCSRCc
  character(7) :: trim_file
  character(8) :: symbol_ion

  integer, parameter :: nmax_speciesx12=1200
  character(nmax_speciesx12) :: DATDc,DMLDc,DIODc,DPLDc
 
  if (global_parameters%n_species > 100) then
    write(*,*) 'warning, number of species > 100, eirene input &
                file may be incorretly written ...' 
  endif

  NRTAL=NTRI_styx+1
  NTRIAN=NTRI_styx+1

  select case (am_database)

    case(1)
      open(unit=2,file='eirene_input_file_AMJUEL_level_1')
      if (ical == 1) then
        write(*,*) '--------------------------------------------------------------'
        write(*,*) 'EIRENE uses AMJUEL database, level 1                          '
        write(*,*) '--------------------------------------------------------------'
      endif
    case(2)
      open(unit=2,file='eirene_input_file_ADAS_atoms')
      if (ical == 1) then
        write(*,*) '--------------------------------------------------------------'
        write(*,*) 'EIRENE uses ADAS database for atoms                           '
        write(*,*) '--------------------------------------------------------------'
      endif
    case(3)
      open(unit=2,file='eirene_input.template')
        if (ical == 1) then
          write(*,*) '--------------------------------------------------------------'
          write(*,*) 'EIRENE uses a non standard input file, use at your own risk !'
          write(*,*) '--------------------------------------------------------------'
        endif
    case(4)
      open(unit=2,file='eirene_input_file_AMJUEL_level_2')
        if (ical == 1) then
          write(*,*) '--------------------------------------------------------------'
          write(*,*) 'EIRENE uses AMJUEL database, level 2                          '
          write(*,*) '--------------------------------------------------------------'
        endif
    case default
      open(unit=2,file='eirene_input_file_AMJUEL_level_1')
        if (ical == 1) then
          write(*,*) '----------------------------------------------------------------'
          write(*,*) 'Wrong specification of am_database, default AMJUEL level 1 used '
          write(*,*) '----------------------------------------------------------------'
        endif
  end select

  if (tweak_chemistry .and. ical == 1) then
    write(*,*) '----------------------------------------------------------------'
    write(*,*) ' Warning, chemistry tweaks are allowed (see report below)       '
    write(*,*) '----------------------------------------------------------------'
  endif

  do i=1,3
    read(2,'(A72)') A  
    B=trim(A)
    nc=len(trim(A))
    write(ncc,'(i3)') nc
    format='(A'//trim(adjustl(ncc))//')'
    write(1,format) trim(A)
  enddo

  read(2,*)

  write(ntime_c,'(i6)') ntime_styx

  if (.not.timedep) then
    A='     1     1 10000     0     0     0     0     0'
  else
    A='     1     1 10000 30000     0     0     0'//trim(ntime_c)
  endif
  
  write(1,'(A48)') trim(A)
 
  read(2,*)

! spatially resolved surface tallies NGSTAL=1 (otherwise 0)

  NGSTAL=1

  write(NRTALc,'(i6)') NRTAL
  write(NGSTALc,'(i6)') NGSTAL
!  write(NREAC_ADDc,'(i6)') NREAC_ADD

  A='     1     1     0     1     1     9'//trim(NGSTALc)//trim(NRTALc)//'     0'     !trim(NREAC_ADDc)

  write(1,'(A54)') trim(A)

  read(2,'(A72)') A
  B=trim(A)
  nc=len(trim(A))
  write(ncc,'(i3)') nc
  format='(A'//trim(adjustl(ncc))//')'
  write(1,format) trim(A)


!!! temporary fix (required for sputer too)
!  if (am_database == 2) then
  write(1,'(A21)') 'CFILE ADAS ADAS/adf11'
!  endif

  do i=1,4
    read(2,'(A72)') A
    B=trim(A)
    nc=len(trim(A))
    write(ncc,'(i3)') nc
    format='(A'//trim(adjustl(ncc))//')'
    write(1,format) trim(A)
  enddo

  read(2,*)

  write(NTRIANc,'(i6)') NTRIAN
  write(NRKNOT_styxc,'(i6)') NRKNOT_styx

  A=NTRIANc//'     0     0     0'//NRKNOT_styxc//'     0'

  write(1,'(A36)') trim(A)

  if (levgeo_styx == 1) then
! cylindrical geometry in EIRENE, LZ = length of the cyclinder
    do i=1,8
     read(2,'(A72)') A
     B=trim(A)
     nc=len(trim(A))
     write(ncc,'(i3)') nc
     format='(A'//trim(adjustl(ncc))//')'
     write(1,format) trim(A)
  enddo

  read(2,*)

! cm (LZ already in cm, see init_eirene and make_triangles)
  write(LZc,'(e12.4)') LZ

  A='  0.0000E 00  0.0000E 00'//LZc

  write(1,'(A36)') trim(A)

  elseif (levgeo_styx == 2) then

    do i=1,6
      read(2,'(A72)') A
      B=trim(A)
      nc=len(trim(A))
      write(ncc,'(i3)') nc
      format='(A'//trim(adjustl(ncc))//')'
      write(1,format) trim(A)
    enddo

    read(2,*)

    A='FTF'
    nc=len(trim(A))
    write(ncc,'(i3)') nc
    format='(A'//trim(adjustl(ncc))//')'
    write(1,format) trim(adjustl(A))
    write(NTTRA_styxc,'(i6)') NTTRA_styx
    A='     1     0'//NTTRA_styxc//'     0'
    nc=len(trim(A))
    write(ncc,'(i3)') nc
    format='(A'//trim(adjustl(ncc))//')'
    write(1,format) trim(A)
    write(ROA_styxc,'(e12.4)') ROA_styx
    A='  0.0000E 00  0.0000E 00  3.6000E 02  3.6000E 02'//ROA_styxc
    nc=len(trim(A))
    write(ncc,'(i3)') nc
    format='(A'//trim(adjustl(ncc))//')'
    write(1,format) trim(A)

    read(2,*)
    read(2,*)

  endif


  do while (A(1:12) .ne. '* REFLECTING')
    read(2,'(A72)') A
    B=trim(A)
    nc=len(trim(A))
    write(ncc,'(i3)') nc
    format='(A'//trim(adjustl(ncc))//')'
    write(1,format) trim(A)
  enddo
  
  do i=1,2
    read(2,'(A72)') A
    B=trim(A)
    nc=len(trim(A))
    write(ncc,'(i3)') nc
    format='(A'//trim(adjustl(ncc))//')'
    write(1,format) trim(A)
  enddo
  
  read(2,*)
  write(1,'(A24)') '     1     2     2     0'

  do i=1,2
    read(2,'(A72)') A
    B=trim(A)
    nc=len(trim(A))
    write(ncc,'(i3)') nc
    format='(A'//trim(adjustl(ncc))//')'
    write(1,format) trim(A)
  enddo

  write(1,'(A35)') ' 1.0000E 00  0.0000E 00  0.0000E 00'
  read(2,'(A72)') A
  nc=len(trim(A))
  write(ncc,'(i3)') nc
  format='(A'//trim(adjustl(ncc))//')'
  write(1,format) trim(A)

  do while (A(1:17) .ne. '* ATOMIC REACTION')
    read(2,'(A72)') A
    B=trim(A)
    nc=len(trim(A))
    write(ncc,'(i3)') nc
    format='(A'//trim(adjustl(ncc))//')'
    write(1,format) trim(A)
  enddo

  read(2,'(i6)') nreac

  !! include all additionnal reactions (io/rc and cx for each impurity species

  ncx=0
  do isp=2,global_parameters%n_species
    ncx=ncx+global_parameters%element_list(isp)%ncx
  enddo

  write(1,'(i6)') nreac + (global_parameters%n_species-1)*2 +ncx

  do i=1,nreac
    read(2,'(A72)') A
    B=trim(A)
    nc=len(trim(A))
    write(ncc,'(i3)') nc
    format='(A'//trim(adjustl(ncc))//')'
    write(1,format) trim(A)
  enddo

    
  !!! now add all reactions needed for the various species involved
  !!! assumes that species 1 is one of the hydrogen isotopes

  ireac=nreac

  do isp =2,global_parameters%n_species
    ireac=ireac+1

    ! later to be defined as input
    yearc="96"
    symbol=global_parameters%element_list(isp)%symbol
    call eirene_lowercase(symbol)

    ! ionization rate coefficient
    write(ireacc,'(i3)') ireac
    write(massc,'(i3)') nint(global_parameters%element_list(isp)%mass)
    A=ireacc//' ADAS   H.4 scd'//yearc//'    EI   0'//adjustr(massc)
    nc=len(trim(A))
    write(ncc,'(i3)') nc
    format='(A'//trim(adjustl(ncc))//')'
    write(1,format) trim(A)
    A='    '//symbol//'   1'
    nc=len(trim(A))
    write(ncc,'(i3)') nc
    format='(A'//trim(adjustl(ncc))//')'
    write(1,format) trim(A)

    do icx=1,global_parameters%element_list(isp)%ncx
      ireac=ireac+1
      write(ireacc,'(i3)') ireac
      A=ireacc//' '//global_parameters%element_list(isp)%cxdatas(icx)%cx_database1
      nc=len(trim(A))
      write(ncc,'(i3)') nc
      format='(A'//trim(adjustl(ncc))//')'
      write(1,format) trim(A)
      ! same reaction index (cross section + rate coefficient)
      A=ireacc//' '//global_parameters%element_list(isp)%cxdatas(icx)%cx_database2
      nc=len(trim(A))
      write(ncc,'(i3)') nc
      format='(A'//trim(adjustl(ncc))//')'
      write(1,format) trim(A)
    enddo
   
    ireac=ireac+1
          
    ! recombination rate coefficient
    write(ireacc,'(i3)') ireac 
    A=ireacc//' ADAS   H.4 acd'//yearc//'    RC   0'//adjustr(massc)
    nc=len(trim(A))
    write(ncc,'(i3)') nc
    format='(A'//trim(adjustl(ncc))//')'
    write(1,format) trim(A)
    A='    '//symbol//'   1'
    nc=len(trim(A))
    write(ncc,'(i3)') nc
    format='(A'//trim(adjustl(ncc))//')'
    write(1,format) trim(A)

  enddo    

  if (sputer_on) then
      select case (wall_mat)
        case("W")
        A=' 13 ADAS   H.4 scd50    EI   0184'
        nc=len(trim(A))
        write(ncc,'(i3)') nc
        format='(A'//trim(adjustl(ncc))//')'
        write(1,format) trim(A)
        A='    w    1'
        nc=len(trim(A))
        write(ncc,'(i3)') nc
        format='(A'//trim(adjustl(ncc))//')'
        write(1,format) trim(A)
      end select
  endif

  do while (A(1:29) .ne. '* NEUTRAL ATOMS SPECIES CARDS')
    read(2,'(A72)') A
    B=trim(A)
    nc=len(trim(A))
    write(ncc,'(i3)') nc
    format='(A'//trim(adjustl(ncc))//')'
    write(1,format) trim(A)
  enddo

!  if (sputer_on) then
    read(2,'(i6)') nsp
!    if (nsp > 1) then
!      write(*,*) ' More than one atomic species, writing eirene input file with sputtering not ready ....'
!      write(*,*) ' Turn off sputtering in EIRENE coupling'
!      call eirene_exit_own(1)
!    endif
    write(1,'(i5)') global_parameters%n_species
!  else
!    read(2,'(A72)') A
!    B=trim(A)
!    nc=len(trim(A))
!    write(ncc,'(i3)') nc
!    format='(A'//trim(adjustl(ncc))//')'
!    write(1,format) trim(A)
!  endif

  read(2,'(A72)') A
! now set the right isotope and mass
  if (A(4:11) .ne. 'H      ' .and. A(12:14).ne.'  1') then
    write(*,*) 'Hydrogen is not species 1, exit ...'
    call eirene_exit_own(1) 
  endif

  if (global_parameters%element_list(1)%symbol == 'D' ) then
    A(4:11) ='D       '
    A(12:14)='  2'
  elseif (global_parameters%element_list(1)%symbol == 'T') then
    A(4:11) ='T       '
    A(12:14)='  3'
  elseif (global_parameters%element_list(1)%symbol == 'H') then
    A(4:11) ='H       '
    A(12:14)='  1'
  endif

  nc=len(trim(A))
  write(ncc,'(i3)') nc
  format='(A'//trim(adjustl(ncc))//')'
  
  write(1,format) trim(A)

  ! get number of reactions for hydrogen
  read(A(34:35),'(i2)') nreacH

  do i=1,2*nreacH
    read(2,'(A72)') A
    B=trim(A)
    nc=len(trim(A))
    write(ncc,'(i3)') nc
    format='(A'//trim(adjustl(ncc))//')'
    write(1,format) trim(A)
  enddo

! same indexing of reactions as before
  ireac=nreac
  do isp=2,global_parameters%n_species
    ireac=ireac+1
    write(ispc,'(i2)') isp
    symbol=global_parameters%element_list(isp)%symbol
    write(massc,'(i3)') nint(global_parameters%element_list(isp)%mass)
    write(Zc,'(i3)') global_parameters%element_list(isp)%Z
    nreacisp=global_parameters%element_list(isp)%ncx+1
    write(nreacispc,'(i2)') nreacisp
    ! assumes ncx+1 reactions per species (recombination: ion)
    A=adjustr(ispc)//' '//adjustl(symbol)//'      '//adjustr(massc)//adjustr(Zc)//'  1  0'//' '//adjustr(ispc)//' '//adjustr(ispc)//'  0 '//adjustr(nreacispc)//'  0  0'
    nc=len(trim(A))
    write(ncc,'(i3)') nc
    format='(A'//trim(adjustl(ncc))//')'
    write(1,format) trim(A)
    write(ireacc,'(i3)') ireac
    ! here ispc is the index for the corresponding ions
    ising=singly_charged_ions(isp)
    write(isingc,'(i2)') ising
    A='   '//adjustr(ireacc)//'   115  '//adjustr(isingc)//'14     0 00000'
    nc=len(trim(A))
    write(ncc,'(i3)') nc
    format='(A'//trim(adjustl(ncc))//')'
    write(1,format) trim(A)
    write(chic,'(e12.5)') -1.d0*global_parameters%element_list(isp)%amdatas(1)%ionization_potential
    A=chic//' 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E 00'
    nc=len(trim(A))
    write(ncc,'(i3)') nc
    format='(A'//trim(adjustl(ncc))//')'
    write(1,format) trim(A)
    do icx=1,global_parameters%element_list(isp)%ncx
      ireac=ireac+1
      write(ireacc,'(i3)') ireac
      ibulk=global_parameters%element_list(isp)%cxdatas(icx)%ibulk
      iscd1=global_parameters%element_list(isp)%cxdatas(icx)%iscd1
      iscd2=global_parameters%element_list(isp)%cxdatas(icx)%iscd2
      iscde=global_parameters%element_list(isp)%cxdatas(icx)%iscde
      A='   '//ireacc//adjustr(ibulk)//adjustr(iscd1)//adjustr(iscd2)//adjustr(iscde)
      nc=len(trim(A))
      write(ncc,'(i3)') nc
      format='(A'//trim(adjustl(ncc))//')'
      write(1,format) trim(A)
      A=' 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E 00'
      nc=len(trim(A))
      write(ncc,'(i3)') nc
      format='(A'//trim(adjustl(ncc))//')'
      write(1,format) trim(A)
    enddo
    ! skip recombination
    ireac=ireac+1
  enddo

  if (sputer_on) then
      select case (wall_mat)

      case("Be")
      
        A=' 2 Be        9  4  1  0  2  2  0  1  0  0'
        nc=len(trim(A))
        write(ncc,'(i3)') nc
        format='(A'//trim(adjustl(ncc))//')'
        write(1,format) trim(A)

        A='    13   115   214     0 00000'
        nc=len(trim(A))
        write(ncc,'(i3)') nc
        format='(A'//trim(adjustl(ncc))//')'
        write(1,format) trim(A)

        A=' -7.9800E 00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E 00'
        nc=len(trim(A))
        write(ncc,'(i3)') nc
        format='(A'//trim(adjustl(ncc))//')'
        write(1,format) trim(A)

      case("C")
      
        A=' 2 C       12  6  1  0  2  2  0  1  0  0'
        nc=len(trim(A))
        write(ncc,'(i3)') nc
        format='(A'//trim(adjustl(ncc))//')'
        write(1,format) trim(A)

        A='    13   115   214     0 00000'
        nc=len(trim(A))
        write(ncc,'(i3)') nc
        format='(A'//trim(adjustl(ncc))//')'
        write(1,format) trim(A)

        A=' -7.9800E 00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E 00'
        nc=len(trim(A))
        write(ncc,'(i3)') nc
        format='(A'//trim(adjustl(ncc))//')'
        write(1,format) trim(A)
    
      case("W")

        A=' 2 W       184 74  1  0  2  2  0  1  0  0'
        nc=len(trim(A))
        write(ncc,'(i3)') nc
        format='(A'//trim(adjustl(ncc))//')'
        write(1,format) trim(A)

        A='    13   115   214     0 00000'
        nc=len(trim(A))
        write(ncc,'(i3)') nc
        format='(A'//trim(adjustl(ncc))//')'
        write(1,format) trim(A)

        A=' -7.9800E 00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E 00'
        nc=len(trim(A))
        write(ncc,'(i3)') nc
        format='(A'//trim(adjustl(ncc))//')'
        write(1,format) trim(A)

    end select

  endif

  do while (A(1:33) .ne. '* NEUTRAL MOLECULES SPECIES CARDS')
    read(2,'(A72)') A
    B=trim(A)
    nc=len(trim(A))
    write(ncc,'(i3)') nc 
    format='(A'//trim(adjustl(ncc))//')'
    write(1,format) trim(A)
  enddo

  read(2,'(A72)') A
  B=trim(A)
  nc=len(trim(A))
  write(ncc,'(i3)') nc
  format='(A'//trim(adjustl(ncc))//')'
  write(1,format) trim(A)

  read(2,'(A72)') A
! now set the right isotope and mass
  if (A(4:11) .ne. 'H2     ' .and. A(12:14).ne.'  2') then
    write(*,*) 'Di-hydrogen molecule is not species 1, exit ...'
    call eirene_exit_own(1) 
  endif

 if (global_parameters%element_list(1)%symbol == 'D' ) then
   A(4:11) ='D2      '
   A(12:14)='  4'
 elseif (global_parameters%element_list(1)%symbol == 'T') then
   A(4:11) ='T2      '
   A(12:14)='  6'
 elseif (global_parameters%element_list(1)%symbol == 'H') then
   A(4:11) ='H2      '
   A(12:14)='  2'
 endif

  nc=len(trim(A))
  write(ncc,'(i3)') nc
  format='(A'//trim(adjustl(ncc))//')'
  
  write(1,format) trim(A)

  do while (A(1:24) .ne. '* TEST ION SPECIES CARDS')
    read(2,'(A72)') A
    B=trim(A)
    nc=len(trim(A))
    write(ncc,'(i3)') nc
    format='(A'//trim(adjustl(ncc))//')'
    write(1,format) trim(A)
  enddo

  read(2,'(A72)') A
  B=trim(A)
  nc=len(trim(A))
  write(ncc,'(i3)') nc
  format='(A'//trim(adjustl(ncc))//')'
  write(1,format) trim(A)

  read(2,'(A72)') A
! now set the right isotope and mass
  if (A(4:11) .ne. 'H2+    ' .and. A(12:14).ne.'  2') then
    write(*,*) 'Di-hydrogen molecular ion is not species 1, exit ...'
    call eirene_exit_own(1) 
  endif

 if (global_parameters%element_list(1)%symbol == 'D' ) then
    A(4:11) ='D2+     '
    A(12:14)='  4'
 elseif (global_parameters%element_list(1)%symbol == 'T') then
    A(4:11) ='T2+     '
    A(12:14)='  6'
 elseif (global_parameters%element_list(1)%symbol == 'H') then
    A(4:11) ='H2+     '
    A(12:14)='  2'
 endif

  nc=len(trim(A))
  write(ncc,'(i3)') nc
  format='(A'//trim(adjustl(ncc))//')'
  
  write(1,format) trim(A)

  do while (A(1:24) .ne. '* BULK ION SPECIES CARDS')
    read(2,'(A72)') A
    B=trim(A)
    nc=len(trim(A))
    write(ncc,'(i3)') nc
    format='(A'//trim(adjustl(ncc))//')'
    write(1,format) trim(A)
  enddo

!  if (sputer_on) then
  read(2,'(i6)') nsp
!    if (nsp > 1) then
!      write(*,*) ' More than one bulk ion species, writing eirene input file with sputtering not ready ....'
!      write(*,*) ' Turn off sputtering in EIRENE coupling'
!      call eirene_exit_own(1)
!    endif
   write(1,'(i5)') global_parameters%n_ions
!  else
!    read(2,'(A72)') A
!    B=trim(A)
!    nc=len(trim(A))
!    write(ncc,'(i3)') nc
!    format='(A'//trim(adjustl(ncc))//')'
!    write(1,format) trim(A)
!  endif
  
  read(2,'(A72)') A
! now set the right isotope and mass
  if (A(4:11) .ne. 'H+     ' .and. A(12:14).ne.'  1') then
    write(*,*) 'hydrogen ion is not species 1, exit ...'
    call eirene_exit_own(1) 
  endif

 if (global_parameters%element_list(1)%symbol == 'D' ) then
    A(4:11) ='D+      '
    A(12:14)='  2'
 elseif (global_parameters%element_list(1)%symbol == 'T') then
    A(4:11) ='T+      '
    A(12:14)='  3'
 elseif (global_parameters%element_list(1)%symbol == 'H') then
    A(4:11) ='H+      '
    A(12:14)='  1'
 endif

  nc=len(trim(A))
  write(ncc,'(i3)') nc
  format='(A'//trim(adjustl(ncc))//')'
  
  write(1,format) trim(A)

  ! get number of reactions for hydrogen
  read(A(34:35),'(i2)') nreacH

  do i=1,2*nreacH
    read(2,'(A72)') A
    B=trim(A)
    nc=len(trim(A))
    write(ncc,'(i3)') nc
    format='(A'//trim(adjustl(ncc))//')'
    write(1,format) trim(A)
  enddo

! same indexing of reactions as before, but additional loop on charge states now
! all ions needed for cx reactions for instance
  ireac=nreac
  iion=2

  do isp=2,global_parameters%n_species
    ! skip ionization
    ireac=ireac+1+global_parameters%element_list(isp)%ncx+1
    write(ispc,'(i2)') isp
    write(iionc,'(i2)') iion
    symbol=global_parameters%element_list(isp)%symbol
    write(massc,'(i3)') nint(global_parameters%element_list(isp)%mass)
    write(Zc,'(i3)') global_parameters%element_list(isp)%Z
 
    ! first charge state (recombination into neutrals)
    
    symbol_ion=adjustl(adjustr(symbol)//'+')
  
    ! assumes 1 reactions per species (recombination: ion)
    A=adjustr(iionc)//' '//adjustl(symbol_ion)//adjustr(massc)//adjustr(Zc)//'  1  1'//' '//adjustr(ispc)//' '//adjustr(ispc)//'  0  1  0  0'
    nc=len(trim(A))
    write(ncc,'(i3)') nc
    format='(A'//trim(adjustl(ncc))//')'
    write(1,format) trim(adjustl(A))
    write(ireacc,'(i3)') ireac
    ! here ispc is the index for the corresponding ions
    A='   '//adjustr(ireacc)//'   115  '//adjustr(ispc)//'11     0 00000'
    nc=len(trim(A))
    write(ncc,'(i3)') nc
    format='(A'//trim(adjustl(ncc))//')'
    write(1,format) trim(A)
    write(chic,'(e12.5)') global_parameters%element_list(isp)%amdatas(1)%ionization_potential
    A=chic//' 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E 00'
    nc=len(trim(A))
    write(ncc,'(i3)') nc
    format='(A'//trim(adjustl(ncc))//')'
    write(1,format) trim(adjustl(A))

    iion=iion+1

    ! other charge states, just background densities
    do iz=2,global_parameters%element_list(isp)%Z
      ! assumes 1 reactions per species (recombination: ion)
      write(izc,'(i2)') iz
      write(iionc,'(i2)') iion

      if (len(trim(adjustl(izc)))==1) then
        symbol_ion=adjustl(adjustr(symbol)//trim(adjustl(izc))//'+ ')
      else
        symbol_ion=adjustl(adjustr(symbol)//trim(adjustl(izc))//'+')
      endif


      A=adjustr(iionc)//' '//adjustl(symbol_ion)//adjustr(massc)//adjustr(Zc)//'  1'//adjustr(izc)//' '//adjustr(ispc)//' '//adjustr(ispc)//'  0  0  0  0'
      nc=len(trim(A))
      write(ncc,'(i3)') nc
      format='(A'//trim(adjustl(ncc))//')'
      write(1,format) trim(Adjustl(A))
      iion=iion+1
    enddo
      ! skip ionization
      !ireac=ireac+1
      !if (global_parameters%element_list(isp)%Z==1) iion=iion+1
  enddo

  if (sputer_on) then
    ! could be improved by reading number of reactions ... will crash if more than 1 reactions
    do i=1,2
      read(2,'(A72)') A
      B=trim(A)
      nc=len(trim(A))
      write(ncc,'(i3)') nc
      format='(A'//trim(adjustl(ncc))//')'
      write(1,format) trim(A)
    enddo
    
    select case (wall_mat)
      case("W")
        A=' 2 W+      184 74  1  1  2  2  0  0'
        nc=len(trim(A))
        write(ncc,'(i3)') nc
        format='(A'//trim(adjustl(ncc))//')'
        write(1,format) trim(A)

    end select
  endif

! requesting the right trim files (X_on_Y)

  do while (A(1:11) .ne. '*** 6. DATA')
    read(2,'(A72)') A
    B=trim(A)
    nc=len(trim(A))
    write(ncc,'(i3)') nc
    format='(A'//trim(adjustl(ncc))//')'
    write(1,format) trim(A)
  enddo

  read(2,'(A72)') A
  write(1,'(A72)') A
! path to TRIM database (must be copied locally)
  A='path = TRIM/'
  write(1,'(A72)') A
  
  do isp=1,global_parameters%n_species
    trim_file=trim(adjustl(global_parameters%element_list(isp)%symbol))//'_on_'//wall_mat
    write(1,'(A7)') trim_file   
  enddo

 ! write distributions explicitely (otherwise problems in input.f when many species)
  
  DATDc = '  0.0000E 00'
  do iatm=1,min(global_parameters%n_species-1,6)
    DATDc=trim(DATDc)//'  0.0000E 00' 
  enddo
  nc=len(trim(DATDc))
  write(ncc,'(i3)') nc
  format='(A'//trim(adjustl(ncc))//')'
  write(1,format) trim(adjustl(DATDc))

  DMLDc = '  0.0000E 00'

  ! max number set to 6 (format 6664 in input)
  do imol=1,6
    DMLDc=trim(DMLDc)//'  0.0000E 00' 
  enddo
  nc=len(trim(DMLDc))
  write(ncc,'(i3)') nc
  format='(A'//trim(adjustl(ncc))//')'
  write(1,format) trim(adjustl(DMLDc))

  ! max number set to 10 (arbitrarily)
  DIODc = '  0.0000E 00'
  do iion=1,6
    DIODc=DIODc//'  0.0000E 00' 
  enddo
  nc=len(trim(DIODc))
  write(ncc,'(i3)') nc
  format='(A'//trim(adjustl(ncc))//')'
  write(1,format) trim(adjustl(DIODc))
  
  DPLDc = '  0.0000E 00'
  do ipls=1,min(global_parameters%n_ions-1,6)
    DPLDc=trim(DPLDc)//'  0.0000E 00' 
  enddo
  nc=len(trim(DPLDc))
  write(ncc,'(i3)') nc
  format='(A'//trim(adjustl(ncc))//')'
  write(1,format) trim(adjustl(DPLDc))

  read(2,*)
  read(2,*)
  read(2,*)
  read(2,*)

  do while (A(1:11) .ne. '*** 7. DATA')
    read(2,'(A72)') A
    B=trim(A)
    nc=len(trim(A))
    write(ncc,'(i3)') nc
    format='(A'//trim(adjustl(ncc))//')'
    write(1,format) trim(A)
  enddo

  read(2,*)

  write(NSTRATAc,'(i6)') NSTRATA

  A=NSTRATAc
  write(1,'(A6)') A


  INDSRCc='     6'
  do i=1,NSTRATA-1
    INDSRCc=trim(INDSRCc)//'     6'
  enddo

  nc=6*NSTRATA
  write(ncc,'(i3)') nc
  format='(A'//trim(adjustl(ncc))//')'

  A=INDSRCc
  write(1,format) trim(A)

  read(2,*)


   do while (A(1:11) .ne. '*** 10. DAT')
    read(2,'(A72)') A
    B=trim(A)
    nc=len(trim(A))
    write(ncc,'(i3)') nc
    format='(A'//trim(adjustl(ncc))//')'
    write(1,format) trim(A)
  enddo

  read(2,*)
  !read(2,'(A72)') A
  !B=trim(A)
  !nc=len(trim(A))
  !write(ncc,'(i3)') nc
  !format='(A'//trim(adjustl(ncc))//')'
  !write(1,format) trim(A)

  nadv=3*global_parameters%n_ions
  write(nadvc,'(i3)') nadv

  !read(2,*)
 
  A='   '//nadvc//'     0     0     0     0     0'

  B=trim(A)
  nc=len(trim(A))
  write(ncc,'(i3)') nc
  format='(A'//trim(adjustl(ncc))//')'
  write(1,format) trim(A)

  read(2,'(A72)') A
  B=trim(A)
  nc=len(trim(A))
  write(ncc,'(i3)') nc
  format='(A'//trim(adjustl(ncc))//')'
  write(1,format) trim(A)

  do i=1,global_parameters%n_ions
    A='     3    -1    -1     1'
    nc=len(trim(A))
    write(ncc,'(i3)') nc
    format='(A'//trim(adjustl(ncc))//')'
    write(1,format) trim(A)
    A='     atom'
    nc=len(trim(A))
    write(ncc,'(i3)') nc
    format='(A'//trim(adjustl(ncc))//')'
    write(1,format) trim(A)
    A='     atom                 atom'
    nc=len(trim(A))
    write(ncc,'(i3)') nc
    format='(A'//trim(adjustl(ncc))//')'
    write(1,format) trim(A)
  enddo

  do i=1,global_parameters%n_ions
    A='     3    -1    -1     2'
    nc=len(trim(A))
    write(ncc,'(i3)') nc
    format='(A'//trim(adjustl(ncc))//')'
    write(1,format) trim(A)
    A='    molec'
    nc=len(trim(A))
    write(ncc,'(i3)') nc
    format='(A'//trim(adjustl(ncc))//')'
    write(1,format) trim(A)
    A='    molec                molec'
    nc=len(trim(A))
    write(ncc,'(i3)') nc
    format='(A'//trim(adjustl(ncc))//')'
    write(1,format) trim(A)
  enddo

  do i=1,global_parameters%n_ions
    A='     3    -1    -1     3'
    nc=len(trim(A))
    write(ncc,'(i3)') nc
    format='(A'//trim(adjustl(ncc))//')'
    write(1,format) trim(A)
    A='     tion'
    nc=len(trim(A))
    write(ncc,'(i3)') nc
    format='(A'//trim(adjustl(ncc))//')'
    write(1,format) trim(A)
    A='     tion                 tion'
    nc=len(trim(A))
    write(ncc,'(i3)') nc
    format='(A'//trim(adjustl(ncc))//')'
    write(1,format) trim(A)
  enddo

  read(2,*)

  do while (A(1:11) .ne. '*** 11. DAT')
    read(2,'(A72)') A
    B=trim(A)
    nc=len(trim(A))
    write(ncc,'(i3)') nc
    format='(A'//trim(adjustl(ncc))//')'
    write(1,format) trim(A)
  enddo

  
  read(2,'(A72)') A
  B=trim(A)
  nc=len(trim(A))
  write(ncc,'(i3)') nc
  format='(A'//trim(adjustl(ncc))//')'
  write(1,format) trim(A)
  
  TRCSRCc='T'
  do i=1,NSTRATA
    TRCSRCc=trim(TRCSRCc)//'T'
  enddo

  nc=NSTRATA+1
  write(ncc,'(i3)') nc
  format='(A'//trim(adjustl(ncc))//')'

  A=TRCSRCc
  write(1,format) trim(A)
  
  read(2,'(A72)') A

  do i=1,2
    read(2,'(A72)') A
    B=trim(A)
    nc=len(trim(A))
    write(ncc,'(i3)') nc
    format='(A'//trim(adjustl(ncc))//')'
    write(1,format) trim(A)
  enddo

! test for tallies (all tallies computed if all_tal)

  all_tal=.true.

  if (all_tal) then
! no tallies are switched off
    NLTVOUT=0
    write(NLTVOUTc,'(i6)') NLTVOUT
    A=NLTVOUTc
    write(1,'(A6)') A

  else

    if (direct_coupling) then
! for atoms, switch off all tallies except (9, 33, 38, 97),(15, 39, 44, 98),(21, 45, 50, 99) ; 100-12=88
      NLTVOUT=88
      write(NLTVOUTc,'(i6)') NLTVOUT
      A=NLTVOUTc
      write(1,'(A6)') A
      write(1,'(A72)') '    -1    -2    -3    -4    -5    -6    -7    -8   -10   -11   -12   -13'
      write(1,'(A72)') '   -14   -16   -17   -18   -19   -20   -22   -23   -24   -25   -26   -27'
      write(1,'(A72)') '   -28   -29   -30   -31   -32   -34   -35   -36   -37   -40   -41   -42'
      write(1,'(A72)') '   -43   -46   -47   -48   -49   -51   -52   -53   -54   -55   -56   -57'
      write(1,'(A72)') '   -58   -59   -60   -61   -62   -63   -64   -65   -66   -67   -68   -69'
      write(1,'(A72)') '   -70   -71   -72   -73   -74   -75   -76   -77   -78   -79   -80   -81'
      write(1,'(A72)') '   -82   -83   -84   -85   -86   -87   -88   -89   -90   -91   -92   -93'
      write(1,'(A72)') '   -94   -95   -96  -100'
    else
! for atoms, switch off all tallies except (1, 5, 85, 89, 93),(2, 6, 86, 90, 94),(3, 7, 87, 91, 95) 100-15=85
      NLTVOUT=95
      write(NLTVOUTc,'(i6)') NLTVOUT
      A=NLTVOUTc
      write(1,'(A6)') A
      write(1,'(A72)') '    -4    -8   -9    -10   -11   -12   -13   -14   -15   -16   -17   -18'
      write(1,'(A72)') '   -19   -20   -21   -22   -23   -24   -25   -26   -27   -28   -29   -30'
      write(1,'(A72)') '   -31   -32   -33   -34   -35   -36   -37   -38   -39   -40   -41   -42'
      write(1,'(A72)') '   -43   -44   -45   -46   -47   -48   -49   -50   -51   -52   -53   -54'
      write(1,'(A72)') '   -55   -56   -57   -58   -59   -60   -61   -62   -63   -64   -65   -66'
      write(1,'(A72)') '   -67   -68   -69   -70   -71   -72   -73   -74   -75   -76   -77   -78'
      write(1,'(A72)') '   -79   -80   -81   -82   -83   -84   -88   -92   -96   -97   -98   -99'
      write(1,'(A72)') '  -100'

   endif

! no surface tallies deactivated
   NLTSOUT=0
   write(NLTSOUTc,'(i6)') NLTSOUT
   A=NLTSOUTc
   write(1,'(A6)') A

  endif

  do i=1,9
    read(2,*)
  enddo

  do while (A(1:12) .ne. '*** 13. DATA')
    read(2,'(A72)') A
     B=trim(A)
     nc=len(trim(A))
     write(ncc,'(i3)') nc
     format='(A'//trim(adjustl(ncc))//')'
     write(1,format) trim(A)
  enddo

  read(2,*)

  write(nprnlic,'(i6)') nprnli_styx

  A=trim(nprnlic)

  write(1,'(A6)') A

  write(nptstc,'(i6)') nptst_styx

  A=trim(nptstc)//'     1'

  write(1,'(A12)') trim(A)

  write(dtimvc,'(e12.4)') dtimv_styx

  A=trim(dtimvc)//'  0.0000E 00'

  write(1,'(A24)') A

  write(1,'(A33)') '** 13.A DATA FOR SNAPSHOT TALLIES'

  write(1,'(A6)') '     0'

  do while (A(1:12) .ne. '*** 14. DATA')
    read(2,'(A72)') A
    B=trim(A)
    nc=len(trim(A))
    write(ncc,'(i3)') nc
    format='(A'//trim(adjustl(ncc))//')'
    write(1,format) trim(A)
  enddo


! currently no information read from block 14

  read(2,'(A72)') A
  B=trim(A)
  nc=len(trim(A))
  write(ncc,'(i3)') nc
  format='(A'//trim(adjustl(ncc))//')'
  write(1,format) trim(A)

  close(2)

end subroutine
