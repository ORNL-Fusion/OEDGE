!dr  Nov. 07: renamed from HGAMMA to Ba_gamma, and called from diagno module.
 
!pb  24.11.06: mistyped SGSM_BGK changed to SGMS_BGK
 
      SUBROUTINE EIRENE_Ba_gamma (IST,IAD1,IAD2,IAD3,IAD4,IAD5,IADS)
c
C  SUBROUTINE FOR H-GAMMA EMISSIVITY. (BALMER SERIES)
C  CALLED FROM EIRENE, SECTION DIAGNO, SUBR. SIGAL
C  THE Ba_gamma EMISSIVITY PROFILE (PHOTONS/S/CM**3) IS COMPUTED
C  AND WRITTEN ONTO TALLIES ADDV(IAD1,...),... FOR STRATUM NO. IST
C  IAD1: CONTRIBUTION LINEAR IN H   -ATOM      DENSITY
C  IAD2: CONTRIBUTION LINEAR IN H+  -ION       DENSITY
C  IAD3: CONTRIBUTION LINEAR IN H2  -MOLEC.    DENSITY
C  IAD4: CONTRIBUTION LINEAR IN H2+ -MOLEC.ION DENSITY
C  IAD5: CONTRIBUTION LINEAR IN H-  -NEG. ION  DENSITY
C  IADS: SUM OVER ALL CONTRINUTIONS
C
      USE EIRMOD_PRECISION
      USE EIRMOD_PARMMOD
      USE EIRMOD_COMUSR
      USE EIRMOD_CESTIM
      USE EIRMOD_CADGEO
      USE EIRMOD_CCONA
      USE EIRMOD_CLOGAU
      USE EIRMOD_CUPD
      USE EIRMOD_COMSIG
      USE EIRMOD_CGRID
      USE EIRMOD_CZT1
      USE EIRMOD_CTRCEI
      USE EIRMOD_CGEOM
      USE EIRMOD_CSDVI
      USE EIRMOD_CSDVI_BGK
      USE EIRMOD_CSDVI_COP
      USE EIRMOD_COMPRT
      USE EIRMOD_COMSOU
      USE EIRMOD_CLGIN
      USE EIRMOD_COUTAU
      USE EIRMOD_COMXS
      USE EIRMOD_CSPEI
 
      IMPLICIT NONE
C
      INTEGER, INTENT(IN) :: IAD1, IAD2, IAD3, IAD4, IAD5, IADS, IST
 
      REAL(DP) :: DA51(0:8,0:8)
      REAL(DP) :: DP51(0:8,0:8)
      REAL(DP) :: DM51(0:8,0:8)
      REAL(DP) :: DI51(0:8,0:8)
      REAL(DP) :: DN51(0:8,0:8)
 
      REAL(DP) :: RHMH2(0:8), RH2PH2(0:8,0:8), FP(6)
      REAL(DP) :: DNML5, DION5, DMOL5, DEJ, RATIO2, RATIO7, TEI, DPLS5,
     .          SIGADD1, SIGADD2, SIGADD3, SIGADD4, SIGADD5, DATM5, TEF,
     .          DEF, DA, DPP, DM, DI, SIGADD, DN,
     .          FACT,
     .          FAC21, FAC31, FAC41, FAC51, FAC61,
     .          FAC32, FAC42, FAC52, FAC62,
     .          FAC43, FAC53, FAC63,
     .          POWALF1, POWALF2,
     .          POWALF3, POWALF4, POWALF5, DE, TE, POWALF,
     .          RCMIN, RCMAX
      INTEGER :: IRC, IFIRST, NCELC, IERROR, IR, I, J, JFEXMN, JFEXMX
      REAL(DP), ALLOCATABLE :: OUTAU(:)
      CHARACTER(8) :: FILNAM
      CHARACTER(4) :: H123
      CHARACTER(9) :: REAC
      CHARACTER(3) :: CRC
      CHARACTER(6) :: CISTRA
C
      SAVE
C
      DATA IFIRST/0/
C  RADIATIVE TRANSITION RATES (1/S)
C  BALMER ALPHA
      FAC32=4.410E7
C  BALMER BETA
      FAC42=8.419E6
C  BALMER GAMMA
      FAC52=2.530E6
C  BALMER DELTA
      FAC62=9.732E5
C
C  LYMAN ALPHA
      FAC21=4.699E8
C  LYMAN BETA
      FAC31=5.575E7
C  LYMAN GAMMA
      FAC41=1.278E7
C  LYMAN DELTA
      FAC51=4.125E6
C  LYMAN EPSILON
      FAC61=1.644E6
C
C  PASCHEN ALPHA
      FAC43=8.986E6
C  PASCHEN BETA
      FAC53=2.201E6
C  PASCHEN GAMMA
      FAC63=7.783E5
C
C
 
C
C  INITIALIZE ATOMIC DATA ARRAYS
C
      IF (IFIRST.EQ.0) THEN
        IFIRST=1
        IERROR=0
C
C  READ REDUCED POPULATION COEFFICIENT FOR HYDR. ATOMS FROM FILE AMJUEL
C  AND PUT THEM FROM CREAC(..,..,IR) ONTO DA,DPP,DM,DI, AND DN ARRAY
C
        IR=NREACI+1
        IF (IR.GT.NREAC) THEN
          WRITE (iunout,*) 'FROM SUBROUTINE EIRENE_Ba_gamma: '
          CALL EIRENE_MASPRM('NREAC',5,NREAC,'IR',2,IR,IERROR)
          CALL EIRENE_EXIT_OWN(1)
        ENDIF
C
        FILNAM='AMJUEL  '
        H123='H.12'
        CRC='OT '
        FP = 0._DP
        RCMIN = -HUGE(1._DP)
        RCMAX =  HUGE(1._DP)
        JFEXMN = 0
        JFEXMX = 0
C
C  H(n=5)/H(n=1)
        REAC='2.1.5d   '
        REACDAT(NREACI+1)%LOTH = .FALSE.
        CALL EIRENE_SLREAC(NREACI+1,FILNAM,H123,REAC,CRC,
     .              RCMIN, RCMAX, FP, JFEXMN, JFEXMX,'  ',0)
        DO J=1,9
          DO I=1,9
            DA51(J-1,I-1)=REACDAT(NREACI+1)%OTH%POLY%DBLPOL(J,I)
          ENDDO
        ENDDO
C  H(n=5)/H+
        REAC='2.1.8d   '
        REACDAT(NREACI+1)%LOTH = .FALSE.
        CALL EIRENE_SLREAC(NREACI+1,FILNAM,H123,REAC,CRC,
     .              RCMIN, RCMAX, FP, JFEXMN, JFEXMX,'  ',0)
        DO J=1,9
          DO I=1,9
            DP51(J-1,I-1)=REACDAT(NREACI+1)%OTH%POLY%DBLPOL(J,I)
          ENDDO
        ENDDO
C  H(n=5)/H2(g)
        REAC='2.2.5d   '
        REACDAT(NREACI+1)%LOTH = .FALSE.
        CALL EIRENE_SLREAC(NREACI+1,FILNAM,H123,REAC,CRC,
     .              RCMIN, RCMAX, FP, JFEXMN, JFEXMX,'  ',0)
        DO J=1,9
          DO I=1,9
            DM51(J-1,I-1)=REACDAT(NREACI+1)%OTH%POLY%DBLPOL(J,I)
          ENDDO
        ENDDO
C  H(n=5)/H2+(g)
        REAC='2.2.14d  '
        REACDAT(NREACI+1)%LOTH = .FALSE.
        CALL EIRENE_SLREAC(NREACI+1,FILNAM,H123,REAC,CRC,
     .              RCMIN, RCMAX, FP, JFEXMN, JFEXMX,'  ',0)
        DO J=1,9
          DO I=1,9
            DI51(J-1,I-1)=REACDAT(NREACI+1)%OTH%POLY%DBLPOL(J,I)
          ENDDO
        ENDDO
C  H(n=5)/H-
        REAC='7.2d     '
        REACDAT(NREACI+1)%LOTH = .FALSE.
        CALL EIRENE_SLREAC(NREACI+1,FILNAM,H123,REAC,CRC,
     .              RCMIN, RCMAX, FP, JFEXMN, JFEXMX,'  ',0)
        DO J=1,9
          DO I=1,9
            DN51(J-1,I-1)=REACDAT(NREACI+1)%OTH%POLY%DBLPOL(J,I)
          ENDDO
        ENDDO
C
C  NOW READ RATIO OF DENSITIES:
C
C  FIRST: H-/H2
        FILNAM='AMJUEL  '
        H123='H.11'
        REAC='7.0a     '
        CRC='OT '
        REACDAT(NREACI+1)%LOTH = .FALSE.
        CALL EIRENE_SLREAC(NREACI+1,FILNAM,H123,REAC,CRC,
     .              RCMIN, RCMAX, FP, JFEXMN, JFEXMX,'  ',0)
        DO I=1,9
          RHMH2(I-1)=REACDAT(NREACI+1)%OTH%POLY%DBLPOL(I,1)
        ENDDO
 
C  NEXT : H2+/H2
        FILNAM='AMJUEL  '
        H123='H.12'
        REAC='2.0c     '
        CRC='OT '
C  2.0c INCLUDES ION CONVERION (CX) ON H2(V)
C  OLD VERSION (WITHOUT THIS CX) SHOULD BE RECOVERED BY
C  READING 2.0b INSTEAD, AND OMITTING THE H- CHANNEL 5.
C
CDR: IF CX ON H2(V) IS NOT INCLUDED IN A SPECIFIC NEUTRAL TRANSPORT EQUATION
CDR  (SEE INPUT BLOCK 4), THEN IT SHOULD NOT BE INCLUDED HERE EITHER.
C       REAC='2.0b    '
CDR
        REACDAT(NREACI+1)%LOTH = .FALSE.
        CALL EIRENE_SLREAC(NREACI+1,FILNAM,H123,REAC,CRC,
     .              RCMIN, RCMAX, FP, JFEXMN, JFEXMX,'  ',0)
        DO I=1,9
          DO J=1,9
            RH2PH2(I-1,J-1)=REACDAT(NREACI+1)%OTH%POLY%DBLPOL(I,J)
          ENDDO
        ENDDO
      ENDIF
C
C  END OF INITIALIZATION
C
      IF (IESTR.EQ.IST) THEN
C  NOTHING TO BE DONE
      ELSEIF (NFILEN.EQ.1.OR.NFILEN.EQ.2) THEN
        IESTR=IST
        CALL EIRENE_RSTRT(IST,NSTRAI,NESTM1,NESTM2,NADSPC,
     .             ESTIMV,ESTIMS,ESTIML,
     .             NSDVI1,SDVI1,NSDVI2,SDVI2,
     .             NSDVC1,SIGMAC,NSDVC2,SGMCS,
     .             NSBGK,SIGMA_BGK,NBGV_STAT,SGMS_BGK,
     .             NSCOP,SIGMA_COP,NCPV_STAT,SGMS_COP,
     .             NSIGI_SPC,TRCFLE)
      ELSEIF ((NFILEN.EQ.6.OR.NFILEN.EQ.7).AND.IST.EQ.0) THEN
        IESTR=IST
        CALL EIRENE_RSTRT(IST,NSTRAI,NESTM1,NESTM2,NADSPC,
     .             ESTIMV,ESTIMS,ESTIML,
     .             NSDVI1,SDVI1,NSDVI2,SDVI2,
     .             NSDVC1,SIGMAC,NSDVC2,SGMCS,
     .             NSBGK,SIGMA_BGK,NBGV_STAT,SGMS_BGK,
     .             NSCOP,SIGMA_COP,NCPV_STAT,SGMS_COP,
     .             NSIGI_SPC,TRCFLE)
      ELSE
        WRITE (iunout,*) 'ERROR IN Ba_GAMMA: DATA FOR STRATUM ISTRA= ',
     .                    IST
        WRITE (iunout,*) 'ARE NOT AVAILABLE. Ba_GAMMA ABANDONNED'
        RETURN
      ENDIF
C
C  LOOP OVER 2D MESH
C
      POWALF=0.
      POWALF1=0.
      POWALF2=0.
      POWALF3=0.
      POWALF4=0.
      POWALF5=0.
 
      IF (MAX(IAD1,IAD2,IAD3,IAD4,IAD5,IADS) > NADV) GOTO 999
      ADDV(IAD1,1:NRTAL) = 0.D0
      ADDV(IAD2,1:NRTAL) = 0.D0
      ADDV(IAD3,1:NRTAL) = 0.D0
      ADDV(IAD4,1:NRTAL) = 0.D0
      ADDV(IAD5,1:NRTAL) = 0.D0
 
      ADDV(IADS,1:NRTAL) = 0.D0
C
      DO 1000 NCELL=1,NSBOX
C
C  LOCAL BACKGROUND DATA ARE IN CELL NCELL
C  LOCAL TEST PARTICLE DATA ARE IN CELL NCELC
C
        NCELC=NCLTAL(NCELL)
C
        IF (NSTGRD(NCELL) > 0) CYCLE
 
        IF (LGVAC(NCELL,NPLS+1)) THEN
          TE=TVAC
          DE=DVAC
        ELSE
          TE=TEIN(NCELL)
          DE=DEIN(NCELL)
        ENDIF
C
        SIGADD1=0.
        SIGADD2=0.
        SIGADD3=0.
        SIGADD4=0.
        SIGADD5=0.
 
        IF (LGVAC(NCELL,NPLS+1)) GOTO 500
        DEF=LOG(DE*1.D-8)
        TEF=LOG(TE)
        DATM5=0.
        DPLS5=0.
        DMOL5=0.
        DION5=0.
        DNML5=0.
 
        DO 150 J=0,8
          DEJ=DEF**J
          DO 150 I=0,8
            TEI=TEF**I
            DATM5=DATM5+DA51(I,J)*TEI*DEJ
            DPLS5=DPLS5+DP51(I,J)*TEI*DEJ
            DMOL5=DMOL5+DM51(I,J)*TEI*DEJ
            DION5=DION5+DI51(I,J)*TEI*DEJ
            DNML5=DNML5+DN51(I,J)*TEI*DEJ
 
150     CONTINUE
        DATM5=EXP(DATM5)
        DPLS5=EXP(DPLS5)
        DMOL5=EXP(DMOL5)
        DION5=EXP(DION5)
        DNML5=EXP(DNML5)
 
 
C  RATIO OF DENSITIES: H- TO H2, COLL. EQUIL. IN VIBRATION
C  (ONLY TE-DEPENDENT)
 
        RATIO7=0
        DO 160 I=0,8
          TEI=TEF**I
          RATIO7=RATIO7+RHMH2(I)*TEI
160     CONTINUE
        RATIO7=EXP(RATIO7)
 
C  RATIO OF DENSITIES: H2+ TO H2, INCL. ION CONVERSION
C  RATIO OF DENSITIES: H2+ TO H2, EXCL. ION CONVERSION
 
        RATIO2=0
        DO 170 J=0,8
          DEJ=DEF**J
          DO 170 I=0,8
            TEI=TEF**I
            RATIO2=RATIO2+RH2PH2(I,J)*TEI*DEJ
170     CONTINUE
        RATIO2=EXP(RATIO2)
 
C
C  CHANNEL 1
C  H GAMMA SOURCE RATE:  PHOTONS/SEC/CM**3
C  LINEAR IN PDENA (IONIZATION)
C
        DO 200 IATM=1,NATMI
          IF (NCHARA(IATM).NE.1) GOTO 200
          DA=DATM5*PDENA(IATM,NCELC)
C  RADIATIVE TRANSITION PROB. LEVEL 5-->2 (1/SEC)
C  SIGADD: PHOTONS/SEC/CM**3
          SIGADD1=SIGADD1+DA*FAC52
200     CONTINUE
C
C  CHANNEL 2
C  H GAMMA SOURCE RATE:  PHOTONS/SEC/CM**3
C  LINEAR IN DIIN (RECOMBINATION)
C
        DO 205 IPLS=1,NPLSI
          IF (NCHARP(IPLS).NE.1.OR.NCHRGP(IPLS).NE.1) GOTO 205
          DPP=DPLS5*DIIN(IPLS,NCELL)
C  RADIATIVE TRANSITION PROB. LEVEL 5-->2 (1/SEC)
C  SIGADD: PHOTONS/SEC/CM**3
          SIGADD2=SIGADD2+DPP*FAC52
205     CONTINUE
C
C  CHANNEL 3
C  H GAMMA SOURCE RATE:  PHOTONS/SEC/CM**3
C  LINEAR IN PDENM (DISSOCIATION OF H2)
C
        DO 210 IMOL=1,NMOLI
          IF (NCHARM(IMOL).NE.2) GOTO 210
          DM=DMOL5*PDENM(IMOL,NCELC)
C  RADIATIVE TRANSITION PROB. LEVEL 5-->2 (1/SEC)
C  SIGADD: PHOTONS/SEC/CM**3
          SIGADD3=SIGADD3+DM*FAC52
210     CONTINUE
C
C  CHANNEL 4
C  H GAMMA SOURCE RATE:  PHOTONS/SEC/CM**3
C  LINEAR IN PDENI: (DISSOCIATION OF H2+)
C
C  REVISED: USE (PDENM * DENSITY RATIO H2+/H2) NOW, INSTEAD OF PDENI
C
C       DO 215 IION=1,NIONI
C         IF (NCHARI(IION).NE.2) GOTO 215
C         DI=DION5*PDENI(IION,NCELC)
C  RADIATIVE TRANSITION PROB. LEVEL 5-->2 (1/SEC)
C  SIGADD: PHOTONS/SEC/CM**3
C         SIGADD4=SIGADD4+DI*FAC52
C215     CONTINUE
        DO 215 IMOL=1,NMOLI
          IF (NCHARM(IMOL).NE.2) GOTO 215
          DI=DION5*PDENM(IMOL,NCELC)*RATIO2
C  RADIATIVE TRANSITION PROB. LEVEL 5-->2 (1/SEC)
C  SIGADD: PHOTONS/SEC/CM**3
          SIGADD4=SIGADD4+DI*FAC52
215     CONTINUE
C
C  CHANNEL 5
C  H GAMMA SOURCE RATE:  PHOTONS/SEC/CM**3
C  LINEAR IN H- DENSITY (CHARGE EXCHANGE RECOMBINATION)
C
C  REVISED: USE (PDENM * DENSITY RATIO H-/H2) NOW, INSTEAD OF PDENI
C
        DO 220 IMOL=1,NMOLI
          IF (NCHARM(IMOL).NE.2) GOTO 220
          DN=DNML5*PDENM(IMOL,NCELC)*RATIO7
C  RADIATIVE TRANSITION PROB. LEVEL 5-->2 (1/SEC)
C  SIGADD: PHOTONS/SEC/CM**3
          SIGADD5=SIGADD5+DN*FAC52
220     CONTINUE
C
500     CONTINUE
C
C
        SIGADD=SIGADD1+SIGADD2+SIGADD3+SIGADD4+SIGADD5
C
        ADDV(IAD1,NCELC)=ADDV(IAD1,NCELC)+SIGADD1*VOL(NCELL)
        ADDV(IAD2,NCELC)=ADDV(IAD2,NCELC)+SIGADD2*VOL(NCELL)
        ADDV(IAD3,NCELC)=ADDV(IAD3,NCELC)+SIGADD3*VOL(NCELL)
        ADDV(IAD4,NCELC)=ADDV(IAD4,NCELC)+SIGADD4*VOL(NCELL)
        ADDV(IAD5,NCELC)=ADDV(IAD5,NCELC)+SIGADD5*VOL(NCELL)
 
        ADDV(IADS,NCELC)=ADDV(IADS,NCELC)+SIGADD*VOL(NCELL)
C
C
C       FACT=E0052*ELCHA = 4.577E-19
        FACT= 4.577E-19
        POWALF1=POWALF1+SIGADD1*4.577E-19*VOL(NCELL)
        POWALF2=POWALF2+SIGADD2*4.577E-19*VOL(NCELL)
        POWALF3=POWALF3+SIGADD3*4.577E-19*VOL(NCELL)
        POWALF4=POWALF4+SIGADD4*4.577E-19*VOL(NCELL)
        POWALF5=POWALF5+SIGADD5*4.577E-19*VOL(NCELL)
 
C
        POWALF =POWALF +SIGADD *4.577E-19*VOL(NCELL)
C
1000  CONTINUE
 
      ADDV(IAD1,1:NSBOX_TAL)=ADDV(IAD1,1:NSBOX_TAL)/VOLTAL(1:NSBOX_TAL)
      ADDV(IAD2,1:NSBOX_TAL)=ADDV(IAD2,1:NSBOX_TAL)/VOLTAL(1:NSBOX_TAL)
      ADDV(IAD3,1:NSBOX_TAL)=ADDV(IAD3,1:NSBOX_TAL)/VOLTAL(1:NSBOX_TAL)
      ADDV(IAD4,1:NSBOX_TAL)=ADDV(IAD4,1:NSBOX_TAL)/VOLTAL(1:NSBOX_TAL)
      ADDV(IAD5,1:NSBOX_TAL)=ADDV(IAD5,1:NSBOX_TAL)/VOLTAL(1:NSBOX_TAL)
 
      ADDV(IADS,1:NSBOX_TAL)=ADDV(IADS,1:NSBOX_TAL)/VOLTAL(1:NSBOX_TAL)
 
      CALL EIRENE_LEER(2)
      CALL EIRENE_FTCRI(IST,CISTRA)
      IF (IST.GT.0) CALL EIRENE_MASBOX
     .   ('SUBR. Ba_GAMMA CALLED, FOR STRATUM NO. '//CISTRA)
      IF (IST.EQ.0)
     .CALL EIRENE_MASBOX('SUBR. Ba_GAMMA CALLED, FOR SUM OVER STRATA')
      CALL EIRENE_LEER(1)
      WRITE (iunout,*) ' AFTER INTEGRATION OVER COMPUTATIONAL DOMAIN'
      WRITE (iunout,*) ' TOTAL FLUX (AMP) AND POWER (WATT) BY BA-GAMMA:'
     .                  ,POWALF/FACT*ELCHA,POWALF
      WRITE (iunout,*) ' COUPL. TO GROUNDSTATE                        :'
     .                  ,POWALF1/FACT*ELCHA,POWALF1
      WRITE (iunout,*) ' COUPLING TO CONTINUUM                       :'
     .                  ,POWALF2/FACT*ELCHA,POWALF2
      WRITE (iunout,*) ' COUPLING TO MOLECULES                       :'
     .                  ,POWALF3/FACT*ELCHA,POWALF3
      WRITE (iunout,*) ' COUPLING TO MOL.IONS                        :'
     .                  ,POWALF4/FACT*ELCHA,POWALF4
      WRITE (iunout,*) ' COUPLING TO NEG.IONS                        :'
     .                  ,POWALF5/FACT*ELCHA,POWALF5
      CALL EIRENE_LEER(2)
 
      CALL EIRENE_INTTAL
     .  (ADDV,VOLTAL,IAD1,NADV,NSBOX_TAL,ADDVI(IAD1,IST),
     .             NR1TAL,NP2TAL,NT3TAL,NBMLT)
      CALL EIRENE_INTTAL
     .  (ADDV,VOLTAL,IAD2,NADV,NSBOX_TAL,ADDVI(IAD2,IST),
     .             NR1TAL,NP2TAL,NT3TAL,NBMLT)
      CALL EIRENE_INTTAL
     .  (ADDV,VOLTAL,IAD3,NADV,NSBOX_TAL,ADDVI(IAD3,IST),
     .             NR1TAL,NP2TAL,NT3TAL,NBMLT)
      CALL EIRENE_INTTAL
     .  (ADDV,VOLTAL,IAD4,NADV,NSBOX_TAL,ADDVI(IAD4,IST),
     .             NR1TAL,NP2TAL,NT3TAL,NBMLT)
      CALL EIRENE_INTTAL
     .  (ADDV,VOLTAL,IAD5,NADV,NSBOX_TAL,ADDVI(IAD5,IST),
     .             NR1TAL,NP2TAL,NT3TAL,NBMLT)
 
 
      CALL EIRENE_INTTAL
     .  (ADDV,VOLTAL,IADS,NADV,NSBOX_TAL,ADDVI(IADS,IST),
     .             NR1TAL,NP2TAL,NT3TAL,NBMLT)
C
      IF (NFILEN.EQ.1.OR.NFILEN.EQ.2) THEN
        IESTR=IST
        CALL EIRENE_WRSTRT(IST,NSTRAI,NESTM1,NESTM2,NADSPC,
     .              ESTIMV,ESTIMS,ESTIML,
     .              NSDVI1,SDVI1,NSDVI2,SDVI2,
     .              NSDVC1,SIGMAC,NSDVC2,SGMCS,
     .              NSBGK,SIGMA_BGK,NBGV_STAT,SGMS_BGK,
     .              NSCOP,SIGMA_COP,NCPV_STAT,SGMS_COP,
     .              NSIGI_SPC,TRCFLE)
C
        IRC=2
        ALLOCATE (OUTAU(NOUTAU))
        CALL EIRENE_WRITE_COUTAU (OUTAU, IUNOUT)
        WRITE (11,REC=IRC) OUTAU
        DEALLOCATE (OUTAU)
        IF (TRCFLE)   WRITE (iunout,*) 'WRITE 11  IRC= ',IRC
      ELSEIF ((NFILEN.EQ.6.OR.NFILEN.EQ.7).AND.IST.EQ.0) THEN
        IESTR=IST
        CALL EIRENE_WRSTRT(IST,NSTRAI,NESTM1,NESTM2,NADSPC,
     .              ESTIMV,ESTIMS,ESTIML,
     .              NSDVI1,SDVI1,NSDVI2,SDVI2,
     .              NSDVC1,SIGMAC,NSDVC2,SGMCS,
     .              NSBGK,SIGMA_BGK,NBGV_STAT,SGMS_BGK,
     .              NSCOP,SIGMA_COP,NCPV_STAT,SGMS_COP,
     .              NSIGI_SPC,TRCFLE)
C
        IRC=2
        ALLOCATE (OUTAU(NOUTAU))
        CALL EIRENE_WRITE_COUTAU (OUTAU, IUNOUT)
        WRITE (11,REC=IRC) OUTAU
        DEALLOCATE (OUTAU)
        IF (TRCFLE)   WRITE (iunout,*) 'WRITE 11  IRC= ',IRC
      ENDIF
C
      RETURN
999   CONTINUE
      WRITE (iunout,*) 'ERROR IN SUBR. Ba_gamma '
      WRITE (iunout,*) 'NO STORAGE AVAILBALE ON ADDITIONAL TALLY ADDV '
      WRITE (iunout,*) 'STORAGE REQUESTED FOR IADV= ',
     .             IAD1,IAD2,IAD3,IAD4,
     .             IAD5,IADS
      WRITE (iunout,*) 'CHECK INPUT BLOCK 10A '
      CALL EIRENE_EXIT_OWN(1)
      END
 
 
 
 
 
 
 
