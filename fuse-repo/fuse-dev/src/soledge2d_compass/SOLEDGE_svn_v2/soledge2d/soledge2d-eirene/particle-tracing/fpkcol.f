C  sept. 05: use only parallel velocity, vel=velpar,....
C            this is now made consistent in calling program folion.f
C  aug 06: move call to chctrc: pre-collision status at point of collision
C          and: return new velocity vector in full cartesian coord.
C               fetch new BVEC at point of collision
C
      SUBROUTINE EIRENE_FPKCOL(*,*)
C
C  FOKKER PLANCK ELASTIC COLLISION
C
      USE EIRMOD_PRECISION
      USE EIRMOD_PARMMOD
      USE EIRMOD_COMUSR
      USE EIRMOD_CESTIM
      USE EIRMOD_CCONA
      USE EIRMOD_CFPLK
      USE EIRMOD_CLOGAU
      USE EIRMOD_CUPD
      USE EIRMOD_CGRID
      USE EIRMOD_CGEOM
      USE EIRMOD_CZT1
      USE EIRMOD_COMPRT
      USE EIRMOD_CLGIN
      USE EIRMOD_COUTAU
      USE EIRMOD_COMXS
 
      IMPLICIT NONE
 
      REAL(DP) :: DUR, E0OLD, E0NEW, VNEW, WS, FAC, GYRO,
     .            BVEC_1(3), VVEC(3)
      INTEGER :: IOLD, EIRENE_LEARC2, NCELLT
      REAL(DP), EXTERNAL :: RANF_EIRENE
C  RETURN 1:  NOT IN USE
C  RETURN 2:  START COMPLETELY NEW TEST ION TRACK, SAME SPECIES
C
C  SAVE INCIDENT SPECIES: IOLD
      IOLD=IION
      E0OLD=E0
      NCELLT=NCLTAL(NCELL)
C
      X0=X0+VELX*ZT
      Y0=Y0+VELY*ZT
      Z0=Z0+VELZ*ZT
      TIME=TIME+ZT/VEL
      IF (LEVGEO.LE.3.AND.NLPOL) THEN
        IPOLG=NPCELL
      ELSEIF (NLPLG) THEN
        IPOLG=EIRENE_LEARC2(X0,Y0,NRCELL,NPANU,'FOLION 2     ')
      ELSEIF (NLFEM) THEN
        IPOLG=0
      ENDIF
      NLSRFX=.FALSE.
      NLSRFY=.FALSE.
      NLSRFZ=.FALSE.
      MRSURF=0
      MPSURF=0
      MTSURF=0
      MASURF=0
      MSURF=0
      IF (NLTRA) PHI=MOD(PHI-ATAN2(Z01,X01)+ATAN2(Z0,(RMTOR+X0)),PI2A)
      IF (NLTRC) CALL EIRENE_CHCTRC(X0,Y0,Z0,16,7)
C
255   CONTINUE
C
C
C  PRE COLLISION ESTIMATOR
C
      IF (NCLVI.GT.0) THEN
        WS=WEIGHT/SIGTOT
        CALL EIRENE_UPCUSR(WS,1)
      ENDIF
C
C
C  TEST FOR CORRECT CELL NUMBER AT COLLISION POINT
C  KILL PARTICLE, IF TOO LARGE ROUND OFF ERRORS DURING
C  PARTICLE TRACING
C
      IF (NLTEST) CALL EIRENE_CLLTST(*997)
      IF (ZT.GT.0.D0) THEN
C
C  FLIGHT WITH PARALLEL VELOCITY VEL=VELPAR (CM/SEC)
C  PARALLEL DISTANCE ZT (CM)
C  ENERGY RELAXATION CONSTANT TAUE
C
        DUR=ZT/VEL
        E0NEW=E0OLD*EXP(-DUR/TAUE)+1.5*TIIN(1,NCELL)*(1.-EXP(-DUR/TAUE))
        VNEW=RSQDVI(IOLD)*SQRT(E0NEW)
C
C  UPDATE ESTIMATORS EIIO,EIPL
        EIIO(NCELLT)=EIIO(NCELLT)+WEIGHT*(E0NEW-E0OLD)
        EIPL(NCELLT)=EIPL(NCELLT)-WEIGHT*(E0NEW-E0OLD)
C
        IF (.NOT.LCART) THEN
          FAC=SQRT(E0NEW/E0OLD)
          VELPAR=VELPAR*FAC
          VELPER=VELPER*FAC
 
 
C  NEW GYRO PHASE
          GYRO=RANF_EIRENE()*PI2A
C  BACK TO CARTESIAN COORDIANTES
          BVEC = (/ BBX, BBY, BBZ /)
          CALL EIRENE_B_PROJI
     .  (BVEC,BVEC_1,VVEC,SIGPAR*VELPAR,VELPER,GYRO)
          VELX = VVEC(1)
          VELY = VVEC(2)
          VELZ = VVEC(3)
          VEL=VNEW
          LCART=.TRUE.
        ELSE
          VEL=VNEW
        ENDIF
C  RETURN WITH FULL CARTESIAN VELOCITY VECTOR
        E0=E0NEW
        RETURN 2
      ENDIF
C
C  POST COLLISION ESTIMATOR
C
C     IF (NCLVI.GT.0) THEN
C       WS=WEIGHT/SIGTOT
C       CALL UPCUSR(WS,2)
C     ENDIF
      RETURN 2
C
997   CALL EIRENE_MASAGE
     .  ('ERROR IN FPKCOL,  DETECTED IN SUBR. CLLTST    ')
      CALL EIRENE_MASAGE
     .  ('PARTICLE IS KILLED                            ')
C   DETAILED PRINTOUT ALREADY DONE FROM SUBR. CLLTST
      IF (NLTRC) CALL EIRENE_CHCTRC(X0,Y0,Z0,16,18)
      GOTO 999
C
999   PTRASH(ISTRA)=PTRASH(ISTRA)-WEIGHT
      ETRASH(ISTRA)=ETRASH(ISTRA)-WEIGHT*E0
      LGPART=.FALSE.
      WEIGHT=0.
      CALL EIRENE_LEER(1)
      RETURN 2
      END
