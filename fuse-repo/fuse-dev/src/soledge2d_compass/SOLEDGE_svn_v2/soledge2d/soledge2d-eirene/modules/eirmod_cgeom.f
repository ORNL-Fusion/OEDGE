      MODULE EIRMOD_CGEOM
 
      USE EIRMOD_PRECISION
      USE EIRMOD_PARMMOD
 
      IMPLICIT NONE
 
      PRIVATE
 
      PUBLIC :: EIRENE_ALLOC_CGEOM, EIRENE_DEALLOC_CGEOM, 
     P          EIRENE_INIT_CGEOM,
     P          CELL_ELEM, CELL_LIST
 
      REAL(DP), PUBLIC, TARGET, ALLOCATABLE, SAVE ::
     R        RCGM1(:), RCGM2(:,:),   AREAG(:)
 
      REAL(DP), PUBLIC, POINTER, SAVE ::
     R VOLADD(:), VOLCOR(:), VOLG(:), VOLTAL(:), VOLTOT,
     R AREA(:),   CELDIA(:), XCOM(:), YCOM(:),
     R XPOINT(:), YPOINT(:)
 
      REAL(DP), PUBLIC, POINTER, SAVE ::
     R XPOL(:,:), YPOL(:,:)
 
      INTEGER, PUBLIC, ALLOCATABLE, SAVE ::
     I NPOINT(:,:),   NSTGRD(:), NGHPLS(:,:,:),
     I NGHPOL(:,:,:), NCLTAL(:), INDPOINT(:,:)
 
      INTEGER, PUBLIC, SAVE :: NCGM1, NCGM2, NNODES
 
      TYPE :: CELL_ELEM
        INTEGER :: NOCELL
        TYPE(CELL_ELEM), POINTER :: NEXT_CELL
      END TYPE CELL_ELEM
 
      TYPE :: CELL_LIST
        TYPE(CELL_ELEM), POINTER :: PCELL
      END TYPE CELL_LIST
 
      TYPE(CELL_LIST), ALLOCATABLE, SAVE, PUBLIC :: COORCELL(:)
 
 
      CONTAINS
 
 
      SUBROUTINE EIRENE_ALLOC_CGEOM(ICAL)
 
      INTEGER, INTENT(IN) :: ICAL
 
      IF (ICAL == 1) THEN
         IF (ALLOCATED(RCGM1)) RETURN
 
         NCGM1 = NADD+NBMAX+7*NRAD+NRTAL+1
         NCGM2 = 2*N1STS*N2NDPLG
 
         ALLOCATE (RCGM1(NCGM1))
!     pb      ALLOCATE (RCGM2(2*N1STS,N2NDPLG))
         ALLOCATE (RCGM2(N1STS,2*N2NDPLG))
 
         ALLOCATE (NPOINT(2,NPPART))
         ALLOCATE (NSTGRD(NRAD))
         ALLOCATE (NGHPLS(4,N1STS,N2NDPLG))
         ALLOCATE (NGHPOL(4,N1STS,N2NDPLG))
         ALLOCATE (NCLTAL(NRAD))
         ALLOCATE (INDPOINT(N1STS,N2NDPLG))
 
         ALLOCATE (COORCELL(NRAD))
 
         WRITE (55,'(A,T25,I15)')
     .        ' CGEOM(1) ',(NCGM1+2*N1STS*N2NDPLG)*8 +
     .        (2*NPPART+2*NRAD+8*N1STS*N2NDPLG)*4
 
         VOLADD => RCGM1(1 : NADD)
         VOLTAL => RCGM1(1+NADD : NADD+NRTAL)
         VOLCOR => RCGM1(1+NADD+NRTAL : NADD+NRTAL+NBMAX)
         VOLG   => RCGM1(1+NADD+NRTAL+NBMAX : NADD+NRTAL+NBMAX+NRAD)
         AREA   => RCGM1(1+NADD+NRTAL+NBMAX+NRAD :
     .                     NADD+NRTAL+NBMAX+2*NRAD)
         CELDIA => RCGM1(1+NADD+NRTAL+NBMAX+2*NRAD :
     .                     NADD+NRTAL+NBMAX+3*NRAD)
         XCOM   => RCGM1(1+NADD+NRTAL+NBMAX+3*NRAD :
     .                     NADD+NRTAL+NBMAX+4*NRAD)
         YCOM   => RCGM1(1+NADD+NRTAL+NBMAX+4*NRAD :
     .                     NADD+NRTAL+NBMAX+5*NRAD)
         XPOINT => RCGM1(1+NADD+NRTAL+NBMAX+5*NRAD :
     .                     NADD+NRTAL+NBMAX+6*NRAD)
         YPOINT => RCGM1(1+NADD+NRTAL+NBMAX+6*NRAD :
     .                     NADD+NRTAL+NBMAX+7*NRAD)
         VOLTOT => RCGM1(1+NADD+NRTAL+NBMAX+7*NRAD)
 
!     pb      XPOL => RCGM2(1+0*N1STS:1*N1STS,:)
!     pb      YPOL => RCGM2(1+1*N1STS:2*N1STS,:)
         XPOL => RCGM2(:,1:N2NDPLG)
         YPOL => RCGM2(:,1+N2NDPLG:2*N2NDPLG)
 
      ELSE IF (ICAL == 2) THEN
 
         ALLOCATE (AREAG(NLMPGS))
         WRITE (55,'(A,T25,I15)') ' CGEOM(2) ',NLMPGS*8
 
      END IF
 
 
      CALL EIRENE_INIT_CGEOM (ICAL)
 
      RETURN
      END SUBROUTINE EIRENE_ALLOC_CGEOM
 
 
      SUBROUTINE EIRENE_DEALLOC_CGEOM
 
      IF (.NOT.ALLOCATED(RCGM1)) RETURN
 
      DEALLOCATE (RCGM1)
      DEALLOCATE (RCGM2)
 
      DEALLOCATE (NPOINT)
      DEALLOCATE (NSTGRD)
      DEALLOCATE (NGHPLS)
      DEALLOCATE (NGHPOL)
      DEALLOCATE (NCLTAL)
      DEALLOCATE (INDPOINT)
 
      DEALLOCATE (COORCELL)
 
      DEALLOCATE (AREAG)
 
      RETURN
      END SUBROUTINE EIRENE_DEALLOC_CGEOM
 
 
      SUBROUTINE EIRENE_INIT_CGEOM(ICAL)
 
      INTEGER, INTENT(IN) :: ICAL
      INTEGER :: I
 
      IF (ICAL == 1) THEN
 
         RCGM1    = 0._DP
         RCGM2    = 0._DP
 
         NPOINT   = 0
         NSTGRD   = 0
         NGHPLS   = 0
         NGHPOL   = 0
         NCLTAL   = 0
         INDPOINT = 0
 
         DO I=1,NRAD
            NULLIFY (COORCELL(I)%PCELL)
         END DO
 
      ELSE IF (ICAL == 2) THEN
 
         AREAG = 0._DP
 
      END IF
 
      RETURN
      END SUBROUTINE EIRENE_INIT_CGEOM
 
      END MODULE EIRMOD_CGEOM
 
 
 
 
 
 
