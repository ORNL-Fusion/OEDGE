
> R := proc (r, theta) options operator, arrow; R0+r*cos(theta) end proc;
(r, theta) -> R0 + r cos(theta)
> Z := proc (r, theta) options operator, arrow; r*sin(theta) end proc;
(r, theta) -> r sin(theta)
> Bphi := proc (r, theta) options operator, arrow; B0*R0/R(r, theta) end proc;
                 B0 R0   
(r, theta) -> -----------
              R(r, theta)
> Br := proc (r, theta) options operator, arrow; psi0*sin(theta)/(a*R(r, theta)) end proc;
              psi0 sin(theta)
(r, theta) -> ---------------
               a R(r, theta) 
> Bz := proc (r, theta) options operator, arrow; -psi0*cos(theta)/(a*R(r, theta)) end proc;
                psi0 cos(theta)
(r, theta) -> - ---------------
                 a R(r, theta) 
> B := proc (r, theta) options operator, arrow; sqrt(Bphi(r, theta)^2+Br(r, theta)^2+Bz(r, theta)^2) end proc;
                  /              2               2               2\
(r, theta) -> sqrt\Bphi(r, theta)  + Br(r, theta)  + Bz(r, theta) /
> rn := proc (r) options operator, arrow; (r-rmin)/(rmax-rmin) end proc;
      r - rmin  
r -> -----------
     rmax - rmin
> ns := proc (r, theta) options operator, arrow; n0+.1*n0*cos(theta)*sin(2*pi*rn(r)) end proc;
(r, theta) -> n0 + 0.1 n0 cos(theta) sin(2 pi rn(r))
> Gs := proc (r, theta) options operator, arrow; G0*cos(theta)*sin(2*pi*rn(r)) end proc;
(r, theta) -> G0 cos(theta) sin(2 pi rn(r))
> Ts := proc (r, theta) options operator, arrow; T0+.1*T0*cos(theta)*sin(2*pi*rn(r)) end proc;
(r, theta) -> T0 + 0.1 T0 cos(theta) sin(2 pi rn(r))
> Gmet := proc (r, theta) options operator, arrow; -psi0/(a*R(r, theta)*r*B(r, theta)) end proc;
                           psi0            
(r, theta) -> - ---------------------------
                a R(r, theta) r B(r, theta)
> gtt := proc (r, theta) options operator, arrow; 1/r^2 end proc;
              1 
(r, theta) -> --
               2
              r 
> J := proc (r, theta) options operator, arrow; r*R(r, theta) end proc;
(r, theta) -> r R(r, theta)
> 
> 
> 
> 
> 
> with(CodeGeneration);
> with(codegen);
Perp sources :
> Sn := proc (r, theta) options operator, arrow; (diff(J(r, theta)*Dp*(diff(ns(r, theta), r)), r))/J(r, theta) end proc;
               d  /               / d              \\
              --- |J(r, theta) Dp |--- ns(r, theta)||
               dr \               \ dr             //
(r, theta) -> ---------------------------------------
                            J(r, theta)              
> fortran(Sn(r, theta));
      t0 = 1/r/(R0+r*cos(theta))*(0.2D0*(R0+r*cos(theta))*Dp*n0*cos(thet
     #a)*cos(2*pi*(r-rmin)/(rmax-rmin))*pi/(rmax-rmin)+0.2D0*r*cos(theta
     #)**2*Dp*n0*cos(2*pi*(r-rmin)/(rmax-rmin))*pi/(rmax-rmin)-0.4D0*r*(
     #R0+r*cos(theta))*Dp*n0*cos(theta)*sin(2*pi*(r-rmin)/(rmax-rmin))*p
     #i**2/(rmax-rmin)**2)
> 
> 
> SG := proc (r, theta) options operator, arrow; (diff(J(r, theta)*Dp*Gs(r, theta)*(diff(ns(r, theta), r))/ns(r, theta), r))/J(r, theta)+(diff(J(r, theta)*nup*ns(r, theta)*(diff(Gs(r, theta)/ns(r, theta), r)), r))/J(r, theta) end proc;
                       /                            / d              \\
                       |J(r, theta) Dp Gs(r, theta) |--- ns(r, theta)||
                    d  |                            \ dr             /|
                   --- |----------------------------------------------|
                    dr \                 ns(r, theta)                 /
     (r, theta) -> ----------------------------------------------------
                                       J(r, theta)                     

           d  /                             / d  /Gs(r, theta)\\\
          --- |J(r, theta) nup ns(r, theta) |--- |------------|||
           dr \                             \ dr \ns(r, theta)///
        + -------------------------------------------------------
                                J(r, theta)                      
> fortran(SG(r, theta));
      s2 = 1/r
      s4 = 1/(R0+r*cos(theta))
      s6 = 0.2D0*(R0+r*cos(theta))*Dp*G0*cos(theta)**2*sin(2*pi*(r-rmin)
     #/(rmax-rmin))/(n0+0.1D0*n0*cos(theta)*sin(2*pi*(r-rmin)/(rmax-rmin
     #)))*n0*cos(2*pi*(r-rmin)/(rmax-rmin))*pi/(rmax-rmin)+0.2D0*r*cos(t
     #heta)**3*Dp*G0*sin(2*pi*(r-rmin)/(rmax-rmin))/(n0+0.1D0*n0*cos(the
     #ta)*sin(2*pi*(r-rmin)/(rmax-rmin)))*n0*cos(2*pi*(r-rmin)/(rmax-rmi
     #n))*pi/(rmax-rmin)
      s5 = s6+0.4D0*r*(R0+r*cos(theta))*Dp*G0*cos(theta)**2*cos(2*pi*(r-
     #rmin)/(rmax-rmin))**2*pi**2/(rmax-rmin)**2/(n0+0.1D0*n0*cos(theta)
     #*sin(2*pi*(r-rmin)/(rmax-rmin)))*n0-0.4D-1*r*(R0+r*cos(theta))*Dp*
     #G0*cos(theta)**3*sin(2*pi*(r-rmin)/(rmax-rmin))/(n0+0.1D0*n0*cos(t
     #heta)*sin(2*pi*(r-rmin)/(rmax-rmin)))**2*n0**2*cos(2*pi*(r-rmin)/(
     #rmax-rmin))**2*pi**2/(rmax-rmin)**2-0.4D0*r*(R0+r*cos(theta))*Dp*G
     #0*cos(theta)**2*sin(2*pi*(r-rmin)/(rmax-rmin))**2/(n0+0.1D0*n0*cos
     #(theta)*sin(2*pi*(r-rmin)/(rmax-rmin)))*n0*pi**2/(rmax-rmin)**2
      s3 = s4*s5
      s1 = s2*s3
      s3 = 1/r
      s5 = 1/(R0+r*cos(theta))
      s8 = (R0+r*cos(theta))*nup*(n0+0.1D0*n0*cos(theta)*sin(2*pi*(r-rmi
     #n)/(rmax-rmin)))*(2*G0*cos(theta)*cos(2*pi*(r-rmin)/(rmax-rmin))*p
     #i/(rmax-rmin)/(n0+0.1D0*n0*cos(theta)*sin(2*pi*(r-rmin)/(rmax-rmin
     #)))-0.2D0*G0*cos(theta)**2*sin(2*pi*(r-rmin)/(rmax-rmin))/(n0+0.1D
     #0*n0*cos(theta)*sin(2*pi*(r-rmin)/(rmax-rmin)))**2*n0*cos(2*pi*(r-
     #rmin)/(rmax-rmin))*pi/(rmax-rmin))
      s9 = r*cos(theta)*nup*(n0+0.1D0*n0*cos(theta)*sin(2*pi*(r-rmin)/(r
     #max-rmin)))*(2*G0*cos(theta)*cos(2*pi*(r-rmin)/(rmax-rmin))*pi/(rm
     #ax-rmin)/(n0+0.1D0*n0*cos(theta)*sin(2*pi*(r-rmin)/(rmax-rmin)))-0
     #.2D0*G0*cos(theta)**2*sin(2*pi*(r-rmin)/(rmax-rmin))/(n0+0.1D0*n0*
     #cos(theta)*sin(2*pi*(r-rmin)/(rmax-rmin)))**2*n0*cos(2*pi*(r-rmin)
     #/(rmax-rmin))*pi/(rmax-rmin))
      s7 = s8+s9
      s8 = s7
      s10 = 0.2D0*r*(R0+r*cos(theta))*nup*n0*cos(theta)*cos(2*pi*(r-rmin
     #)/(rmax-rmin))*pi/(rmax-rmin)*(2*G0*cos(theta)*cos(2*pi*(r-rmin)/(
     #rmax-rmin))*pi/(rmax-rmin)/(n0+0.1D0*n0*cos(theta)*sin(2*pi*(r-rmi
     #n)/(rmax-rmin)))-0.2D0*G0*cos(theta)**2*sin(2*pi*(r-rmin)/(rmax-rm
     #in))/(n0+0.1D0*n0*cos(theta)*sin(2*pi*(r-rmin)/(rmax-rmin)))**2*n0
     #*cos(2*pi*(r-rmin)/(rmax-rmin))*pi/(rmax-rmin))
      s12 = r*(R0+r*cos(theta))
      s13 = nup*(n0+0.1D0*n0*cos(theta)*sin(2*pi*(r-rmin)/(rmax-rmin)))*
     #(-4*G0*cos(theta)*sin(2*pi*(r-rmin)/(rmax-rmin))*pi**2/(rmax-rmin)
     #**2/(n0+0.1D0*n0*cos(theta)*sin(2*pi*(r-rmin)/(rmax-rmin)))-0.8D0*
     #G0*cos(theta)**2*cos(2*pi*(r-rmin)/(rmax-rmin))**2*pi**2/(rmax-rmi
     #n)**2/(n0+0.1D0*n0*cos(theta)*sin(2*pi*(r-rmin)/(rmax-rmin)))**2*n
     #0+0.8D-1*G0*cos(theta)**3*sin(2*pi*(r-rmin)/(rmax-rmin))/(n0+0.1D0
     #*n0*cos(theta)*sin(2*pi*(r-rmin)/(rmax-rmin)))**3*n0**2*cos(2*pi*(
     #r-rmin)/(rmax-rmin))**2*pi**2/(rmax-rmin)**2+0.4D0*G0*cos(theta)**
     #2*sin(2*pi*(r-rmin)/(rmax-rmin))**2/(n0+0.1D0*n0*cos(theta)*sin(2*
     #pi*(r-rmin)/(rmax-rmin)))**2*n0*pi**2/(rmax-rmin)**2)
      s11 = s12*s13
      s9 = s10+s11
      s6 = s8+s9
      s4 = s5*s6
      s2 = s3*s4
      t0 = s1+s2
> 
> 
> 
> SG := proc (r, theta) options operator, arrow; (diff(J(r, theta)*nup*ns(r, theta)*(diff(Gs(r, theta)/ns(r, theta), r)), r))/J(r, theta) end proc;
               d  /                             / d  /Gs(r, theta)\\\
              --- |J(r, theta) nup ns(r, theta) |--- |------------|||
               dr \                             \ dr \ns(r, theta)///
(r, theta) -> -------------------------------------------------------
                                    J(r, theta)                      
> fortran(SG(r, theta));
      s1 = 1/r
      s3 = 1/(R0+r*cos(theta))
      s6 = (R0+r*cos(theta))*nup*(n0+0.1D0*n0*cos(theta)*sin(2*pi*(r-rmi
     #n)/(rmax-rmin)))*(2*G0*cos(theta)*cos(2*pi*(r-rmin)/(rmax-rmin))*p
     #i/(rmax-rmin)/(n0+0.1D0*n0*cos(theta)*sin(2*pi*(r-rmin)/(rmax-rmin
     #)))-0.2D0*G0*cos(theta)**2*sin(2*pi*(r-rmin)/(rmax-rmin))/(n0+0.1D
     #0*n0*cos(theta)*sin(2*pi*(r-rmin)/(rmax-rmin)))**2*n0*cos(2*pi*(r-
     #rmin)/(rmax-rmin))*pi/(rmax-rmin))
      s7 = r*cos(theta)*nup*(n0+0.1D0*n0*cos(theta)*sin(2*pi*(r-rmin)/(r
     #max-rmin)))*(2*G0*cos(theta)*cos(2*pi*(r-rmin)/(rmax-rmin))*pi/(rm
     #ax-rmin)/(n0+0.1D0*n0*cos(theta)*sin(2*pi*(r-rmin)/(rmax-rmin)))-0
     #.2D0*G0*cos(theta)**2*sin(2*pi*(r-rmin)/(rmax-rmin))/(n0+0.1D0*n0*
     #cos(theta)*sin(2*pi*(r-rmin)/(rmax-rmin)))**2*n0*cos(2*pi*(r-rmin)
     #/(rmax-rmin))*pi/(rmax-rmin))
      s5 = s6+s7
      s6 = s5
      s8 = 0.2D0*r*(R0+r*cos(theta))*nup*n0*cos(theta)*cos(2*pi*(r-rmin)
     #/(rmax-rmin))*pi/(rmax-rmin)*(2*G0*cos(theta)*cos(2*pi*(r-rmin)/(r
     #max-rmin))*pi/(rmax-rmin)/(n0+0.1D0*n0*cos(theta)*sin(2*pi*(r-rmin
     #)/(rmax-rmin)))-0.2D0*G0*cos(theta)**2*sin(2*pi*(r-rmin)/(rmax-rmi
     #n))/(n0+0.1D0*n0*cos(theta)*sin(2*pi*(r-rmin)/(rmax-rmin)))**2*n0*
     #cos(2*pi*(r-rmin)/(rmax-rmin))*pi/(rmax-rmin))
      s10 = r*(R0+r*cos(theta))
      s11 = nup*(n0+0.1D0*n0*cos(theta)*sin(2*pi*(r-rmin)/(rmax-rmin)))*
     #(-4*G0*cos(theta)*sin(2*pi*(r-rmin)/(rmax-rmin))*pi**2/(rmax-rmin)
     #**2/(n0+0.1D0*n0*cos(theta)*sin(2*pi*(r-rmin)/(rmax-rmin)))-0.8D0*
     #G0*cos(theta)**2*cos(2*pi*(r-rmin)/(rmax-rmin))**2*pi**2/(rmax-rmi
     #n)**2/(n0+0.1D0*n0*cos(theta)*sin(2*pi*(r-rmin)/(rmax-rmin)))**2*n
     #0+0.8D-1*G0*cos(theta)**3*sin(2*pi*(r-rmin)/(rmax-rmin))/(n0+0.1D0
     #*n0*cos(theta)*sin(2*pi*(r-rmin)/(rmax-rmin)))**3*n0**2*cos(2*pi*(
     #r-rmin)/(rmax-rmin))**2*pi**2/(rmax-rmin)**2+0.4D0*G0*cos(theta)**
     #2*sin(2*pi*(r-rmin)/(rmax-rmin))**2/(n0+0.1D0*n0*cos(theta)*sin(2*
     #pi*(r-rmin)/(rmax-rmin)))**2*n0*pi**2/(rmax-rmin)**2)
      s9 = s10*s11
      s7 = s8+s9
      s4 = s6+s7
      s2 = s3*s4
      t0 = s1*s2
> 
> 
> ST := proc (r, theta) options operator, arrow; (diff(J(r, theta)*((5/2)*Ts(r, theta)+(1/2)*mass*Gs(r, theta)^2/ns(r, theta)^2)*Dp*(diff(ns(r, theta), r)), r))/J(r, theta)+(diff(J(r, theta)*Chip*ns(r, theta)*(diff(Ts(r, theta), r)), r))/J(r, theta)+(diff((1/2)*J(r, theta)*mass*nup*ns(r, theta)*(diff(Gs(r, theta)^2/ns(r, theta)^2, r)), r))/J(r, theta) end proc;
(r, theta) -> 

      /            /                                  2\                      \
   d  |            |5                mass Gs(r, theta) |    / d              \|
  --- |J(r, theta) |- Ts(r, theta) + ------------------| Dp |--- ns(r, theta)||
   dr |            |2                               2  |    \ dr             /|
      \            \                  2 ns(r, theta)   /                      /
  -----------------------------------------------------------------------------
                                   J(r, theta)                                 

      d  /                              / d              \\
     --- |J(r, theta) Chip ns(r, theta) |--- Ts(r, theta)||
      dr \                              \ dr             //
   + ------------------------------------------------------
                          J(r, theta)                      

         /                                    /    /            2\\\
      d  |1                                   | d  |Gs(r, theta) |||
     --- |- J(r, theta) mass nup ns(r, theta) |--- |-------------|||
      dr |2                                   | dr |            2|||
         \                                    \    \ns(r, theta) ///
   + ---------------------------------------------------------------
                               J(r, theta)                          
> fortran(ST(r, theta));
      s2 = 1/r
      s4 = 1/(R0+r*cos(theta))
      s6 = 0.2D0*(R0+r*cos(theta))*(5.D0/2.D0*T0+0.25D0*T0*cos(theta)*si
     #n(2*pi*(r-rmin)/(rmax-rmin))+mass*G0**2*cos(theta)**2*sin(2*pi*(r-
     #rmin)/(rmax-rmin))**2/(n0+0.1D0*n0*cos(theta)*sin(2*pi*(r-rmin)/(r
     #max-rmin)))**2/2)*Dp*n0*cos(theta)*cos(2*pi*(r-rmin)/(rmax-rmin))*
     #pi/(rmax-rmin)+0.2D0*r*cos(theta)**2*(5.D0/2.D0*T0+0.25D0*T0*cos(t
     #heta)*sin(2*pi*(r-rmin)/(rmax-rmin))+mass*G0**2*cos(theta)**2*sin(
     #2*pi*(r-rmin)/(rmax-rmin))**2/(n0+0.1D0*n0*cos(theta)*sin(2*pi*(r-
     #rmin)/(rmax-rmin)))**2/2)*Dp*n0*cos(2*pi*(r-rmin)/(rmax-rmin))*pi/
     #(rmax-rmin)
      s7 = s6
      s9 = 0.2D0*r*(R0+r*cos(theta))*(0.5D0*T0*cos(theta)*cos(2*pi*(r-rm
     #in)/(rmax-rmin))*pi/(rmax-rmin)+2*mass*G0**2*cos(theta)**2*sin(2*p
     #i*(r-rmin)/(rmax-rmin))/(n0+0.1D0*n0*cos(theta)*sin(2*pi*(r-rmin)/
     #(rmax-rmin)))**2*cos(2*pi*(r-rmin)/(rmax-rmin))*pi/(rmax-rmin)-0.2
     #D0*mass*G0**2*cos(theta)**3*sin(2*pi*(r-rmin)/(rmax-rmin))**2/(n0+
     #0.1D0*n0*cos(theta)*sin(2*pi*(r-rmin)/(rmax-rmin)))**3*n0*cos(2*pi
     #*(r-rmin)/(rmax-rmin))*pi/(rmax-rmin))*Dp*n0*cos(theta)*cos(2*pi*(
     #r-rmin)/(rmax-rmin))*pi/(rmax-rmin)
      s10 = -0.4D0*r*(R0+r*cos(theta))*(5.D0/2.D0*T0+0.25D0*T0*cos(theta
     #)*sin(2*pi*(r-rmin)/(rmax-rmin))+mass*G0**2*cos(theta)**2*sin(2*pi
     #*(r-rmin)/(rmax-rmin))**2/(n0+0.1D0*n0*cos(theta)*sin(2*pi*(r-rmin
     #)/(rmax-rmin)))**2/2)*Dp*n0*cos(theta)*sin(2*pi*(r-rmin)/(rmax-rmi
     #n))*pi**2/(rmax-rmin)**2
      s8 = s9+s10
      s5 = s7+s8
      s3 = s4*s5
      s1 = s2*s3
      s3 = 1/r/(R0+r*cos(theta))*(0.2D0*(R0+r*cos(theta))*Chip*(n0+0.1D0
     #*n0*cos(theta)*sin(2*pi*(r-rmin)/(rmax-rmin)))*T0*cos(theta)*cos(2
     #*pi*(r-rmin)/(rmax-rmin))*pi/(rmax-rmin)+0.2D0*r*cos(theta)**2*Chi
     #p*(n0+0.1D0*n0*cos(theta)*sin(2*pi*(r-rmin)/(rmax-rmin)))*T0*cos(2
     #*pi*(r-rmin)/(rmax-rmin))*pi/(rmax-rmin)+0.4D-1*r*(R0+r*cos(theta)
     #)*Chip*n0*cos(theta)**2*cos(2*pi*(r-rmin)/(rmax-rmin))**2*pi**2/(r
     #max-rmin)**2*T0-0.4D0*r*(R0+r*cos(theta))*Chip*(n0+0.1D0*n0*cos(th
     #eta)*sin(2*pi*(r-rmin)/(rmax-rmin)))*T0*cos(theta)*sin(2*pi*(r-rmi
     #n)/(rmax-rmin))*pi**2/(rmax-rmin)**2)
      s5 = 1/r
      s7 = 1/(R0+r*cos(theta))
      s10 = (R0+r*cos(theta))*mass*nup*(n0+0.1D0*n0*cos(theta)*sin(2*pi*
     #(r-rmin)/(rmax-rmin)))*(4*G0**2*cos(theta)**2*sin(2*pi*(r-rmin)/(r
     #max-rmin))/(n0+0.1D0*n0*cos(theta)*sin(2*pi*(r-rmin)/(rmax-rmin)))
     #**2*cos(2*pi*(r-rmin)/(rmax-rmin))*pi/(rmax-rmin)-0.4D0*G0**2*cos(
     #theta)**3*sin(2*pi*(r-rmin)/(rmax-rmin))**2/(n0+0.1D0*n0*cos(theta
     #)*sin(2*pi*(r-rmin)/(rmax-rmin)))**3*n0*cos(2*pi*(r-rmin)/(rmax-rm
     #in))*pi/(rmax-rmin))/2
      s11 = r*cos(theta)*mass*nup*(n0+0.1D0*n0*cos(theta)*sin(2*pi*(r-rm
     #in)/(rmax-rmin)))*(4*G0**2*cos(theta)**2*sin(2*pi*(r-rmin)/(rmax-r
     #min))/(n0+0.1D0*n0*cos(theta)*sin(2*pi*(r-rmin)/(rmax-rmin)))**2*c
     #os(2*pi*(r-rmin)/(rmax-rmin))*pi/(rmax-rmin)-0.4D0*G0**2*cos(theta
     #)**3*sin(2*pi*(r-rmin)/(rmax-rmin))**2/(n0+0.1D0*n0*cos(theta)*sin
     #(2*pi*(r-rmin)/(rmax-rmin)))**3*n0*cos(2*pi*(r-rmin)/(rmax-rmin))*
     #pi/(rmax-rmin))/2
      s9 = s10+s11
      s10 = s9
      s12 = 0.1D0*r*(R0+r*cos(theta))*mass*nup*n0*cos(theta)*cos(2*pi*(r
     #-rmin)/(rmax-rmin))*pi/(rmax-rmin)*(4*G0**2*cos(theta)**2*sin(2*pi
     #*(r-rmin)/(rmax-rmin))/(n0+0.1D0*n0*cos(theta)*sin(2*pi*(r-rmin)/(
     #rmax-rmin)))**2*cos(2*pi*(r-rmin)/(rmax-rmin))*pi/(rmax-rmin)-0.4D
     #0*G0**2*cos(theta)**3*sin(2*pi*(r-rmin)/(rmax-rmin))**2/(n0+0.1D0*
     #n0*cos(theta)*sin(2*pi*(r-rmin)/(rmax-rmin)))**3*n0*cos(2*pi*(r-rm
     #in)/(rmax-rmin))*pi/(rmax-rmin))
      s14 = r*(R0+r*cos(theta))/2
      s16 = mass*nup
      s18 = n0+0.1D0*n0*cos(theta)*sin(2*pi*(r-rmin)/(rmax-rmin))
      s20 = 8*G0**2*cos(theta)**2*cos(2*pi*(r-rmin)/(rmax-rmin))**2*pi**
     #2/(rmax-rmin)**2/(n0+0.1D0*n0*cos(theta)*sin(2*pi*(r-rmin)/(rmax-r
     #min)))**2-0.32D1*G0**2*cos(theta)**3*sin(2*pi*(r-rmin)/(rmax-rmin)
     #)/(n0+0.1D0*n0*cos(theta)*sin(2*pi*(r-rmin)/(rmax-rmin)))**3*cos(2
     #*pi*(r-rmin)/(rmax-rmin))**2*pi**2/(rmax-rmin)**2*n0
      s19 = s20-8*G0**2*cos(theta)**2*sin(2*pi*(r-rmin)/(rmax-rmin))**2/
     #(n0+0.1D0*n0*cos(theta)*sin(2*pi*(r-rmin)/(rmax-rmin)))**2*pi**2/(
     #rmax-rmin)**2+0.24D0*G0**2*cos(theta)**4*sin(2*pi*(r-rmin)/(rmax-r
     #min))**2/(n0+0.1D0*n0*cos(theta)*sin(2*pi*(r-rmin)/(rmax-rmin)))**
     #4*n0**2*cos(2*pi*(r-rmin)/(rmax-rmin))**2*pi**2/(rmax-rmin)**2+0.8
     #D0*G0**2*cos(theta)**3*sin(2*pi*(r-rmin)/(rmax-rmin))**3/(n0+0.1D0
     #*n0*cos(theta)*sin(2*pi*(r-rmin)/(rmax-rmin)))**3*n0*pi**2/(rmax-r
     #min)**2
      s17 = s18*s19
      s15 = s16*s17
      s13 = s14*s15
      s11 = s12+s13
      s8 = s10+s11
      s6 = s7*s8
      s4 = s5*s6
      s2 = s3+s4
      t0 = s1+s2
> 
> 
> 
> 
> STe := proc (r, theta) options operator, arrow; (diff((5/2)*J(r, theta)*Ts(r, theta)*Dp*(diff(ns(r, theta), r)), r))/J(r, theta)+(diff(J(r, theta)*Chip*ns(r, theta)*(diff(Ts(r, theta), r)), r))/J(r, theta) end proc;
                   d  /5                             / d              \\
                  --- |- J(r, theta) Ts(r, theta) Dp |--- ns(r, theta)||
                   dr \2                             \ dr             //
    (r, theta) -> ------------------------------------------------------
                                       J(r, theta)                      

          d  /                              / d              \\
         --- |J(r, theta) Chip ns(r, theta) |--- Ts(r, theta)||
          dr \                              \ dr             //
       + ------------------------------------------------------
                              J(r, theta)                      
> fortran(STe(r, theta));
      s1 = 1/r/(R0+r*cos(theta))*(0.5D0*(R0+r*cos(theta))*(T0+0.1D0*T0*c
     #os(theta)*sin(2*pi*(r-rmin)/(rmax-rmin)))*Dp*n0*cos(theta)*cos(2*p
     #i*(r-rmin)/(rmax-rmin))*pi/(rmax-rmin)+0.5D0*r*cos(theta)**2*(T0+0
     #.1D0*T0*cos(theta)*sin(2*pi*(r-rmin)/(rmax-rmin)))*Dp*n0*cos(2*pi*
     #(r-rmin)/(rmax-rmin))*pi/(rmax-rmin)+0.1D0*r*(R0+r*cos(theta))*T0*
     #cos(theta)**2*cos(2*pi*(r-rmin)/(rmax-rmin))**2*pi**2/(rmax-rmin)*
     #*2*Dp*n0-0.1D1*r*(R0+r*cos(theta))*(T0+0.1D0*T0*cos(theta)*sin(2*p
     #i*(r-rmin)/(rmax-rmin)))*Dp*n0*cos(theta)*sin(2*pi*(r-rmin)/(rmax-
     #rmin))*pi**2/(rmax-rmin)**2)
      s2 = 1/r/(R0+r*cos(theta))*(0.2D0*(R0+r*cos(theta))*Chip*(n0+0.1D0
     #*n0*cos(theta)*sin(2*pi*(r-rmin)/(rmax-rmin)))*T0*cos(theta)*cos(2
     #*pi*(r-rmin)/(rmax-rmin))*pi/(rmax-rmin)+0.2D0*r*cos(theta)**2*Chi
     #p*(n0+0.1D0*n0*cos(theta)*sin(2*pi*(r-rmin)/(rmax-rmin)))*T0*cos(2
     #*pi*(r-rmin)/(rmax-rmin))*pi/(rmax-rmin)+0.4D-1*r*(R0+r*cos(theta)
     #)*Chip*n0*cos(theta)**2*cos(2*pi*(r-rmin)/(rmax-rmin))**2*pi**2/(r
     #max-rmin)**2*T0-0.4D0*r*(R0+r*cos(theta))*Chip*(n0+0.1D0*n0*cos(th
     #eta)*sin(2*pi*(r-rmin)/(rmax-rmin)))*T0*cos(theta)*sin(2*pi*(r-rmi
     #n)/(rmax-rmin))*pi**2/(rmax-rmin)**2)
      t0 = s1+s2
> 

