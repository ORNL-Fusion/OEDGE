      PROGRAM DIVPPF
      IMPLICIT NONE
C
C  *********************************************************************
C  *                                                                   *
C  *  DIVPPF:  READS DIVIMP RESULTS, CALCULATES DIAGNOSTIC SIGNALS     *
C  *           AND WRITES THEM TO PPFS FOR DIRECT COMPARISON WITH      *
C  *           EXPERIMENT.                                             *
C  *                                                                   *
C  *            LORNE HORTON  (JET)  AUGUST 1993                       *
C  *                                                                   *
C  *********************************************************************
C
C
C---- COMMON BLOCKS - SPECIFIC TO DIVPPF FOR COMPATIBILITY WITH PPROC
C                   - LOADED BY CALL TO LDCOMN
C
      INCLUDE (PPPARA)
      INCLUDE (PPUNIT)
      INCLUDE (PPGEOM)
      INCLUDE (PPPLAS)
C
C---- INITIALISATION VARIABLES
C
      REAL      TIME,TIME1,ZA02AS
      CHARACTER VERSON*9,TITLE*80,JOB*72
C
C---- PPF VARIABLES
C
      INTEGER   IDATE,ITIME
      INTEGER   ISEQ,LUNIT,NRMAX,INDAT(10),IERR
      INTEGER   IPVERS
      CHARACTER PRGNAM*8,VRSION*5
      DATA      LUNIT/0/,NRMAX/0/,INDAT/9*0,20/
      DATA      PRGNAM/'DIVPPF??'/
C
C---- INPUT SWITCHES
C
      INTEGER   IOPT,IEXP
      CHARACTER DDA*4,DLABEL*24
C
C---- UID CONTROL
C
      CHARACTER SYSUID*8,PREFIX*7,IBMUID*6,IBMPW*8
C
C---- INITIALISATION
C
      TIME1 = ZA02AS (1)
      CALL XUFLOW (0)
      CALL DMGUID(SYSUID,PREFIX)
C
C---- FOR UNIX, MAP TO MAINFRAME UID - THIS ROUTINE SHOULD DO NOTHING
C---- IF CALLED FROM THE MAINFRAME!
C
      CALL MAPUID(SYSUID,LUID)
C
C---- LOAD DIVIMP RESULTS INTO COMMON BLOCKS
C
      CALL LDCOMN (VERSON,TITLE,JOB)
C
C---- CALCULATE INNER AND OUTER NEIGHBOURS FROM STANDARD GEOM. INFO.
C
      CALL NABOR
C
C---- CALCULATE TARGET GEOMETRY FROM STANDARD GEOM. INFO.
C
      CALL TARGEO
C
C---- WRITE TITLE TO PRINT FILE
C
      WRITE (LOUT,9010) VERSON,TITLE(1:58),JOB(1:53),EQUIL(1:54)
C
C---- IF REFCT=1 THEN GEOMETRY NEEDS TO BE REFLECTED IN R=0 PLANE
C
      IF (REFCT.EQ.1) THEN
        CALL REFLECT
        WRITE (LOUT,9015)
      ENDIF
C
C---- GET UID AND PASSWORD FROM NETRC
C
      CALL RDNRC(IBMUID,IBMPW)
      IF (IBMUID.EQ.SYSUID.AND.IBMPW.NE.' ') THEN
        CALL PPFPWD(IBMUID,IBMPW)
      ELSE
        WRITE (LOUT,9035)
        GOTO 9999
      ENDIF
C
C---- WRITE TO LOCAL PPF FOR NOW
C
      CALL PPFUID(SYSUID(1:6),'W')
C
C---- OPEN PPF FOR WRITING
C
      CALL PDSTD(ISHOT,ITIME,IDATE,IERR)
C
C---- FOR SIMULATED SHOTS, JUST USE NOON, JAN 1, 1994
C
      IF (IERR.EQ.200) THEN
        ITIME = 120000
        IDATE = 010194
        IERR = 0
      ENDIF
      IF (IERR.NE.0) THEN
        WRITE (LOUT,9065) IERR
        GOTO 9999
      ENDIF
      INDAT(1) = ISHOT
      INDAT(2) = IDATE
      INDAT(3) = ITIME
      CALL PPFOPN(ISHOT,ISEQ,LUNIT,NRMAX,INDAT,TITLE,IERR)
      IF (IERR.NE.0) THEN
        WRITE (LOUT,9020) IERR
        GOTO 9999
      ENDIF
C
      REWIND (LONOFF)
  100 CONTINUE
C
C---- READ MAIN ON/OFF SWITCH (IOPT)
C
      CALL RDD1 (LONOFF,DDA,DLABEL,IOPT,IEXP,IERR)
      IF (IERR.EQ.-1) GOTO 9999
      IF (IERR.NE.0) THEN
        WRITE (LOUT,9030) DDA,IERR
        GOTO 9999
      ENDIF
C
C---- CALL SUBROUTINE TO WRITE DDA
C
      IF (IOPT.NE.0) THEN
        CALL WRTDDA(DDA,IEXP,IERR)
        IF (IERR.EQ.0) THEN
          WRITE(LOUT,9040) DDA, DLABEL
        ELSE
          WRITE(LOUT,9050) DDA, IERR
        ENDIF
      ENDIF
C
      GOTO 100
C
C---- CLEAN UP AND STOP
C
 9999 CONTINUE
      VRSION = VERSON
      PRGNAM(7:8) = VRSION(1:2)
      READ (VRSION(4:5),'(I2)') IPVERS
      CALL PPFCLO(ISHOT,ISEQ,LUNIT,PRGNAM,IPVERS,IERR)
      IF (IERR.EQ.280000) THEN
        WRITE (LOUT,9070)
      ELSE IF (IERR.NE.0) THEN
        WRITE (LOUT,9025) IERR
      ELSE
        WRITE (LOUT,9075) ISEQ
      ENDIF
      TIME = ZA02AS (1) - TIME1
      WRITE (LOUT,9100) TIME
      STOP
C
 9010 FORMAT(/1X,62('*'),/1X,'*',60X,'*',
     >  /1X,'*',16X,'RUN OF DIVPPF VERSION ',A5,17X,'*',
     >  /1X,'*',18X,24('-'),18X,'*',/1X,'*',60X,'*',
     >  /1X,'* ',A58,' *',/1X,'*',60X,'*',/1X,'* ',A53,5X,' *',
     >  /1X,'*',60X,'*',/1X,'* ',A54,4X,' *',
     >  /1X,'*',60X,'*',/1X,62('*'),/)
 9015 FORMAT(/1X,'GEOMETRY HAS BEEN REFLECTED ABOUT Z=0 AXIS')
 9020 FORMAT(/1X,'ERROR OPENING PPF FOR WRITE, IERR =  ',I6)
 9025 FORMAT(/1X,'ERROR CLOSING PPF, IERR =  ',I6)
 9030 FORMAT(/1X,'ERROR READING DIAGNOSTIC WRITE FLAG, DDA = ',A4,
     >' IERR = ',I6)
 9035 FORMAT(/1X,'ERROR READING NETRC FILE')
 9040 FORMAT(/1X,'DDA ',A4,' WRITTEN SUCCESSFULLY',/,5X,A)
 9050 FORMAT(/1X,'**** ERROR WRITING DDA ',A4,/,5X,'SOME OR ALL',
     >' DATA TYPES MAY NOT HAVE BEEN WRITTEN, IERR = ',I6)
 9065 FORMAT(/1X,'ERROR READING SHOT DATE AND TIME, IERR =  ',I6)
 9070 FORMAT(/1X,'NO DATA TYPES SUCCESSFULLY WRITTEN ERGO NO PPF!')
 9075 FORMAT(/1X,'PPF WRITTEN WITH SEQUENCE NUMBER = ',I3)
 9100 FORMAT(/1X,'DIVPPF: TOTAL TIME USED = ',G11.4,' SEC',/)
C
      END
