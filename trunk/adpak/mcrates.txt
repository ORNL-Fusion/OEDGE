
      subroutine mcrates(tmpe,tmpi,za,zamax,zn,rion,rrec,rcxr)
      implicit none
      real tmpe,tmpi
      integer za,zamax,zn
      real rion, rrec, rcxr
c
c ... Inputs are:
c        electron temperature, tmpe;
c        neutral hydrogen temperature, tmpi;
c        atomic charge state, za;
c        maximum atomic charge state, zamax;
c        nuclear charge state, zn;

c ... Outputs are:
c        rate parameters (sigma*v) for ionization, recombination,
c        and charge-exchange recombination on neutral hydrogen
c
c     The tables used in this subroutine are generated with a code
c     supplied by Bas Braams.  The data file it produces is called
c     'b2frates' by default.  This gives rates that may depend on both
c     density and temperature.  Here, we use only the rates given
c     for the lowest density in the table.
c
c     Input electron temperature is given in [J].
c     Input temperature for neutral hydrogen is given in [J/AMU].
c     Table temperatures are given in [eV].
c     Output and table rates are all given in [m**3/s].
c
      Use(Share)               # cutlo
      Use(Physical_constants)  # ev
      Use(Multicharge)         # rtlt,rtlsa,rtlra,rtlcx
c
      integer i1e,i1i,i,ii
      real tmpenonz,tmpinonz,xte,xti,dlogt,fxte,fxti
c
      rion = 0.
      rrec = 0.
      rcxr = 0.
c
      tmpenonz = max(tmpe, cutlo)  # to avoid possible log(0) error
      tmpinonz = max(tmpi, cutlo)  # to avoid possible log(0) error
      xte = log(tmpenonz/ev)
      xti = log(tmpinonz/ev)
      dlogt = rtlt(1) - rtlt(0)
c
c ... Find index i1 in temperature table such that 
c                 rtlt(i1) .le. xt .lt. rtlt(i1+1)
c     or, equivalently,
c                  rtt(i1) .le. tmp .lt. rtt(i1+1).
c
      i1e = int( (xte-rtlt(0))/dlogt )
      i1i = int( (xti-rtlt(0))/dlogt )
c
c ... For temperatures below minimum table temperature, extrapolate
c     downwards from table entries 0 and 1.
c
      i1e = max(0, i1e)
      i1i = max(0, i1i)
c
c ... For temperatures above maximum table temperature, extrapolate
c     upwards from table entries rtnt-1 and rtnt.
c
      i1e = min(rtnt-1, i1e)
      i1i = min(rtnt-1, i1i)
c
c ... Compute coefficient for linear interpolation.
c
      fxte = (xte-rtlt(i1e))/(rtlt(i1e+1)-rtlt(i1e))
      fxti = (xti-rtlt(i1i))/(rtlt(i1i+1)-rtlt(i1i))
c
c ... For given za and zn, find the species index, ii, in the table.
c
      ii = -1
      do i=0,rtnsd-1
         if ((zn .eq. nint(rtzn(i))) .and. (za .eq. nint(rtza(i)))) then
            ii = i
            break
         endif
      enddo
      if (ii .lt. 0) then
         write (*,*) '*** mcrates could not find za=',za,' zn=',zn
         write (*,*) '*** check mcfilenames array'
         call kaboom(0)
      endif
c
c     Compute rate parameters for transitions from table species ii.
c
      if (za .lt. zamax) then
         rion = exp((1-fxte)*rtlsa(i1e,0,ii)+fxte*rtlsa(i1e+1,0,ii))
         if (za .eq. 0) return
      endif
         rrec = exp((1-fxte)*rtlra(i1e,0,ii)+fxte*rtlra(i1e+1,0,ii))
         rcxr = exp((1-fxti)*rtlcx(i1i,0,ii)+fxti*rtlcx(i1i+1,0,ii))
c
      return
      end
c
c-----End of subroutine mcrates----------------------------------------

      subroutine readmc
      implicit none
Use(Input)		# nzdf,mcfilename
Use(Multicharge)

c     local variables --
      integer i, ios, kstart, n, nget, rtnt_old, rtnn_old, rtnsd_old
      character idcod*8, idtyp*8, id1*32

c     procedures --
      external freeus, gchange, kaboom

c----------------------------------------------------------------------c
c     Read rate data from 'un*formatted' files.
c           (file format from b2.5 code by B. Braams)
c----------------------------------------------------------------------c

      rtnt=0
      rtnn=0
      rtnsd=0
      do i=1,nzdf
         rtnt_old  = rtnt
         rtnn_old  = rtnn
         rtnsd_old = rtnsd

      call freeus(nget)
      open (nget, file=mcfilename(i), form='formatted', iostat=ios,
     .     status='old')
      if (ios .ne. 0) then
         write(*,*) 
     .      '*** Input file mcfilename=',mcfilename(i),' not found'
         call kaboom(0)
      endif

c     read header --
*     un*formatted read for header data
      read (nget,'(2a8,i12,4x,a32)') idcod, idtyp, n, id1
      read (nget,'(1x,1a120)') labelrt(i)

c     read dimensions --
*     un*formatted read for integer data
      read (nget,'(2a8,i12,4x,a32)') idcod, idtyp, n, id1
      read (nget,*) rtnt,rtnn,rtns

c     Test for compatibility of (rtnt,rtnn) from different tables:
      if ( (i .gt. 1) .and. 
     .     ((rtnt .ne. rtnt_old) .or. (rtnn .ne. rtnn_old)) ) then
         write(*,*)
     .      '*** subroutine readmc: incompatible table dimensions in ',
     .      mcfilename(i),' and ',mcfilename(i-1)
         call kaboom(0)
      endif

c     allocate storage --
      rtnsd=rtnsd+rtns
      call gchange("Multicharge",0)

c     read abscissae and rates --
      kstart=rtnsd_old		# starting species index for this table
      call readmc1 (nget, kstart)

      close (nget)

      enddo

      return
      end

c-----------------------------------------------------------------------

      subroutine readmc1 (nget, kstart)
      implicit none
      integer nget, kstart
Use(Multicharge)

c     local variables --
      integer i, j, k, n
      character idcod*8, idtyp*8, id1*32

c     read abscissae --
*     un*formatted read for real data

      read (nget,'(2a8,i12,4x,a32)') idcod, idtyp, n, id1
      read (nget,*) (rtza(k),k=kstart,kstart+rtns-1)

      read (nget,'(2a8,i12,4x,a32)') idcod, idtyp, n, id1
      read (nget,*) (rtzn(k),k=kstart,kstart+rtns-1)

      read (nget,'(2a8,i12,4x,a32)') idcod, idtyp, n, id1
      read (nget,*) (rtza2(k),k=kstart,kstart+rtns-1)

      read (nget,'(2a8,i12,4x,a32)') idcod, idtyp, n, id1
      read (nget,*) (rtt(i),i=0,rtnt)

      read (nget,'(2a8,i12,4x,a32)') idcod, idtyp, n, id1
      read (nget,*) (rtn(j),j=0,rtnn)

      read (nget,'(2a8,i12,4x,a32)') idcod, idtyp, n, id1
      read (nget,*) (rtlt(i),i=0,rtnt)

      read (nget,'(2a8,i12,4x,a32)') idcod, idtyp, n, id1
      read (nget,*) (rtln(j),j=0,rtnn)

c     read rate coefficients --
*     un*formatted read for real data

      read (nget,'(2a8,i12,4x,a32)') idcod, idtyp, n, id1
      read (nget,*) (((rtlsa(i,j,k),i=0,rtnt),j=0,rtnn),
     .                              k=kstart,kstart+rtns-1)

      read (nget,'(2a8,i12,4x,a32)') idcod, idtyp, n, id1
      read (nget,*) (((rtlra(i,j,k),i=0,rtnt),j=0,rtnn),
     .                              k=kstart,kstart+rtns-1)

      read (nget,'(2a8,i12,4x,a32)') idcod, idtyp, n, id1
      read (nget,*) (((rtlqa(i,j,k),i=0,rtnt),j=0,rtnn),
     .                              k=kstart,kstart+rtns-1)

      read (nget,'(2a8,i12,4x,a32)') idcod, idtyp, n, id1
      read (nget,*) (((rtlcx(i,j,k),i=0,rtnt),j=0,rtnn),
     .                              k=kstart,kstart+rtns-1)

      return
      end


***** Multicharge:
# dimension variables and arrays for multi-charge model rates
labelrt(1:12)	character*120	# header information from 'b2frates' data file
rtnt	integer		# number of intervals in 'b2frates' temperature data
rtnn	integer		# number of intervals in 'b2frates' density data
rtns	integer		# number of species in a 'b2frates' file
rtnsd	integer		# total number of species from all 'b2frates' files
rtza(0:rtnsd-1)	_real	# atomic charge state
rtzn(0:rtnsd-1)	_real	# nuclear charge state
rtza2(0:rtnsd-1)	_real	# atomic charge state squared
rtt(0:rtnt)	_real	[eV]	# temperature data in 'b2frates' table
rtn(0:rtnn)	_real	[/m**3]	# density data in 'b2frates' table
rtlt(0:rtnt)	_real	# ln(rtt) where rtt[eV] is 'b2frates' temperature data
rtln(0:rtnn)	_real	# ln(rtn) where rtn[/m**3] is 'b2frates' density data
rtlsa(0:rtnt,0:rtnn,0:rtnsd-1)	_real	
# ln(rtsa) where rtsa[m**3/s] is 'b2frates' data for ionization
rtlra(0:rtnt,0:rtnn,0:rtnsd-1)	_real	
# ln(rtra) where rtra[m**3/s] is 'b2frates' data for recombination
rtlqa(0:rtnt,0:rtnn,0:rtnsd-1)	_real	
# ln(rtqa) where rtqa[eV*m**3/s] is 'b2frates' data for electron energy loss
rtlcx(0:rtnt,0:rtnn,0:rtnsd-1)	_real	
# ln(rtcx) where rtcx[m**3/s] is 'b2frates' data for c-x on neutral hydrogen

