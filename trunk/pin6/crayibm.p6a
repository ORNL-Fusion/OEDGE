C
C=======================================================================
      SUBROUTINE VCRIBM( REQ , ACT , IER )
      IMPLICIT REAL*8(A-H,O-Z)
C
      CHARACTER*9 VERSON
      PARAMETER( VERSON = '02-APR-98' )
C
C-----------------------------------------------------------------------
C
C PURPOSE : TO OBTAIN THE VERSION OF THE 'CRAYIBM' MODULE.
C
C INPUT   : (C*9) REQ    = REQUIRED VERSION.
C
C OUTPUT  : (C*9) ACT    = ACTUAL VERSION.
C           (I*4) IER    = 0 IF REQ =  ACT
C                        = 1 IF REQ <> ACT
C
C PROGRAM : (C*9) VERSON = VERSION
C
C AUTHOR  : JAMES SPENCE (K1/0/80)  EXT. 4866
C           JET
C
C DATE    : 09-DEC-91
C
C-----------------------------------------------------------------------
C
      CHARACTER*9   REQ , ACT
      INTEGER*4     IER
C
C.......................................................................
C
      ACT = VERSON
C
C.......................................................................
C
      IF( REQ.EQ.ACT ) THEN
          IER = 0
      ELSE
          IER = 1
      END IF
C
C.......................................................................
C
      RETURN
      END
C
C=======================================================================
       SUBROUTINE CHCOPY( CHIN , CHOUT )
       IMPLICIT REAL*8(A-H,O-Z)
       CHARACTER*8 CHIN , CHOUT
       CHOUT = CHIN
       RETURN
       END
C
C=======================================================================
       DOUBLE PRECISION FUNCTION CVMGT( TRUE , FALSE , LOGIC )
       IMPLICIT REAL*8(A-H,O-Z)
       LOGICAL LOGIC
       IF(LOGIC) THEN
                 CVMGT = TRUE
       ELSE
                 CVMGT = FALSE
       END IF
       RETURN
       END
C
C=======================================================================
       FUNCTION ICVMGT( ITRUE , IFALSE , LOGIC )
       LOGICAL LOGIC
       IF(LOGIC) THEN
                 ICVMGT = ITRUE
       ELSE
                 ICVMGT = IFALSE
       END IF
       RETURN
       END
C
C=======================================================================
       SUBROUTINE STIME( N )
       IMPLICIT REAL*8(A-H,O-Z)
       EXTERNAL SECOND
       SAVE
       TMAX = N
       CALL SECOND( BASE )
       RETURN
       ENTRY TTIME( M )
       CALL SECOND( TIME )
       M = TMAX - ( TIME - BASE ) * 1.00D+02
       RETURN
       END
C
C=======================================================================
       SUBROUTINE TREMAINJ( TSEC )
       IMPLICIT REAL*4(A-H,O-Z)
       CALL ZA02CS( TSEC )
       RETURN
       END
C
C=======================================================================
C      FUNCTION LOC( VAR )
C
C      LOC = 0
C
C      RETURN
C      END
C
C=======================================================================
       SUBROUTINE SECOND( TSEC )
       IMPLICIT REAL*8(A-H,O-Z)
C
C-----------------------------------------------------------------------
C
C PURPOSE : TO RETURN THE CPU TIME
C
C OUTPUT  : (R*8) TSEC = CPU TIME IN SECONDS
C
C NOTE    : SYSTEM ROUTINE "CPUTIME" IS IN MICROSECONDS
C
C AUTHOR  : JAMES SPENCE  K1/0/80  EXT. 4866
C           JET
C
C DATE    : 02/08/91
C
C-----------------------------------------------------------------------
C
       INCLUDE 'plun'
C
       CALL CPUTIME( TSEC , IRCODE )
C
       IF( IRCODE.EQ.0 ) THEN
           TSEC = TSEC * 1.00D-06
       ELSE
           WRITE(LOUT,9000) RCODE
           TSEC = 0.00D+00
       END IF
C
 9000  FORMAT('"CPUTIM" CALLED BY "SECOND": IRCODE=',I5)
C
       RETURN
       END
C
C=======================================================================
       SUBROUTINE TODAY( STRING , IDUMMY )
       IMPLICIT REAL*4(A-H,O-Z)
C
C-----------------------------------------------------------------------
C
C PURPOSE : TO GET THE TIME AND THE DATE IN THE FORMAT BELOW
C
C OUTPUT  : (C*MS) STRING = '    '+HH.MM.SS+'    '+DD MMM YY+'   '
C
C PROGRAM : (I*4) MS        = MAXIMUM OF CHARACTERS IN STRING
C           (I*4) IBASE     = EBCDIC CHARACTER FOR '0'
C           (C*8) TIME1     = HH:MM:SS I.E GIVEN BY ROUTINE : "CLOCKS"
C           (C*8) DATE1     = MM:DD:YY I.E GIVEN BY ROUTINE : "DATE"
C
C NOTE    : EBCDIC : '0' = 240 , .... , '9' = 249
C
C AUTHOR  : JAMES SPENCE  K1/0/80  EXT.4866
C           JET
C
C DATE    : 02/08/91
C
C-----------------------------------------------------------------------
C
       PARAMETER ( MS = 28 , IBASE = 240 )
C
       DIMENSION MONTH(12)
C
       CHARACTER STRING*(MS)  , MONTH*3 , TIME1*8 , DATE1*8
C
       DATA MONTH/ 'JAN' , 'FEB' , 'MAR' , 'APR' , 'MAY' , 'JUN'
     &           , 'JUL' , 'AUG' , 'SEP' , 'OCT' , 'NOV' , 'DEC' /
C
C------------------------ GET THE TIME AND DATE ------------------------
C
       CALL CLOCKS( TIME1 )
       CALL DATEX ( DATE1 )
C
C------------------ CONVERT MONTH STRING INTO INTEGER ------------------
C
       READ( DATE1(1:2) , '(I2)' ) IMTH
C
C--------- REMOVE LEADING ZERO FROM HH IN TIME1 & DD IN DATE1-----------
C
       IF( TIME1(1:1).EQ.'0' ) TIME1(1:1) = ' '
       IF( DATE1(4:4).EQ.'0' ) DATE1(4:4) = ' '
C
C-----------------------------------------------------------------------
C
       STRING = '    ' //
     &          TIME1(1:2) // '.' // TIME1(4:5)  // '.' // TIME1(7:8) //
     &          '    ' //
     &          DATE1(4:5) // ' ' // MONTH(IMTH) // ' ' // DATE1(7:8) //
     &          '   '
C
C-----------------------------------------------------------------------
C
       RETURN
       END
C
C=======================================================================
       SUBROUTINE CLOCKS( CLOCK0 )
       IMPLICIT REAL*8(A-H,O-Z)
C
C-----------------------------------------------------------------------
C
C PURPOSE : TO RETURN THE TIME OF DAY IN THE FORM HH:MM:SS
C
C OUTPUT  : (C*8) CLOCK0 = HH:MM:SS
C
C PROGRAM : (C*2) HH    = HOURS
C           (C*2) MM    = MINUTES
C           (C*2) SS    = SECONDS
C
C NOTE    : SYSTEM ROUTINE "DATIMX" IS USED
C
C AUTHOR  : JAMES SPENCE  K1/0/80  EXT. 4866
C           JET
C
C DATE    : 21/05/91
C
C-----------------------------------------------------------------------
C
       DIMENSION IDARR(14)
C
       CHARACTER*2 HH , MM , SS
       CHARACTER*8 CLOCK0
C
C-----------------------------------------------------------------------
C
       CALL DATIMX( IDARR(1) )
C
C-----------------------------------------------------------------------
C...DAY
       IF( IDARR(5).LT.10 ) THEN
           WRITE( HH , 1000 ) IDARR(5)
       ELSE
           WRITE( HH , 1010 ) IDARR(5)
       END IF
C...MONTH
       IF( IDARR(4).LT.10 ) THEN
           WRITE( MM , 1000 ) IDARR(4)
       ELSE
           WRITE( MM , 1010 ) IDARR(4)
       END IF
C...YEAR
       IF( IDARR(3).LT.10 ) THEN
           WRITE( SS , 1000 ) IDARR(3)
       ELSE
           WRITE( SS , 1010 ) IDARR(3)
       END IF
C
C-----------------------------------------------------------------------
C
       WRITE( CLOCK0 , 1020 ) HH , MM , SS
C
C-----------------------------------------------------------------------
C
 1000  FORMAT( '0' , I1 )
 1010  FORMAT( I2 )
 1020  FORMAT( A , ':' , A , ':' , A )
C
C-----------------------------------------------------------------------
C
       RETURN
       END
C
C=======================================================================
       SUBROUTINE DATEX( DATE0 )
       IMPLICIT REAL*8(A-H,O-Z)
C
C-----------------------------------------------------------------------
C
C PURPOSE : TO RETURN THE DATE IN THE FORM MM-DD-YY
C
C OUTPUT  : (C*8) DATE0 = MM-DD-YY
C
C PROGRAM : (C*2) DD    = DAY
C           (C*2) MM    = MONTH
C           (C*2) YY    = YEAR
C
C NOTE    : SYSTEM ROUTINE "DATIMX" IS USED
C
C AUTHOR  : JAMES SPENCE  K1/0/80  EXT. 4866
C           JET
C
C DATE    : 02/08/91
C
C-----------------------------------------------------------------------
C
       DIMENSION IDARR(14)
C
       CHARACTER*2 DD    , MM , YY
       CHARACTER*8 DATE0
C
C-----------------------------------------------------------------------
C
       CALL DATIMX( IDARR(1) )
C
C-----------------------------------------------------------------------
C...DAY
       IF( IDARR(6).LT.10 ) THEN
           WRITE( DD , 1000 ) IDARR(6)
       ELSE
           WRITE( DD , 1010 ) IDARR(6)
       END IF
C...MONTH
       IF( IDARR(7).LT.10 ) THEN
           WRITE( MM , 1000 ) IDARR(7)
       ELSE
           WRITE( MM , 1010 ) IDARR(7)
       END IF
C...YEAR
       IF( IDARR(14).LT.10 ) THEN
           WRITE( YY , 1000 ) IDARR(14)
       ELSE
           WRITE( YY , 1010 ) IDARR(14)
       END IF
C
C-----------------------------------------------------------------------
C
       WRITE( DATE0 , 1020 ) MM , DD , YY
C
C-----------------------------------------------------------------------
C
 1000  FORMAT( '0' , I1 )
 1010  FORMAT( I2 )
 1020  FORMAT( A , '-' , A , '-' , A )
C
C-----------------------------------------------------------------------
C
       RETURN
       END
C
C=======================================================================
       SUBROUTINE MINV( AB , N , ND , SCRTCH , DET , EPS , M , MODE )
       IMPLICIT REAL*8(A-H,O-Z)
C
       INCLUDE 'plun'
C
       DIMENSION AB( ND , N ) , SCRTCH( 2*N ) , DETER( 2 ) , WORK(1000)
C
       IF( 33*N .GT. 1000 ) THEN
                            WRITE(MSG1,1000) N , 33*N
                            CALL ERRMSS(LOUT,'MINV',1,MSG1,' ',' ')
       END IF
       IOPT = 2
       CALL DGEICD( AB , ND , N , IOPT , DUMMY , DETER , WORK , 33*N )
C      CALL DGEICD( AB , ND , N , IOPT , DETER , SCRTCH , 2*N )
C
       TEN = 10.0
       IF( DETER(2) .GT. 72.0D+00 ) DETER(2) = 72.0D+00
       DET = DETER(1) * ( TEN ** DETER(2) )
C
 1000  FORMAT(' DIMENSION ERROR : N = ' , I3 ,
     &        ' WORK DIMENSION MUST BE > ' , I4 )
       RETURN
       END
