      MODULE PARMMOD

      USE PRECISION

      IMPLICIT NONE

      PRIVATE

      PUBLIC :: SET_PARMMOD

      INTEGER, PUBLIC, PARAMETER ::
     P         NPARTC=13, NPARTT=13,
     P         MPARTC=14, MPARTT=9

      INTEGER, PUBLIC, SAVE ::
     I N1ST,   N2ND,   N3RD,   NADD,   NTOR,
     I NRTAL,  NLIM,   NSTS,
     I NPLG,   NPPART, NKNOT,  NTRI,   NTETRA, NCOORD,
     I NOPTIM, NOPTM1

      INTEGER, PUBLIC, SAVE ::
     I NSTRA,  NSRFS,  NSTEP

      INTEGER, PUBLIC, SAVE ::
     I NATM,   NMOL,   NION,   NPLS,   NPHOT,  NADV,   NADS,
     I NCLV,   NSNV,   NALV,   NALS,   NAIN,   NCOP,   nbgk

      INTEGER, PUBLIC, SAVE ::
     I NSD,    NSDW,   NCV

      INTEGER, PUBLIC, SAVE ::
     I NREAC,  NREC,   NRDS,   NRCX,   NREL,   NRPI

      INTEGER, PUBLIC, SAVE ::
     I NHD1,   NHD2,   NHD3,   NHD4,   NHD5,   NHD6

      INTEGER, PUBLIC, SAVE ::
     I NCHOR,  NCHEN

      INTEGER, PUBLIC, SAVE ::
     I NDX,    NDY,    NFL,    NDXP,   NDYP,   NPTRGT

      INTEGER, PUBLIC, SAVE ::
     I NPRNL


      INTEGER, PUBLIC, SAVE ::
     I NGEOM_USR, NCOUP_INPUT, NSMSTRA, NSTORAM, NGSTAL, NRPES

      INTEGER, PUBLIC, SAVE ::
     I NRAD,   NSWIT,   N1F,    N2F,    N3F,    NGITT,  NGITTP,
     I NRADS,  N2NDPLG, N1STS,  N2NDS,  NTRIS,  NKNOTS, NRTALS

      INTEGER, PUBLIC, SAVE ::
     I NGTSFT, NLIMPS, NLMPGS

      INTEGER, PUBLIC, SAVE ::
     I NCPV,   NBGV,   NBMAX,   NPTAL,  NCPV_STAT, NSCOP

      INTEGER, PUBLIC, SAVE ::
     I NSTRAP

      INTEGER, PUBLIC, SAVE ::
     I NIONP,  NATMP,  NMOLP,
     I NPLSP,  NPHOTP, NADVP,  NADSP,
     I NCLVP,  NALVP,  NALSP,
     I NSNVP,  NCPVP,  NBGVP,
     I NTALI,  NTALN,  NTALO,  NTALV,
     I NTALA,  NTALC,  NTALT,
     I NTALM,  NTALB,  NTALR,
     I NTALS,  NTLSA,  NTLSR,  NTALW,
     I N1MX,   N2MX,   NSPZ,   NSPZP, NSPZMC, NCOLMC

      INTEGER, PUBLIC, SAVE ::
     I NVOLTL, NVLTLP,
     I NSRFTL, NSFTLP

      INTEGER, PUBLIC, SAVE ::
     I NH0,    NH1,    NH2,    NH3

      INTEGER, PUBLIC, SAVE ::
     I NHSTOR, NSTORDT, NSTORDR

      INTEGER, PUBLIC, SAVE ::
     I NPLT

c slmod begin
c
c
c
      INTEGER, PUBLIC, SAVE ::
     I GRIDOPT,PRINTOPT,GEOMOPT,ADDOPT,NEUTOPT,DEBUGOPT,OPTVAC,GCHKOPT,
     I OPTTEST,STRDAT(1024),NSTRDAT,OPTUSER,CXD2OPT,OPTZMOTION,
     I NMOMCHA,TIMNUM,MAXTIM,MAXBIN,DIVSUR,NACELL1,NTRSEG,NINCS,
     I SBGKI,CBGKI,EBGKI,HADDI,HSTDI,IOPT1,NLOST

      INTEGER, PUBLIC, SAVE ::
     I  IN01, IN02, IN03, IN04, IN05, IN06, IN07, IN08, IN09, IN10,
     I  IN11, IN12, IN13, IN14, IN15

      LOGICAL, PUBLIC, SAVE ::
     L OUTPUT,NLSRFT

      REAL(DP), PUBLIC, SAVE ::
     R VOLCOR2,DELTAE0,NDELTAE0,EIRTORFRAC,PHISEG

      INTEGER, PUBLIC, SAVE ::
     I NPAR(9)

      REAL(DP), PUBLIC, SAVE ::
     R XPOS(9),YPOS(9),ZPOS(9),
     R XVEL(9),YVEL(9),ZVEL(9)

      CHARACTER(124), PUBLIC,SAVE :: COMMENT

      INTEGER, PUBLIC, ALLOCATABLE, SAVE ::
     I IGJUM4(:,:)

      REAL(DP), PUBLIC, ALLOCATABLE, SAVE ::
     R TABRCM(:,:), TABDSM(:,:), TABREM(:,:), TABDEM(:,:),
     R SLADDS(:,:),
     R COPV2(:,:,:),COPV3(:,:,:),
     R VOL2(:),
     R EIRRES(:,:),
     R PSTRDATA(:,:,:),ESTRDATA(:,:,:),PSTRDATM(:,:,:),ESTRDATM(:,:,:)

      INTEGER, PUBLIC, ALLOCATABLE, SAVE ::
     I TIMNBIN(:)

      REAL(DP), PUBLIC, ALLOCATABLE, SAVE ::
     R TIMX1(:), TIMX2(:), TIMY1(:), TIMY2(:),
     R TIMCNT(:), TIMAVG(:), TIMBIN(:,:),
     R TIMBINC(:,:)


c...temp
      REAL(DP), PUBLIC, SAVE ::
     R DUM

c slmod end
      CONTAINS


      SUBROUTINE SET_PARMMOD(ICAL)

      INTEGER, INTENT(IN) :: ICAL

!PB   INCLUDE 'PARMUSR'

      IF (ICAL == 1) THEN
C
C  GEOMETRY
C
        NRAD=MAX(N1ST*N2ND*N3RD,NTRI,NTETRA)+NADD+1
        IF (NRTAL==0) NRTAL=NRAD

C  ELIMINATE SOME ARRAYS IN CASE OF LEVGEO=5 OPTION (GEOMETRY OUTSIDE EIRENE-CODE)
        NSWIT=1-NGEOM_USR

C  IDENTIFY: WHICH GRIDS ARE THERE? N1F=0 OR N1F=1, IF N1ST=1, OR GT 1, RESP.
        N1F=1-1/N1ST
        N2F=1-1/N2ND
        N3F=1-1/N3RD
C
        NGITT=N1ST*N2ND*N3F+N1ST*N3RD*N2F+N2ND*N3RD*N1F
        NGITTP=NGITT+1
C
        NRADS=NSWIT*NRAD+(1-NSWIT)*1
        NRTALS=NSWIT*NRTAL+(1-NSWIT)*1
        N2NDPLG=NSWIT*(N2ND*N2F+NPLG*(1-N2F))+(1-NSWIT)*1
        N1STS=NSWIT*N1ST+(1-NSWIT)*1
        N2NDS=NSWIT*N2ND+(1-NSWIT)*1
        NTRIS=NSWIT*NTRI+(1-NSWIT)*1
        NKNOTS=NSWIT*NKNOT+(1-NSWIT)*1
C
C TALLIES
C
C  SPATIALLY RESOLVED SURFACE TALLIES?
        NGTSFT=NGSTAL*NGITT
        NLIMPS=NLIM+NSTS
        NLMPGS=NLIM+NSTS+NGTSFT*NSTS
C
C  GENERATION LIMIT TALLIES
C
        NBMAX=10
        NPTAL=30

C  PRIMARY SOURCE
        NSTRAP=NSTRA+1

C  SPECIES AND TALLIES  NTALV: TOTAL NUMBER OF VOLUME TALLIES
C                           NTALA: INDEX OF THE ADDITIONAL TRACKLENGTH
C                                  ESTIMATED TALLY
C                           NTALC: INDEX OF THE ADDITIONAL COLLISION
C                                  ESTIMATED TALLY
C                           NTALT: INDEX OF THE TIME DEP. TALLY
C                                  (SNAPSHOT ESTIMATOR)
C                           NTALM: INDEX OF THE TALLIES FOR COUPLING,
C                                  (E.G. MOMENTUM SOURCES)
C                           NTALB: INDEX OF THE BGK TALLY
C                           NTALR: INDEX OF THE ALGEBRAIC TALLY
C                       NTALS: TOTAL NUMBER OF SURFACE TALLIES
C                           NTLSA: INDEX OF THE ADDITIONAL TALLY
C                                  (TRACKLENGTH AND COLLISION ESTIMATORS
C                                   ARE IDENTICAL FOR SURFACE AVERAGES)
C                           NTLSR: INDEX OF THE ALGEBRAIC TALLY
C                       NTALI: TOTAL NUMBER OF INPUT TALLIES
C                           NTALN: INDEX OF THE ADDITIONAL INPUT TALLIES
C                           NTALO: INDEX OF THE CELL VOLUME TALLIES
C                       NTALW: TOTAL NUMBER OF SURFACE TALLIES
        NIONP=NION+1
        NATMP=NATM+1
        NMOLP=NMOL+1
        NPLSP=NPLS+1
        NPHOTP=NPHOT+1
        NADVP=NADV+1
        NADSP=NADS+1
        NCLVP=NCLV+1
        NALVP=NALV+1
        NALSP=NALS+1
        NSNVP=NSNV+1
        NTALI=15
        NTALN=12
        NTALO=14
        NTALV=51
        NTALA=NTALV-14
        NTALC=NTALV-13
        NTALT=NTALV-12
        NTALM=NTALV-11
        NTALB=NTALV-10
        NTALR=NTALV-9
        NTALS=40
        NTLSA=NTALS-2
        NTLSR=NTALS-1
!pb        NTALW=41
        N2MX=NATM+NMOL+NION+NPLS+NADS+NALS
        NSPZ=NPHOT+NATM+NMOL+NION+NPLS
        NSPZP=NSPZ+1
        NSPZMC=NPHOT+NATM+NMOL+NION


C  TOTAL NUMBER OF SURFACE AVERAGED TALLIES
        NSRFTL=11*NATM+11*NMOL+11*NION+3*NPLS+1+
     P          1*NADS+1*NALS+1*NSPZ
        NSFTLP=11*NATMP+11*NMOLP+11*NIONP+3*NPLSP+1+
     P        1*NADSP+1*NALSP+1*NSPZP

C  SURFACE REFLECTION DATA
        NHD1=12
        NHD2=7
        NHD3=5
        NHD4=5
        NHD5=5

C  ATOMIC DATA STORAGE
C  NSTORAM=0     : --> NHSTOR=0 --> NSTORDT=1,      NSTORDR=1
C  NSTORAM=1,...9: --> NHSTOR=1 --> NSTORDT=NSTORAM,NSTORDR=NRAD
        NHSTOR=1-1/(NSTORAM+1)
        NSTORDT=NHSTOR*NSTORAM+(1-NHSTOR)*1
        NSTORDR=NHSTOR*NRAD+   (1-NHSTOR)*1
C
c slmod begin
c slmod begin
        NMOMCHA=1
        DIVSUR=1
        IOPT1=1

        VOLCOR2=1.0D0
        EIRTORFRAC=1.0D0
        NDELTAE0=0.0D0
        DELTAE0=0.0D0

        OUTPUT=.FALSE.

        IF (.FALSE.) THEN
          IN01 =  1
          IN02 =  2 
          IN03 =  3 
          IN04 =  4 
          IN05 =  5 
          IN06 =  6 
          IN07 =  7
          IN08 =  8
          IN09 =  9
          IN10 = 10
          IN11 = 11
          IN12 = 12
          IN13 = 13
          IN14 = 14
          IN15 = 15
        ELSE
          IN01 =  1
          IN02 =  1 
          IN03 =  1 
          IN04 =  1 
          IN05 =  1 
          IN06 =  1 
          IN07 =  1
          IN08 =  1
          IN09 =  1
          IN10 =  1
          IN11 =  1
          IN12 =  1
          IN13 =  1
          IN14 =  1
          IN15 =  1
        ENDIF
c slmod end
      ELSE IF (ICAL == 2) THEN

        NCOLMC=NPLS+NRDS+NREC
        NCPV=NCOP*NPLS
        NBGV=NBGK*3
        NCPVP=NCPV+1
        NBGVP=NBGV+1
        N1MX=NATM+NMOL+NION+NPLS+NADV+NALV+NCLV+NCPV+NBGV
C  TOTAL NUMBER OF VOLUME AVERAGED TALLIES
        NVOLTL=5*NATM+5*NMOL+5*NION+1*NADV+1*NCLV+
     P         1*NSNV+1*NCPV+1*NALV+1*NBGV+
     P         3*NPLS+18+3*(NATM+NMOL+NION)
        NVLTLP=5*NATMP+5*NMOLP+5*NIONP+1*NADVP+1*NCLVP+
     P         1*NSNVP+1*NCPVP+1*NALVP+1*NBGVP+
     P         3*NPLSP+18+3*(NATMP+NMOLP+NIONP)

        NCPV_STAT=(NCPV+NPLS+2)*NSWIT+1
        NSCOP=NCPV_STAT*NRTALS
c slmod begin
        ALLOCATE (IGJUM4(NRAD,0:9))
      
        ALLOCATE (TABRCM(NREC,NSTORDR))
        ALLOCATE (TABDSM(NRDS,NSTORDR))
        ALLOCATE (TABREM(NREC,NSTORDR))
        ALLOCATE (TABDEM(NRDS,NSTORDR))

        TABRCM=1.0D0
        TABREM=1.0D0
        TABDSM=1.0D0
        TABDEM=1.0D0

c...    Move to couple_divimp.f?
        ALLOCATE (SLADDS(0:1,NADD))

c...    Only allocate if necessary:
        ALLOCATE (COPV2(NCPV,NRAD,0:NMOMCHA))
        ALLOCATE (COPV3(NCPV,NRAD,0:NMOMCHA))

        COPV2=0.0D0
        COPV3=0.0D0

c...    Toroidal volumes:
        ALLOCATE (VOL2(NRAD))

        ALLOCATE (EIRRES(7,NPLS))

        ALLOCATE (PSTRDATA(NATM,NRAD,NSTRA))
        ALLOCATE (ESTRDATA(NATM,NRAD,NSTRA))
        ALLOCATE (PSTRDATM(NMOL,NRAD,NSTRA))
        ALLOCATE (ESTRDATM(NMOL,NRAD,NSTRA))

        MAXTIM=100
        MAXBIN=100
        ALLOCATE (TIMNBIN(MAXTIM))
        ALLOCATE (TIMX1(MAXTIM))
        ALLOCATE (TIMX2(MAXTIM))
        ALLOCATE (TIMY1(MAXTIM))
        ALLOCATE (TIMY2(MAXTIM))
        ALLOCATE (TIMCNT(MAXTIM))
        ALLOCATE (TIMAVG(MAXTIM))
        ALLOCATE (TIMBIN(MAXTIM,MAXBIN))
        ALLOCATE (TIMBINC(MAXTIM,MAXBIN))
c slmod end
      END IF

      RETURN
      END SUBROUTINE SET_PARMMOD

      END MODULE PARMMOD
