      MODULE CSDVI_COP

      USE PRECISION
      USE PARMMOD

      IMPLICIT NONE

      PRIVATE

      PUBLIC :: ALLOC_CSDVI_COP, DEALLOC_CSDVI_COP, INIT_CSDVI_COP

      REAL(DP), PUBLIC, ALLOCATABLE, SAVE ::
     R  SIGMA_COP(:,:), SGMS_COP(:),
     R  STV_COP(:,:),   STVS_COP(:),
     R  SDVIA_COP(:,:), EE_COP(:,:), EES_COP(:)

      INTEGER, PUBLIC, SAVE :: NCPVI_STAT


      CONTAINS


      SUBROUTINE ALLOC_CSDVI_COP

      IF (ALLOCATED(SIGMA_COP)) RETURN

      ALLOCATE (SIGMA_COP(NCPV_STAT,NRTALS))
      ALLOCATE (STV_COP(NCPV_STAT,NRTALS))
      ALLOCATE (SDVIA_COP(NCPV_STAT,NRTALS))
      ALLOCATE (EE_COP(NCPV_STAT,NRTALS))

      ALLOCATE (SGMS_COP(NCPV_STAT))
      ALLOCATE (STVS_COP(NCPV_STAT))
      ALLOCATE (EES_COP(NCPV_STAT))

      WRITE (55,'(A,T25,I15)')
     .       ' CSDVI_COP ',(4*NRTALS+3)*NCPV_STAT*8

      CALL INIT_CSDVI_COP

      RETURN
      END SUBROUTINE ALLOC_CSDVI_COP


      SUBROUTINE DEALLOC_CSDVI_COP

      IF (.NOT.ALLOCATED(SIGMA_COP)) RETURN

      DEALLOCATE (SIGMA_COP)
      DEALLOCATE (STV_COP)
      DEALLOCATE (SDVIA_COP)
      DEALLOCATE (EE_COP)

      DEALLOCATE (SGMS_COP)
      DEALLOCATE (STVS_COP)
      DEALLOCATE (EES_COP)

      RETURN
      END SUBROUTINE DEALLOC_CSDVI_COP


      SUBROUTINE INIT_CSDVI_COP

      SIGMA_COP = 0._DP
      STV_COP   = 0._DP
      SDVIA_COP = 0._DP
      EE_COP    = 0._DP

      SGMS_COP  = 0._DP
      STVS_COP  = 0._DP
      EES_COP   = 0._DP

      RETURN
      END SUBROUTINE INIT_CSDVI_COP

      END MODULE CSDVI_COP
