c  25.11.05: option modcol(3,4...)=3 added 
c            (adopted from fpatha)
c            cx rate option 4 added (adopted from fpatha)
c            syncronized with fpatha
c  still missing: el (and bgk) and pi reactions
C               added: jcou,ncou
!pb  30.08.06:  data structure for reaction data redefined
!pb  12.10.06:  modcol revised
!pb  22.11.06:  flag for shift of first parameter to rate_coeff introduced
!pb  28.11.06:  initialization of XSTOR reactivated because of trouble in
!pb             BGK iteration
C
      FUNCTION FPATHI (K,CFLAG,JCOU,NCOU)
C
C   CALCULATE MEAN FREE PATH AND REACTION RATES FOR
C   "BEAM TEST IONS" OF VELOCITY VEL 
C   IN DRIFTING MAXWELLIAN PLASMA-BACKGROUND
C
C   INPUT:
C   K         :  CURRENT GRID CELL
C   JCOU, NCOU:  THERE WILL BE NCOU CALLS TO FPATH, FOR SAME TEST PARTICLE
C                COORDINATES. THIS CURRENT CALL IS CALL NO. JCOU.
 
C   OUTPUT: COMMON COMLCA
C           CFLAG: FLAG FOR SAMPLING OF POST COLLISION STATES
C                  SAME AS IN FPATHA.F
C
      USE PRECISION
      USE PARMMOD
      USE COMUSR
      USE CCONA
      USE CLOGAU
      USE CINIT
      USE CZT1
      USE COMPRT
      USE COMXS

      IMPLICIT NONE

      REAL(DP), INTENT(OUT) :: CFLAG(7,3)
      INTEGER, INTENT(IN) :: K,JCOU,NCOU

      REAL(DP) :: DENIO(NPLS), ZTI(NPLS)
      REAL(DP) :: PVELQ(NPLSV)
      REAL(DP) :: TBPI3(9), TBCX3(9), TBEL3(9), FP(6)
      REAL(DP) :: EPPI3(9), EPCX3(9), EPEL3(9)
      REAL(DP) :: ELB, EXPO, FEPLCX3, ELAB, VEFF, CROSS, CXS, SIGMAX,
     .          VX, VY, VZ, PVELQ0, FPATHI, DENEL, FTABEI1, PLS,
     .          TBCX, VEFFQ, FEELEI1, EHEAVY, FEHVDS1, RATE_COEFF,
     .          VREL,VRELQ, ENERGY_RATE_COEFF, RCMIN, RCMAX, SNGL_POLY 
      INTEGER :: J, IF8, JAN, IREAC, IPL, IIO, IIEI, KK, II,
     .           IBGK, IRCX, IIEL, IICX, IIPI, I1, I2, IPLSTI, IPLSV,
     .           IREI, IRPI
C
C  SET DEFAULTS: NO REACTIONS
C
      XSTORV=0.D0
!pb      IF (NCOU.GT.1) THEN
        XSTOR=0.D0
!pb      ENDIF
      FPATHI=1.D10
      SIGMAX=0.D0
C
      IF (LGVAC(K,0)) RETURN
C
C   LOCAL PLASMA PARAMETERS
C
      DENEL=DEIN(K)
      PVELQ0=VEL*VEL

      DO 2 IPLS=1,NPLSI
        ZTI(IPLS)=ZT1(IPLS,K)
2       DENIO(IPLS)=DIIN(IPLS,K)
C
      DO 3 IPLS=1,NPLSV
        IF (NLDRFT) THEN
          IF (INDPRO(4) == 8) THEN
            CALL VECUSR (2,VX,VY,VZ,IPLS)
          ELSE
            VX=VXIN(IPLS,K)
            VY=VYIN(IPLS,K)
            VZ=VZIN(IPLS,K)
          END IF
          PVELQ(IPLS)=(VELX*VEL-VX)**2+
     .                (VELY*VEL-VY)**2+
     .                (VELZ*VEL-VZ)**2
        ELSE
          PVELQ(IPLS)=PVELQ0
        ENDIF
3     CONTINUE
C
C
C  ELECTRON IMPACT COLLISION - RATE - COEFFICIENT
C  NO MASS SCALING NEEDED FOR BULK ELECTRONS
C
20    IF (LGIEI(IION,0).EQ.0.OR.LGVAC(K,NPLS+1)) GOTO 30
      DO 10 IIEI=1,NIDSI(IION)
        IREI=LGIEI(IION,IIEI)
        IF (MODCOL(1,2,IREI).EQ.1) THEN
          IF (NSTORDR >= NRAD) THEN
            SIGVEI(IREI)=TABDS1(IREI,K)
          ELSE
            SIGVEI(IREI)=FTABEI1(IREI,K)
          END IF
        ELSE
          GOTO 990
        ENDIF
C
        IF (NSTORDR >= NRAD) THEN
          ESIGEI(IREI,5)=EELDS1(IREI,K)
          EHEAVY=EHVDS1(IREI,K)
        ELSE
          ESIGEI(IREI,5)=FEELEI1(IREI,K)
          EHEAVY=FEHVDS1(IREI,K)
        ENDIF
C
        ESIGEI(IREI,1)=EATDS(IREI,0,1)*E0+EATDS(IREI,0,2)*EHEAVY
        ESIGEI(IREI,2)=EMLDS(IREI,0,1)*E0+EMLDS(IREI,0,2)*EHEAVY
        ESIGEI(IREI,3)=EIODS(IREI,0,1)*E0+EIODS(IREI,0,2)*EHEAVY
        ESIGEI(IREI,4)=EPLDS(IREI,  1)*E0+EPLDS(IREI,  2)*EHEAVY

        SIGMAX=MAX(SIGMAX,SIGVEI(IREI))
        SIGEIT=SIGEIT+SIGVEI(IREI)
10    CONTINUE
C
C  GENERAL ION IMPACT ON TEST ION IION, BULK ION SPEZIES IPLS=1,NPLSI
C  30--->40
C
30    IF (LGIPI(IION,0,0).EQ.0) GOTO 40
      DO 36 IIPI=1,NIPII(IION)
        SIGVPI(IIPI)=0.
        SIGPIT=SIGPIT+SIGVPI(IIPI)
36    CONTINUE
C
C  CHARGE EXCHANGE RATE COEFFICIENT OF TEST ION IION
C  WITH BULK IONS OF SPEZIES IPLS=1,NPLSI
C  40--->50
C
40    CONTINUE
      IF (LGICX(IION,0,0).EQ.0.OR.LGVAC(K,0)) GOTO 50
      DO 41 IICX=1,NICXI(IION)
        IRCX=LGICX(IION,IICX,0)
        IPLS=LGICX(IION,IICX,1)
        IPLSTI=MPLSTI(IPLS)
        IPLSV=MPLSV(IPLS)
        IF (LGVAC(K,IPLS)) GOTO 41
C
C  1.) RATE COEFFICIENT
C
        IF (MODCOL(3,2,IRCX).EQ.1) THEN
C  MODEL 1:
C  MAXWELLIAN RATE, IGNORE NEUTRAL VELOCITY
          IF (NSTORDR >= NRAD) THEN
            SIGVCX(IRCX)=TABCX3(IRCX,K,1)
          ELSE
CDR  SIGVCX(IRCX)=FTABCX3 : NOT READY
            KK=NREACX(IRCX)
            PLS=TIINL(IPLSTI,K)+ADDCX(IRCX,IPLS)
            TBCX = RATE_COEFF(KK,PLS,0._DP,.TRUE.,0)*DIIN(IPLS,K)
            SIGVCX(IRCX)=TBCX
          END IF
        ELSEIF (MODCOL(3,2,IRCX).EQ.2) THEN
C  MODEL 2:
C  BEAM - MAXWELLIAN RATE
          IF (TIIN(IPLSTI,K).LT.TVAC) THEN
C     HERE: T_I IS SO LOW, THAT ALL ION ENERGY IS IN DRIFT MOTION.
C           HENCE: USE BEAM-BEAM RATE INSTEAD.
            VRELQ=PVELQ(IPLSV)
            VREL=SQRT(VRELQ)
            ELAB=LOG(VRELQ)+DEFCX(IRCX)
            IREAC=MODCOL(3,1,IRCX)
            CXS=CROSS(ELAB,IREAC,IRCX,'FPATHI CX1')
            SIGVCX(IRCX)=CXS*VREL*DENIO(IPLS)
          ELSE
C  MINIMUM PROJECTILE ENERGY: 0.1 EV
            ELB=MAX(-2.3_DP,LOG(PVELQ(IPLSV))+EEFCX(IRCX))
            IF (NSTORDR >= NRAD) THEN
! DOUBLE POLYNOMIAL FIT REDUCED TO SINGLE POLYNOMIAL FIT BY 
! PRECALCULATING TEMPERATURE DEPENDENCIES
              TBCX3(1:NSTORDT) = TABCX3(IRCX,K,1:NSTORDT)
              FP = 0._DP
              RCMIN = -HUGE(1._DP)
              RCMAX = HUGE(1._DP)
              EXPO = SNGL_POLY(TBCX3,ELB,RCMIN,RCMAX,FP,0,0)
            ELSE
! CALCULATE RATE-COEFFICIENT 
              KK=NREACX(IRCX)
              PLS=TIINL(IPLSTI,K)+ADDCX(IRCX,IPLS)
              EXPO = RATE_COEFF(KK,PLS,ELB,.FALSE.,0) + DIINL(IPLS,K)
     .               + FACREA(KK)
            END IF
            SIGVCX(IRCX)=EXP(EXPO)
          ENDIF
        ELSEIF (MODCOL(3,2,IRCX).EQ.3) THEN
C  MODEL 3:
C  BEAM - BEAM RATE, BUT WITH EFFECTIVE INTERACTION ENERGY
          VEFFQ=ZTI(IPLS)+PVELQ(IPLSV)
          VEFF=SQRT(VEFFQ)
          ELAB=LOG(VEFFQ)+DEFCX(IRCX)
          IREAC=MODCOL(3,1,IRCX)
          CXS=CROSS(ELAB,IREAC,IRCX,'FPATHI CX2')
          SIGVCX(IRCX)=CXS*VEFF*DENIO(IPLS)
        ELSEIF (MODCOL(3,2,IRCX).EQ.4) THEN
C  MODEL 4
C  BEAM - BEAM RATE, IGNORE THERMAL ION ENERGY
          VRELQ=PVELQ(IPLSV)
          VREL=SQRT(VRELQ)
          ELAB=LOG(VRELQ)+DEFCX(IRCX)
          IREAC=MODCOL(3,1,IRCX)
          CXS=CROSS(ELAB,IREAC,IRCX,'FPATHI CX3')
          SIGVCX(IRCX)=CXS*VREL*DENIO(IPLS)
        ELSE
          GOTO 992
        ENDIF
C
        SIGMAX=MAX(SIGMAX,SIGVCX(IRCX))
        SIGCXT=SIGCXT+SIGVCX(IRCX)
C
C  2.) BULK ION ENERGY LOSS RATE:
C
        IF (MODCOL(3,4,IRCX).EQ.1) THEN
C  MODEL 1:
C  MEAN ENERGY FROM DRIFTING MAXWELLIAN
C  (ONLY NEEDED FOR TRACKLENGTH ESTIMATOR)
C  ION SAMPLING FROM MAXWELLIAN
          IF (IESTCX(IRCX,3).EQ.0) THEN  ! for tracklength estimator only
          IF (NSTORDR >= NRAD) THEN
            ESIGCX(IRCX,1)=EPLCX3(IRCX,K,1)
          ELSE
            ESIGCX(IRCX,1)=FEPLCX3(IRCX,K)
          END IF
          CFLAG(3,1)=2
          ENDIF  ! this was for tracklength estimator only
        ELSEIF (MODCOL(3,4,IRCX).EQ.2) THEN
C  MODEL 2:
C  MEAN ENERGY FROM CROSS SECTION WEIGHTED DRIFTING MAXWELLIAN
C  (ONLY NEEDED FOR TRACKLENGTH ESTIMATOR)
C  ION SAMPLING FROM WEIGHTED DRIFTING MAXWELLIAN (E.G., BY REJECTION)
          IF (IESTCX(IRCX,3).EQ.0) THEN  ! for tracklength estimator only
C  MINIMUM PROJECTILE ENERGY: 0.1 EV
            ELB=MAX(-2.3_DP,LOG(PVELQ(IPLSV))+EEFCX(IRCX))
            IF (NSTORDR >= NRAD) THEN
! DOUBLE POLYNOMIAL FIT REDUCED TO SINGLE POLYNOMIAL FIT BY 
! PRECALCULATING TEMPERATURE DEPENDENCIES
              EPCX3(1:NSTORDT) = EPLCX3(IRCX,K,1:NSTORDT)
              FP = 0._DP
              RCMIN = -HUGE(1._DP)
              RCMAX = HUGE(1._DP)
              EXPO = SNGL_POLY(TBEL3,ELB,RCMIN,RCMAX,FP,0,0)
            ELSE
! CALCULATE ENERGY-WEIGHTED RATE-COEFFICIENT 
              KK=NELRCX(IRCX)
              PLS=TIINL(IPLSTI,K)+ADDCX(IRCX,IPLS)
              EXPO = ENERGY_RATE_COEFF(KK,PLS,ELB,.FALSE.,0) 
     .               + DIINL(IPLS,K) + FACREA(KK)
            END IF
            ESIGCX(IRCX,1)=EXP(EXPO)/SIGVCX(IRCX)
            ESIGCX(IRCX,1)=ESIGCX(IRCX,1)+EDRIFT(IPLS,K)
          ENDIF  ! this was for tracklength estimator only
          CFLAG(3,1)=3
        ELSEIF (MODCOL(3,4,IRCX).EQ.3) THEN
C  MODEL 3:
C  MEAN ENERGY FROM DRIFTING ISOTROPIC ONE SPEED DISTRIBUTION
C  (ONLY NEEDED FOR TRACKLENGTH ESTIMATOR)
C  ION SAMPLING FROM WEIGHTED DRIFTING ISOTROPIC ONE SPEED DISTRIBUTION
          IF (IESTCX(IRCX,3).EQ.0) THEN  ! for tracklength estimator only
          IF (NSTORDR >= NRAD) THEN
            ESIGCX(IRCX,1)=EPLCX3(IRCX,K,1)
          ELSE
            ESIGCX(IRCX,1)=FEPLCX3(IRCX,K)
          END IF
          ENDIF  ! this was for tracklength estimator only
          CFLAG(3,1)=1
        ELSE
          GOTO 992
        ENDIF
41    CONTINUE
C
C  ELASTIC COLLISIONS OF TEST-ION IION  WITH IONS OF SPEZIES IPLS=1,NPLSI 
C  50--->60
C
50    CONTINUE
C
60    CONTINUE
C
C     TOTAL
C
100   CONTINUE
C
      IF (SIGEIT.GT.0._DP) THEN
        DO IREI=1,NRDS
          IF (SIGVEI(IREI) .LE. SIGMAX*1.D-10) THEN
            SIGEIT=SIGEIT-SIGVEI(IREI)
            SIGVEI(IREI) = 0.D0
          END IF
        END DO
      END IF

      IF (SIGPIT.GT.0._DP) THEN
        DO IRPI=1,NRPI
          IF (SIGVPI(IRPI) .LE. SIGMAX*1.D-10) THEN
            SIGPIT=SIGPIT-SIGVPI(IRPI)
            SIGVPI(IRPI) = 0.D0
          END IF
        END DO
      END IF

      IF (SIGCXT.GT.0._DP) THEN
        DO IRCX=1,NRCX
          IF (SIGVCX(IRCX) .LE. SIGMAX*1.D-10) THEN
            SIGCXT=SIGCXT-SIGVCX(IRCX)
            SIGVCX(IRCX) = 0.D0
          END IF
        END DO
      END IF
C
      SIGTOT=SIGPIT+SIGCXT+SIGEIT
      IF (SIGTOT.GT.1.D-20) THEN
        FPATHI=VEL/SIGTOT
        ZMFPI=1./FPATHI
      ENDIF
C
      RETURN
990   CONTINUE
      WRITE (iunout,*) 'ERROR IN FPATHI: INCONSISTENT ELEC. IMP. DATA'
      WRITE (iunout,*) 'IION,IREI,MODCOL(1,J=1,4,IREI) '
      WRITE (iunout,*) IION,IREI,(MODCOL(1,J,IREI),J=1,4)
      CALL EXIT_OWN(1)
992   CONTINUE
      WRITE (iunout,*) 
     .  'ERROR IN FPATHI: INCONSISTENT CHARGE EXCHANGE DATA'
      WRITE (iunout,*) 'IION,IRCX,MODCOL(3,J=1,4,IRCX) '
      DO 994 IPL=1,NPLSI
        WRITE (iunout,*) IION,IRCX,(MODCOL(3,J,IRCX),J=1,4)
994   CONTINUE
      CALL EXIT_OWN(1)
      END
