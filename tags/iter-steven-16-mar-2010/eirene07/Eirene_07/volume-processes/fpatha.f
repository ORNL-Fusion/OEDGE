C   29.11.05:   comments,  empty lines, etc... to syncronize with
C               other fpath.. routines
C               use CSPEI removed
C               IRDS --> IREI
C               SIGMAX NOW SET ONLY FOR ACTIVE REACTIONS
C               added: jcou,ncou
!pb  30.08.06:  data structure for reaction data redefined
!pb  12.10.06:  modcol revised
!pb  22.11.06:  flag for shift of first parameter to rate_coeff introduced
!pb  28.11.06:  initialization of XSTOR reactivated because of trouble in
!pb             BGK iteration
C
      FUNCTION FPATHA (K,CFLAG,JCOU,NCOU)
C
C   CALCULATE MEAN FREE PATH AND REACTION RATES FOR 
C   "BEAM OF NEUTRAL ATOMS" OF VELOCITY VEL
C   IN DRIFTING MAXWELLIAN PLASMA-BACKGROUND
C
C   INPUT:
C   K         :  CURRENT GRID CELL
C   JCOU, NCOU:  THERE WILL BE NCOU CALLS TO FPATH, FOR SAME TEST PARTICLE
C                COORDINATES. THIS CURRENT CALL IS CALL NO. JCOU.

C   OUTPUT: COMMON COMLCA
C           CFLAG: FLAG FOR SAMPLING OF POST COLLISION STATES
C           CFLAG(1,...): EI
C           CFLAG(3,...): CX
C           CFLAG(4,...): II
C           CFLAG(5,...): EL
C           CFLAG(6,...): RC
C
C  CFLAG(...,1):
C      =0:   VI: DELTA COLLISION IN VELOCITY SPACE (BUT DIFFERENT
C                                                   SPECIES ALLOWED)
C      =1:   VI: MONOENERGETIC AND ISOTROPIC IN CENTER OF MASS SYSTEM
C      =2:   VI: MAXWELL PLUS DRIFT
C      =3:   VI: SIGMA-V-WEIGHTED MAXWELLIAN PLUS DRIFT
C
      USE PRECISION
      USE PARMMOD
      USE COMUSR
      USE CCONA
      USE CLOGAU
      USE CINIT
      USE CZT1
      USE COMPRT
      USE COMXS
      USE CESTIM

      IMPLICIT NONE

      REAL(DP), INTENT(OUT) :: CFLAG(7,3)
      INTEGER, INTENT(IN) :: K,JCOU,NCOU

      REAL(DP) :: DENIO(NPLS), ZTI(NPLS)
      REAL(DP) :: PVELQ(NPLSV)
      REAL(DP) :: TBPI3(9), TBCX3(9), TBEL3(9), FP(6)
      REAL(DP) :: EPPI3(9), EPCX3(9), EPEL3(9)
      REAL(DP) :: CEL, RMN, RLMS, ER, RMI, RMSI, CXS, VEFFQ, TBCX, VEFF,
     .          FEPLCX3, SIG, FEPLEL3, TBEL, RATE_COEFF, SNGL_POLY,
     .          ELTHDUM, CTCHDUM, SIGMAX, FTABEI1, EHEAVY, FEELEI1,
     .          FEHVDS1, DENEL, FPATHA, VX, VY, VZ, PVELQ0, ELAB,
     .          VRELQ, VREL, FEPLPI3, CII, CROSS, ELB, PLS, TBPI, EXPO,
     .          RCMIN, RCMAX, ENERGY_RATE_COEFF
      INTEGER :: IBGK, IRCX, IAEL, IREL, IPL, IAT, IAEI, IREI, IAPI,
     .           IRPI, KK, IREAC, IACX, II, IF8, JAN, J, I1, I2, IPLSTI,
     .           IPLSV, IROT
C
C  SET DEFAULTS: NO REACTIONS
C
      XSTORV=0.D0
!pb      IF (NCOU.GT.1) THEN
        XSTOR=0.D0
!pb      ENDIF
      FPATHA=1.D10
      SIGMAX=0.D0
C
      IF (LGVAC(K,0)) RETURN
C
C   LOCAL PLASMA PARAMETERS
C
      DENEL=DEIN(K)
      PVELQ0=VEL*VEL

      DO 2 IPLS=1,NPLSI
        ZTI(IPLS)=ZT1(IPLS,K)
2       DENIO(IPLS)=DIIN(IPLS,K)
C
      DO 3 IPLS=1,NPLSV
        IF (NLDRFT) THEN
          IF (INDPRO(4) == 8) THEN
            CALL VECUSR (2,VX,VY,VZ,IPLS)
          ELSE
            VX=VXIN(IPLS,K)
            VY=VYIN(IPLS,K)
            VZ=VZIN(IPLS,K)
          END IF
          PVELQ(IPLS)=(VELX*VEL-VX)**2+
     .                (VELY*VEL-VY)**2+
     .                (VELZ*VEL-VZ)**2
        ELSE
          PVELQ(IPLS)=PVELQ0
        ENDIF
3     CONTINUE
C
C
C  ELECTRON IMPACT COLLISION - RATE - COEFFICIENT
C  NO MASS SCALING NEEDED FOR BULK ELECTRONS
C
20    IF (LGAEI(IATM,0).EQ.0.OR.LGVAC(K,NPLS+1)) GOTO 30
      DO 10 IAEI=1,NAEII(IATM)
        IREI=LGAEI(IATM,IAEI)
        IF (MODCOL(1,2,IREI).EQ.1) THEN
          IF (NSTORDR >= NRAD) THEN
            SIGVEI(IREI)=TABDS1(IREI,K)
          ELSE
            SIGVEI(IREI)=FTABEI1(IREI,K)
          END IF
        ELSE
          GOTO 990
        ENDIF
C
        IF (NSTORDR >= NRAD) THEN
          ESIGEI(IREI,5)=EELDS1(IREI,K)
          EHEAVY=EHVDS1(IREI,K)
        ELSE
          ESIGEI(IREI,5)=FEELEI1(IREI,K)
          EHEAVY=FEHVDS1(IREI,K)
        ENDIF
C
        ESIGEI(IREI,1)=EATDS(IREI,0,1)*E0+EATDS(IREI,0,2)*EHEAVY
        ESIGEI(IREI,2)=EMLDS(IREI,0,1)*E0+EMLDS(IREI,0,2)*EHEAVY
        ESIGEI(IREI,3)=EIODS(IREI,0,1)*E0+EIODS(IREI,0,2)*EHEAVY
        ESIGEI(IREI,4)=EPLDS(IREI,  1)*E0+EPLDS(IREI,  2)*EHEAVY

        SIGMAX=MAX(SIGMAX,SIGVEI(IREI))
        SIGEIT=SIGEIT+SIGVEI(IREI)
10    CONTINUE
C
C  GENERAL ION IMPACT ON ATOM IATM, BULK ION SPEZIES IPLS=1,NPLSI
C  30--->40
C
30    IF (LGAPI(IATM,0,0).EQ.0) GOTO 40
      DO 36 IAPI=1,NAPII(IATM)
        IRPI=LGAPI(IATM,IAPI,0)
        IPLS=LGAPI(IATM,IAPI,1)
        IPLSV=MPLSV(IPLS)
        IPLSTI=MPLSTI(IPLS)
        IF (LGVAC(K,IPLS)) GOTO 36
C
C  1.) RATE COEFFICIENT
C
        IF (MODCOL(4,2,IRPI).EQ.1) THEN
C  MAXWELL
          IF (NSTORDR >= NRAD) THEN
            SIGVPI(IRPI)=TABPI3(IRPI,K,1)
          ELSE
CDR  SIGVPI(IRPI)=FTABPI3 : NOT READY
            KK=NREAPI(IRPI)
            PLS=TIINL(IPLSTI,K)+ADDPI(IRPI,IPLS)
            TBPI = RATE_COEFF(KK,PLS,0._DP,.TRUE.,0)*DIIN(IPLS,K)
            SIGVPI(IRPI)=TBPI
          END IF
        ELSEIF (MODCOL(4,2,IRPI).EQ.2) THEN
C  BEAM - MAXWELL
C
C  MINIMUM PROJECTILE ENERGY: 0.1 EV
          ELB=MAX(-2.3_DP,LOG(PVELQ(IPLSV))+EEFPI(IRPI))
          IF (NSTORDR >= NRAD) THEN
            TBPI3(1:NSTORDT) = TABPI3(IRPI,K,1:NSTORDT)
            FP = 0._DP
            RCMIN = -HUGE(1._DP)
            RCMAX = HUGE(1._DP)
            EXPO = SNGL_POLY(TBPI3,ELB,RCMIN,RCMAX,FP,0,0)
          ELSE
! CALCULATE RATE-COEFFICIENT 
            KK=NREAPI(IRPI)
            PLS=TIINL(IPLSTI,K)+ADDPI(IRPI,IPLS)
            EXPO = RATE_COEFF(KK,PLS,ELB,.FALSE.,0) + DIINL(IPLS,K)
     .             + FACREA(KK)
          END IF
          SIGVPI(IRPI)=EXP(EXPO)
        ELSEIF (MODCOL(4,2,IRPI).EQ.3) THEN
C  BEAM - BEAM
          VRELQ=ZTI(IPLS)+PVELQ(IPLSV)
          VREL=SQRT(VRELQ)
          ELAB=LOG(VRELQ)+DEFPI(IRPI)
          IREAC=MODCOL(4,1,IRPI)
          CII=CROSS(ELAB,IREAC,IRPI,'FPATHA II')
          SIGVPI(IRPI)=CII*VREL*DENIO(IPLS)
        ELSE
          GOTO 991
        ENDIF
C
C  2.A ELECTRON ENERGY LOSS / COLLISION (EV)
C
        ESIGPI(IRPI,2)=0.D0
C
        SIGMAX=MAX(SIGMAX,SIGVPI(IRPI))
        SIGPIT=SIGPIT+SIGVPI(IRPI)
C
C  2.B BULK ION ENERGY LOSS / COLLISION (EV)
C
        IF (NSTORDR >= NRAD) THEN
          ESIGPI(IRPI,1)=EPLPI3(IRPI,K,1)
        ELSE
          ESIGPI(IRPI,1)=FEPLPI3(IRPI,K)
        END IF
        CFLAG(4,1)=2
36    CONTINUE
C
C  CHARGE EXCHANGE RATE COEFFICIENT OF ATOMS IATM
C  WITH BULK IONS OF SPEZIES IPLS=1,NPLSI
C  40--->50
C
40    CONTINUE
      IF (LGACX(IATM,0,0).EQ.0.OR.LGVAC(K,0)) GOTO 50
      DO 41 IACX=1,NACXI(IATM)
        IRCX=LGACX(IATM,IACX,0)
        IPLS=LGACX(IATM,IACX,1)
        IPLSTI=MPLSTI(IPLS)
        IPLSV=MPLSV(IPLS)
        IF (LGVAC(K,IPLS)) GOTO 41
C
C  1.) RATE COEFFICIENT
C
        IF (MODCOL(3,2,IRCX).EQ.1) THEN
C  MODEL 1:
C  MAXWELLIAN RATE, IGNORE NEUTRAL VELOCITY
          IF (NSTORDR >= NRAD) THEN
            SIGVCX(IRCX)=TABCX3(IRCX,K,1)
          ELSE
CDR  SIGVCX(IRCX)=FTABCX3 : NOT READY
            KK=NREACX(IRCX)
            PLS=TIINL(IPLSTI,K)+ADDCX(IRCX,IPLS)
            TBCX = RATE_COEFF(KK,PLS,0._DP,.TRUE.,0)*DIIN(IPLS,K)
            SIGVCX(IRCX)=TBCX
          END IF
        ELSEIF (MODCOL(3,2,IRCX).EQ.2) THEN
C  MODEL 2:
C  BEAM - MAXWELLIAN RATE
          IF (TIIN(IPLSTI,K).LT.TVAC) THEN
C     HERE: T_I IS SO LOW, THAT ALL ION ENERGY IS IN DRIFT MOTION.
C           HENCE: USE BEAM-BEAM RATE INSTEAD.
            VRELQ=PVELQ(IPLSV)
            VREL=SQRT(VRELQ)
            ELAB=LOG(VRELQ)+DEFCX(IRCX)
            IREAC=MODCOL(3,1,IRCX)
            CXS=CROSS(ELAB,IREAC,IRCX,'FPATHA CX1')
            SIGVCX(IRCX)=CXS*VREL*DENIO(IPLS)
          ELSE
C  MINIMUM PROJECTILE ENERGY: 0.1 EV
            ELB=MAX(-2.3_DP,LOG(PVELQ(IPLSV))+EEFCX(IRCX))
            IF (NSTORDR >= NRAD) THEN
! DOUBLE POLYNOMIAL FIT REDUCED TO SINGLE POLYNOMIAL FIT BY 
! PRECALCULATING TEMPERATURE DEPENDENCIES
              TBCX3(1:NSTORDT) = TABCX3(IRCX,K,1:NSTORDT)
              FP = 0._DP
              RCMIN = -HUGE(1._DP)
              RCMAX = HUGE(1._DP)
              EXPO = SNGL_POLY(TBCX3,ELB,RCMIN,RCMAX,FP,0,0)
            ELSE
! CALCULATE RATE-COEFFICIENT 
              KK=NREACX(IRCX)
              PLS=TIINL(IPLSTI,K)+ADDCX(IRCX,IPLS)
              EXPO = RATE_COEFF(KK,PLS,ELB,.FALSE.,0) + DIINL(IPLS,K)
     .               + FACREA(KK)
            END IF
            SIGVCX(IRCX)=EXP(EXPO)
          ENDIF
        ELSEIF (MODCOL(3,2,IRCX).EQ.3) THEN
C  MODEL 3:
C  BEAM - BEAM RATE, BUT WITH EFFECTIVE INTERACTION ENERGY
          VEFFQ=ZTI(IPLS)+PVELQ(IPLSV)
          VEFF=SQRT(VEFFQ)
          ELAB=LOG(VEFFQ)+DEFCX(IRCX)
          IREAC=MODCOL(3,1,IRCX)
          CXS=CROSS(ELAB,IREAC,IRCX,'FPATHA CX2')
          SIGVCX(IRCX)=CXS*VEFF*DENIO(IPLS)
        ELSEIF (MODCOL(3,2,IRCX).EQ.4) THEN
C  MODEL 4
C  BEAM - BEAM RATE, IGNORE THERMAL ION ENERGY
          VRELQ=PVELQ(IPLSV)
          VREL=SQRT(VRELQ)
          ELAB=LOG(VRELQ)+DEFCX(IRCX)
          IREAC=MODCOL(3,1,IRCX)
          CXS=CROSS(ELAB,IREAC,IRCX,'FPATHA CX3')
          SIGVCX(IRCX)=CXS*VREL*DENIO(IPLS)
        ELSE
          GOTO 992
        ENDIF
C
        SIGMAX=MAX(SIGMAX,SIGVCX(IRCX))
        SIGCXT=SIGCXT+SIGVCX(IRCX)
C
C  2.) BULK ION ENERGY LOSS RATE:
C
        IF (MODCOL(3,4,IRCX).EQ.1) THEN
C  MODEL 1:
C  MEAN ENERGY FROM DRIFTING MAXWELLIAN
C  (ONLY NEEDED FOR TRACKLENGTH ESTIMATOR)
C  ION SAMPLING FROM MAXWELLIAN
          IF (LEA.AND.(IESTCX(IRCX,3).EQ.0)) THEN  ! for tracklength estimator only
            IF (NSTORDR >= NRAD) THEN
              ESIGCX(IRCX,1)=EPLCX3(IRCX,K,1)
            ELSE
              ESIGCX(IRCX,1)=FEPLCX3(IRCX,K)
            END IF
          END IF  ! this was for tracklength estimator only
          CFLAG(3,1)=2
        ELSEIF (MODCOL(3,4,IRCX).EQ.2) THEN
C  MODEL 2:
C  MEAN ENERGY FROM CROSS SECTION WEIGHTED DRIFTING MAXWELLIAN
C  (ONLY NEEDED FOR TRACKLENGTH ESTIMATOR)
C  ION SAMPLING FROM WEIGHTED DRIFTING MAXWELLIAN (E.G., BY REJECTION)
          IF (LEA.AND.(IESTCX(IRCX,3).EQ.0)) THEN  ! for tracklength estimator only
C  MINIMUM PROJECTILE ENERGY: 0.1 EV
          ELB=MAX(-2.3_DP,LOG(PVELQ(IPLSV))+EEFCX(IRCX))
          IF (NSTORDR >= NRAD) THEN
! DOUBLE POLYNOMIAL FIT REDUCED TO SINGLE POLYNOMIAL FIT BY 
! PRECALCULATING TEMPERATURE DEPENDENCIES
            EPCX3(1:NSTORDT) = EPLCX3(IRCX,K,1:NSTORDT)
            FP = 0._DP
            RCMIN = -HUGE(1._DP)
            RCMAX = HUGE(1._DP)
            EXPO = SNGL_POLY(EPCX3,ELB,RCMIN,RCMAX,FP,0,0)
          ELSE
! CALCULATE ENERGY-WEIGHTED RATE-COEFFICIENT 
            KK=NELRCX(IRCX)
            PLS=TIINL(IPLSTI,K)+ADDCX(IRCX,IPLS)
            EXPO = ENERGY_RATE_COEFF(KK,PLS,ELB,.FALSE.,0) 
     .             + DIINL(IPLS,K) + FACREA(KK)
          END IF
          ESIGCX(IRCX,1)=EXP(EXPO)/SIGVCX(IRCX)
          ESIGCX(IRCX,1)=ESIGCX(IRCX,1)+EDRIFT(IPLS,K)
          ENDIF  ! this was for tracklength estimator only
          CFLAG(3,1)=3
        ELSEIF (MODCOL(3,4,IRCX).EQ.3) THEN
C  MODEL 3:
C  MEAN ENERGY FROM DRIFTING ISOTROPIC ONE SPEED DISTRIBUTION
C  (ONLY NEEDED FOR TRACKLENGTH ESTIMATOR)
C  ION SAMPLING FROM WEIGHTED DRIFTING ISOTROPIC ONE SPEED DISTRIBUTION
          IF (LEA.AND.(IESTCX(IRCX,3).EQ.0)) THEN  ! for tracklength estimator only
            IF (NSTORDR >= NRAD) THEN
              ESIGCX(IRCX,1)=EPLCX3(IRCX,K,1)
            ELSE
              ESIGCX(IRCX,1)=FEPLCX3(IRCX,K)
            END IF
          END IF  ! this was for tracklength estimator only
          CFLAG(3,1)=1
        ELSE
          GOTO 992
        ENDIF
41    CONTINUE
C
C  ELASTIC COLLISIONS OF ATOMS IATM  WITH IONS OF SPEZIES IPLS=1,NPLSI
C  50--->60
C
50    CONTINUE
      IF (LGAEL(IATM,0,0).EQ.0.OR.LGVAC(K,0)) GOTO 60
      DO 51 IAEL=1,NAELI(IATM)
        IREL=LGAEL(IATM,IAEL,0)
        IPLS=LGAEL(IATM,IAEL,1)
        IPLSTI=MPLSTI(IPLS)
        IPLSV=MPLSV(IPLS)
        IBGK=NPBGKP(IPLS,1)
        IF (LGVAC(K,IPLS)) GOTO 51
C
C  1.) RATE COEFFICIENT
C
        IF (MODCOL(5,2,IREL).EQ.1) THEN
C  MODEL 1:
C  MAXWELLIAN RATE, IGNORE NEUTRAL VELOCITY
          IF (NSTORDR >= NRAD) THEN
            SIGVEL(IREL)=TABEL3(IREL,K,1)
          ELSE
            KK=NREAEL(IREL)
            PLS=TIINL(IPLSTI,K)+ADDEL(IREL,IPLS)
            TBEL = RATE_COEFF(KK,PLS,0._DP,.TRUE.,0)*DIIN(IPLS,K)
            SIGVEL(IREL)=TBEL
          END IF
        ELSEIF (MODCOL(5,2,IREL).EQ.2) THEN
C  BEAM - MAXWELL
          IF (TIIN(IPLSTI,K).LT.TVAC) THEN
C  TEMPERATURE TOO LOW, USE: BEAM_ATOM - BEAM_DRIFT RATECOEFF.
            VRELQ=PVELQ(IPLSV)
            VREL=SQRT(VRELQ)
            ELAB=LOG(VRELQ)+DEFEL(IREL)
            IREAC=MODCOL(5,1,IREL)
            CEL=CROSS(ELAB,IREAC,IREL,'FPATHA EL1')
            SIGVEL(IREL)=CEL*VREL*DENIO(IPLS)
          ELSE
C  MINIMUM PROJECTILE ENERGY: 0.1 EV
            ELB=MAX(-2.3_DP,LOG(PVELQ(IPLSV))+EEFEL(IREL))
            IF (NSTORDR >= NRAD) THEN
! DOUBLE POLYNOMIAL FIT REDUCED TO SINGLE POLYNOMIAL FIT BY 
! PRECALCULATING TEMPERATURE DEPENDENCIES
              TBEL3(1:NSTORDT) = TABEL3(IREL,K,1:NSTORDT)
              FP = 0._DP
              RCMIN = -HUGE(1._DP)
              RCMAX = HUGE(1._DP)
              EXPO = SNGL_POLY(TBEL3,ELB,RCMIN,RCMAX,FP,0,0)
            ELSE
! CALCULATE RATE-COEFFICIENT 
              KK=NREAEL(IREL)
              PLS=TIINL(IPLSTI,K)+ADDEL(IREL,IPLS)
              EXPO = RATE_COEFF(KK,PLS,ELB,.FALSE.,0) + DIINL(IPLS,K)
     .               + FACREA(KK)
            END IF
            SIGVEL(IREL)=EXP(EXPO)
          ENDIF
        ELSEIF (MODCOL(5,2,IREL).EQ.3) THEN
C  BEAM - BEAM RATE, BUT WITH EFFECTIVE INTERACTION ENERGY
          VEFFQ=ZTI(IPLS)+PVELQ(IPLSV)
          VEFF=SQRT(VEFFQ)
          ELAB=LOG(VEFFQ)+DEFEL(IREL)
          IREAC=MODCOL(5,1,IREL)
C  FIND SIGMA FROM OAK RIDGE "ELASTIC" DATA TABLES
          IF (LHABER) THEN
            RMN=RMASSA(IATM)
            RMI=RMASSP(IPLS)
            RMSI=1./(RMN+RMI)
            RLMS=RMN*RMI*RMSI
            ER=RLMS*VEFFQ*CVELI2
cdr  flag -1.0_DP: only sigma(ER), but no scattering angle evaluated
            CALL SCATANG (ER,-1.0_DP,ELTHDUM,CTCHDUM,SIG)
            CEL= SIG*AU_TO_CM2
          ELSE
C  FIND SIGMA FROM AMJUEL DATA TABLES (BACHMANN ET AL.)
            CEL=CROSS(ELAB,IREAC,IREL,'FPATHA EL2')
          END IF
          SIGVEL(IREL)=CEL*VEFF*DENIO(IPLS)
        ELSEIF (MODCOL(5,2,IREL).EQ.4) THEN
C  MODEL 4
C  BEAM - BEAM RATE, IGNORE THERMAL ION ENERGY
          VRELQ=PVELQ(IPLSV)
          VREL=SQRT(VRELQ)
          ELAB=LOG(VRELQ)+DEFEL(IREL)
          IREAC=MODCOL(5,1,IREL)
          CEL=CROSS(ELAB,IREAC,IREL,'FPATHA EL3')
          SIGVEL(IREL)=CEL*VREL*DENIO(IPLS)
        ELSE
          GOTO 995
        ENDIF

        SIGMAX=MAX(SIGMAX,SIGVEL(IREL))
        SIGELT=SIGELT+SIGVEL(IREL)

        IF (IBGK.NE.0) SIGBGK=SIGBGK+SIGVEL(IREL)
C
C  2.) BULK ION ENERGY LOSS RATE:
C
        IF (MODCOL(5,4,IREL).EQ.1) THEN
C  MODEL 1:
C  MEAN ENERGY FROM DRIFTING MAXWELLIAN
C  (ONLY NEEDED FOR TRACKLENGTH ESTIMATOR)
C  ION SAMPLING FROM MAXWELLIAN
          IF (NSTORDR >= NRAD) THEN
            ESIGEL(IREL,1)=EPLEL3(IREL,K,1)
          ELSE
            ESIGEL(IREL,1)=FEPLEL3(IREL,K)
          END IF
          CFLAG(5,1)=2
        ELSEIF (MODCOL(5,4,IREL).EQ.2) THEN
C  MODEL 2:
C  MEAN ENERGY FROM CROSS SECTION WEIGHTED DRIFTING MAXWELLIAN
C  (ONLY NEEDED FOR TRACKLENGTH ESTIMATOR)
C  ION SAMPLING FROM WEIGHTED DRIFTING MAXWELLIAN (E.G., BY REJECTION)
          IF (IESTEL(IREL,3).EQ.0) THEN  ! for tracklength estimator only
C  MINIMUM PROJECTILE ENERGY: 0.1 EV
          ELB=MAX(-2.3_DP,LOG(PVELQ(IPLSV))+EEFEL(IREL))
          IF (NSTORDR >= NRAD) THEN
! DOUBLE POLYNOMIAL FIT REDUCED TO SINGLE POLYNOMIAL FIT BY 
! PRECALCULATING TEMPERATURE DEPENDENCIES
            EPEL3(1:NSTORDT) = EPLEL3(IREL,K,1:NSTORDT)
            FP = 0._DP
            RCMIN = -HUGE(1._DP)
            RCMAX = HUGE(1._DP)
            EXPO = SNGL_POLY(EPEL3,ELB,RCMIN,RCMAX,FP,0,0)
          ELSE
! CALCULATE ENERGY-WEIGHTED RATE-COEFFICIENT 
            KK=NELREL(IREL)
            PLS=TIINL(IPLSTI,K)+ADDEL(IREL,IPLS)
            EXPO = ENERGY_RATE_COEFF(KK,PLS,ELB,.FALSE.,0) 
     .             + DIINL(IPLS,K) + FACREA(KK)
          END IF
          ESIGEL(IREL,1)=EXP(EXPO)/SIGVEL(IREL)
          ESIGEL(IREL,1)=ESIGEL(IREL,1)+EDRIFT(IPLS,K)
          ENDIF  ! this was for tracklength estimator only
          CFLAG(5,1)=3
        ELSEIF (MODCOL(5,4,IREL).EQ.3) THEN
C  MODEL 3:
C  MEAN ENERGY FROM DRIFTING ISOTROPIC ONE SPEED DISTRIBUTION
C  (ONLY NEEDED FOR TRACKLENGTH ESTIMATOR)
C  ION SAMPLING FROM WEIGHTED DRIFTING ISOTROPIC ONE SPEED DISTRIBUTION
          IF (NSTORDR >= NRAD) THEN
            ESIGEL(IREL,1)=EPLEL3(IREL,K,1)
          ELSE
            ESIGEL(IREL,1)=FEPLEL3(IREL,K)
          END IF
          CFLAG(5,1)=1
        ELSE
          GOTO 995
        ENDIF
51    CONTINUE
C
60    CONTINUE
C
C     TOTAL
C
100   CONTINUE
C
      IF (SIGEIT.GT.0._DP) THEN
        DO IREI=1,NRDS
          IF (SIGVEI(IREI) .LE. SIGMAX*1.D-10) THEN
            SIGEIT=SIGEIT-SIGVEI(IREI)
            SIGVEI(IREI) = 0.D0
          END IF
        END DO
      END IF

      IF (SIGPIT.GT.0._DP) THEN
        DO IRPI=1,NRPI
          IF (SIGVPI(IRPI) .LE. SIGMAX*1.D-10) THEN
            SIGPIT=SIGPIT-SIGVPI(IRPI)
            SIGVPI(IRPI) = 0.D0
          END IF
        END DO
      END IF

      IF (SIGCXT.GT.0._DP) THEN
        DO IRCX=1,NRCX
          IF (SIGVCX(IRCX) .LE. SIGMAX*1.D-10) THEN
            SIGCXT=SIGCXT-SIGVCX(IRCX)
            SIGVCX(IRCX) = 0.D0
          END IF
        END DO
      END IF

      IF (SIGELT.GT.0._DP) THEN
        DO IREL=1,NREL
          IF (SIGVEL(IREL) .LE. SIGMAX*1.D-10) THEN
            SIGELT=SIGELT-SIGVEL(IREL)
            SIGVEL(IREL) = 0.D0
          END IF
        END DO
      END IF

      IF (SIGOTT.GT.0._DP) THEN
        DO IROT=1,NROT
          IF (SIGVOT(IROT) .LE. SIGMAX*1.D-10) THEN
            SIGOTT=SIGOTT-SIGVOT(IROT)
            SIGVOT(IROT) = 0.D0
          END IF
        END DO
      END IF

C
      SIGTOT=SIGEIT+SIGPIT+SIGCXT+SIGELT+SIGOTT
      IF (SIGTOT.GT.1.D-20) THEN
        FPATHA=VEL/SIGTOT
        ZMFPI=1./FPATHA
      ENDIF
C
      RETURN
990   CONTINUE
      WRITE (iunout,*) 'IATM,IREI,MODCOL(1,J,IREI) '
      WRITE (iunout,*) IATM,IREI,(MODCOL(1,J,IREI),J=1,4)
      CALL EXIT_OWN(1)
991   CONTINUE
      WRITE (iunout,*) 'ERROR IN FPATHA: INCONSISTENT ION IMP. DATA'
      WRITE (iunout,*) 'IATM,IRPI,MODCOL(4,J,IRPI) '
      WRITE (iunout,*) IATM,IRPI,(MODCOL(4,J,IRPI),J=1,4)
      CALL EXIT_OWN(1)
992   CONTINUE
      WRITE (iunout,*) 
     .  'ERROR IN FPATHA: INCONSISTENT CHARGE EXCHANGE DATA'
      WRITE (iunout,*) 'IATM,IRCX,MODCOL(3,J=1,4,IRCX) '
      WRITE (iunout,*) IATM,IRCX,(MODCOL(3,J,IRCX),J=1,4)
      CALL EXIT_OWN(1)
995   CONTINUE
      WRITE (iunout,*) 
     .  'ERROR IN FPATHA: INCONSISTENT ELASTIC COLL. DATA'
      WRITE (iunout,*) 'IATM,IREL,MODCOL(5,J,IREL) '
      WRITE (iunout,*) IATM,IREL,(MODCOL(5,J,IREL),J=1,4)
      CALL EXIT_OWN(1)
      END
