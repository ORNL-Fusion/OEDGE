#!/bin/ksh
echo runlim V 3 : LIM Input = $1 : OUT Input = $2 
if [ $# -lt 2 ]
then 
   echo "usage: $0 <input driver> <output driver>"
   exit 1
fi
#
# Set Run-time environment variables
#
# These should be all that require changing for most installations
#
#-------------------------------------
# 
export CASENAME=$1
export XLFRTEOPTS=namelist=old
export ADASCENT=$HOME/adas
#
#--------------------------------------------------------------
# May need to add to LD_LIBRARY_PATH to find linked libraries
#
#
#export LD_LIBRARY_PATH= 
DIVINSTALLDIR=$HOME
PROGDIR=divimp
export LD_LIBRARY_PATH=$DIVINSTALLDIR/$PROGDIR/local/lib
echo "LIBRARY PATH:"  $LD_LIBRARY_PATH
#
VER=pgi
RUNROOT=$HOME/divimp/lim3
EXEROOT=$HOME/divimp/lim3
DATAROOT=$HOME/divimp/lim3
#
#  Loctions of the various LIM files 
#
#  LIMRUNDIR - Directory where LIM will run - must have read/write access
#  LIMDATDIR - Directory containing the input data files
#  LIMRESDIR - Directory where the results from the case will be stored
#
#  LIMMAINDIR- Main LIM directory containing the source code tree 
#  LIMEXEDIR - Directory containing the LIM executable
#  LIMOUTDIR - Directory containing the OUT excutable
#  PINEXEDIR - Directory containing the PIN executable
#  EIREXEDIR - Directory containing the EIRENE executable 
#
#  EQUDIR    - Directory containg the equilibrium, background plasma and pump files
#
#  LIMEXE    - LIM executable
#  OUTEXE    - OUT executable
#
export LIMRUNDIR=$RUNROOT/cases
export LIMDATDIR=$RUNROOT/data
export LIMRESDIR=$RUNROOT/results
#
export LIMMAINDIR=$EXEROOT
export LIMEXEDIR=$EXEROOT/lim
export OUTEXEDIR=$EXEROOT/out
#
export EQUDIR=$DATAROOT/shots
#
export LIMEXE=$LIMEXEDIR/lim3O$VER
export OUTEXE=$OUTEXEDIR/out3O$VER
#
#------------------------------------- 
#
#
# Change to execution directory
#
cd $LIMRUNDIR
mkdir $CASENAME
cd $CASENAME
#
#  lim_plasma.dat is a background plasma solution - if required.   
#  - not yet supported in LIM
#
if [[ -f  $LIMRESDIR/$6.bgp ]] then 
  echo "Linking ..." $LIMRESDIR/$6.bgp
  ln -s $LIMRESDIR/$6.bgp $LIMRUNDIR/$CASENAME/lim_plasma.dat
fi  
#
#  lim_aux_data.dat contains various data from a previous LIM run
#  - not yet supported in LIM
#
if [[ -f  $LIMRESDIR/$6.auxdata ]] then 
  echo "Linking ..." $LIMRESDIR/$6.auxdata
  ln -s $LIMRESDIR/$6.auxdata $LIMRUNDIR/$CASENAME/lim_aux_data.dat
fi  
#
#
#  Unit 13 contains experimental data for the case - if available. 
#  - not yet supported in LIM
#
if [[ -n $4 ]] then     
  if [[ -f $EQUDIR/$4.experiment ]] then 
    ln -s $EQUDIR/$4.experiment $LIMRUNDIR/$CASENAME/fort.13
  else
    if [[ -f $EQUDIR/$3.$4.experiment ]] then 
      ln -s $EQUDIR/$3.$4.experiment $LIMRUNDIR/$CASENAME/fort.13
    else
      if [[ -f $EQUDIR/$3.experiment ]] then 
         ln -s $EQUDIR/$3.experiment $LIMRUNDIR/$CASENAME/fort.13
      fi 
    fi
  fi
else
  if [[ -f $EQUDIR/$3.experiment ]] then 
    ln -s $EQUDIR/$3.experiment $LIMRUNDIR/$CASENAME/fort.13
  fi 
fi
#
# If an external flux file is available for the shot it will 
# be linked to the "ext_flux.dat" file.
#  - not yet supported in LIM
#
#
if [[ -n $4 ]] then     
  if [[ -f $EQUDIR/$4.extflx ]] then 
    ln -s $EQUDIR/$4.extflx $LIMRUNDIR/$CASENAME/ext_flux.dat
  else
    if [[ -f $EQUDIR/$3.$4.extflx ]] then 
      ln -s $EQUDIR/$3.$4.extflx $LIMRUNDIR/$CASENAME/ext_flux.dat
    else
      if [[ -f $EQUDIR/$3.extflx ]] then 
         ln -s $EQUDIR/$3.extflx $LIMRUNDIR/$CASENAME/ext_flux.dat
      fi 
    fi
  fi 
else
  if [[ -f $EQUDIR/$3.extflx ]] then 
    ln -s $EQUDIR/$3.extflx $LIMRUNDIR/$CASENAME/ext_flux.dat
  fi 
fi
#
#------------------------------
#
# Execute LIM
#
#  Unit  7 is the text output from LIM
#  Unit  9 is an echo of the LIM input
#
#  Link LIM input data file - so name can be extracted. 
#
if [[ -f  $LIMDATDIR/$CASENAME.dli ]] then
  ln -s $LIMDATDIR/$CASENAME.dli fort.5
else
  echo "LIM Input file " $LIMDATDIR/$CASENAME.dli " does not exist."
  echo "Abnormal Script Termination - Script Exiting"
  cd ..
  rm -rf $CASENAME
  exit 1
fi
#
#
#  Run LIM - Use optimized version.
#
echo Starting LIM ...  
#
$LIMEXE < fort.5 > limout1
#
echo LIM Finished.
#
#
#--------------------------------------
#
#
#  Copy or move results.
#  .lim Debugging file
#
if [[ -f limout1 ]] then 
   mv limout1 $LIMRESDIR/$CASENAME.lim
fi
#
#  .dat case output file
#
if [[ -f fort.7 ]] then 
   mv fort.7  $LIMRESDIR/$CASENAME.dat
fi
#
#  .html case output file
#  - not yet supported in LIM
#
if [[ -f fort.22 ]] then 
   mv fort.22  $LIMRESDIR/$CASENAME.html
fi
#
#  .inp input echo file + other information
#
if [[ -f fort.9 ]] then 
   mv fort.9 $LIMRESDIR/$CASENAME.inp
fi
#
# TRAN file for JET postprocessors
# - not yet supported in LIM
#
if [[ -f fort.41 ]] then 
   mv fort.41  $LIMRESDIR/$CASENAME.tran
fi
#
# SL files
#
if [[ -f fort.59 ]] then 
   mv fort.59  $LIMRESDIR/$CASENAME.rpr
fi
if [[ -f fort.63 ]] then 
   mv fort.63  $LIMRESDIR/$CASENAME.pro
fi
if [[ -f fort.64 ]] then 
   mv fort.64  $LIMRESDIR/$CASENAME.slv
fi
#
# LIM debug file
#
if [[ -f fort.77 ]] then 
   mv fort.77  $LIMRESDIR/$CASENAME.forces
fi
if [[ -f fort.78 ]] then 
   mv fort.78  $LIMRESDIR/$CASENAME.dbg
fi
if [[ -f fort.79 ]] then 
   mv fort.79  $LIMRESDIR/$CASENAME.ddl
fi
#
#  LIM format background plasma file - if writing one
#  has been requested. 
#  - not yet supported in LIM
#
if [[ -f lim_plasma.out ]] then 
  mv lim_plasma.out $LIMRESDIR/$CASENAME.bgp
fi
#
#  Additional LIM data file - output in a standardized tagged format. 
#  - not yet supported in LIM
#
if [[ -f lim_aux_data.out ]] then 
  mv lim_aux_data.out  $LIMRESDIR/$CASENAME.auxdata
fi
#
#  Impurity velocity diagnostic data
#
if [[ -f velocity_diagnostic_data.out ]] then 
  mv velocity_diagnostic_data.out  $LIMRESDIR/$CASENAME.diagvel
fi
#
#  Background Plasma - moved to LIM - change name just in case
#
if [[ -f bgplasma.out ]] then 
  mv bgplasma.out  $LIMRESDIR/$CASENAME.bgpo
fi
#
# Core file in case LIM crashed
#
if [[ -f core ]] then 
  mv core  $LIMRESDIR/$CASENAME.core
fi
#
#
# Convert the LIM output data file to postscript. 
#
#a2ps $LIMRESDIR/$CASENAME.dat --output=$LIMRESDIR/$CASENAME.ps 
#
#-----------------------------------
#
#  Execute OUT
#
echo Starting OUTput processing ...  
#
$OUTEXE < $LIMDATDIR/$2.dlo > outout1 
#
echo OUTput processing complete.
#
#----------------------------------------
#
#  Copy or move results of OUT run.
#
#  .out - OUT debugging file 
#
if [[ -f outout1 ]] then 
   mv outout1 $LIMRESDIR/$CASENAME.out
fi
#  .raw complete results file
#
if [[ -f fort.8 ]] then 
   mv fort.8 $LIMRESDIR/$CASENAME.raw
fi  
#
#  Impurity density, velocity, flux data
#
if [[ -f density_velocity_flux.out ]] then 
  mv density_velocity_flux.out  $LIMRESDIR/$CASENAME.nvf
fi
#
#
# Rename the netcdf output if any
#
if [[ -f lim_netcdf_out.nc ]] then
    # save the compressed version of the nc file
    # according to the documentation this file can be accessed as 
    # easily as a regular nc file but takes much less space
    nccopy -d5 lim_netcdf_out.nc lim_netcdf_out_compress.nc
    mvc lim_netcdf_out_compress.nc $CASENAME.nc
    mv $CASENAME.nc $LIMRESDIR
    # remove uncompressed version
    rm lim_netcdf_out.nc    
fi
   
#
#
#  .dag OUT output file
#
if [[ -f fort.7 ]] then 
   mv fort.7  $LIMRESDIR/$CASENAME.dag
fi
#
#  .psg - Postscript plots 
#
if [[ -f POSTSCPT.LIS ]] then 
  ps2pdf POSTSCPT.LIS $LIMRESDIR/$CASENAME.pdf
  mv POSTSCPT.LIS $LIMRESDIR/$CASENAME.psg 
fi
#
#  .ing - Echo of input to graphing routines
#
if [[ -f fort.9 ]] then 
   mv fort.9 $LIMRESDIR/$CASENAME.ing
fi
#
#  Special printed listing of some plot information.
#  - not yet supported in LIM
#
if [[ -f fort.26 ]] then
   mv fort.26 $LIMRESDIR/$CASENAME.grp
fi 
#
#  Printed listing of 2D plot data
#
if [[ -f fort.49 ]] then
   mv fort.49 $LIMRESDIR/$CASENAME.plt
fi 
#
#
# Clean-up
#
rm -f *.dat
rm fort.*
#
#
cd $LIMRUNDIR
rmdir $CASENAME
cd $LIMRESDIR
#
# Compress the larger output files - check for file existence
#                                    before compressing.
#
if [[ -f $CASENAME.raw ]] then
   gzip -f -v $CASENAME.raw
fi
#
if [[ -f $CASENAME.lim ]] then
   gzip -f -v $CASENAME.lim
fi
#
#
if [[ -f $CASENAME.out ]] then
   gzip -f -v $CASENAME.out
fi
#
#
#  Print
#
# lp $CASENAME.ps
# lp $CASENAME.sol.ps
# lp $CASENAME.plt.ps
# lp $CASENAME.psg
# lp $CASENAME.sol.ps
#
#  Return to base directory.
#
cd $LIMRUNDIR





