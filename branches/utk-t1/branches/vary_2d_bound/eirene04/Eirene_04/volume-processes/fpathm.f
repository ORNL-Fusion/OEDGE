C
C
      FUNCTION FPATHM (K,CFLAG)
C
C   CALCULATE MEAN FREE PATH AND REACTION RATES FOR NEUTRAL
C   "BEAM MOLECULES" OF VELOCITY VEL IN DRIFTING MAXWELLIAN PLASMA-BACKGROUND
C   IN CELL K
C   CFLAG:  AS IN FUNCTION FPATHA
C
      USE PRECISION
      USE PARMMOD
      USE COMUSR
      USE CCONA
      USE CLOGAU
      USE CINIT
      USE CZT1
      USE COMPRT
      USE COMXS

      IMPLICIT NONE

      REAL(DP), INTENT(OUT) :: CFLAG(7,3)
      INTEGER, INTENT(IN) :: K

      REAL(DP) :: DENIO(NPLS), ZTI(NPLS)
      REAL(DP) :: PVELQ(NPLSV)
      REAL(DP) :: TBPI3(9), TBCX3(9), TBEL3(9)
      REAL(DP) :: EPPI3(9), EPCX3(9), EPEL3(9)

      REAL(DP) :: VREL, VRELQ, TBEL, FEPLCX3, CROSS, EXPO, ELB, CEL,
     .          SIGMAX, FEPLEL3, VX, VY, VZ, EHEAVY, FTABEI1, FPATHM,
     .          PVELQ0, DENEL, FEELEI1, VEFF, VEFFQ, CXS, ELAB,
     .          TBCX, FEHVDS1, PLS
      INTEGER :: IBGK, IREL, IMEL, J, JAN, IF8, IML, IPL, IMDS, IRDS,
     .           II, IREAC, IMCX, IMPI, KK, IRCX, I1, I2, IPLSTI, IPLSV
C
C
C  SET DEFAULTS: NO REACTIONS
C
      XSTOR=0.D0
      XSTORV=0.D0
c     DO I2=1,MSTOR2
c       DO I1=1,MSTOR1
c         XSTOR(I1,I2) = 0._DP
c       END DO
c     END DO
c     DO I1=1,NSTORV
c       XSTORV(I1) = 0._DP
c     END DO
      FPATHM=1.D10
C
      IF (LGVAC(K,0)) RETURN
C
C   LOCAL PLASMA PARAMETERS
C
      DENEL=DEIN(K)
      DO 2 IPLS=1,NPLSI
        ZTI(IPLS)=ZT1(IPLS,K)
2       DENIO(IPLS)=DIIN(IPLS,K)
      PVELQ0=VEL*VEL
      DO 3 IPLS=1,NPLSV
        IF (NLDRFT) THEN
          IF (INDPRO(4) == 8) THEN
            CALL VECUSR (2,VX,VY,VZ,IPLS)
          ELSE
            VX=VXIN(IPLS,K)
            VY=VYIN(IPLS,K)
            VZ=VZIN(IPLS,K)
          END IF
          PVELQ(IPLS)=(VELX*VEL-VX)**2+
     .                (VELY*VEL-VY)**2+
     .                (VELZ*VEL-VZ)**2
        ELSE
          PVELQ(IPLS)=PVELQ0
        ENDIF
3     CONTINUE
C
C
C  ELECTRON IMPACT RATE COEFFICIENT
C
      IF (LGMEI(IMOL,0).EQ.0.OR.LGVAC(K,NPLS+1)) GOTO 25
      DO 10 IMDS=1,NMDSI(IMOL)
        IRDS=LGMEI(IMOL,IMDS)
        IF (MODCOL(1,2,NSPA+IMOL,1).EQ.1) THEN
          IF (NSTORDR >= NRAD) THEN
            SIGVEI(IRDS)=TABDS1(IRDS,K)
          ELSE
            SIGVEI(IRDS)=FTABEI1(IRDS,K)
          END IF
        ELSE
          GOTO 990
        ENDIF
C
        IF (NSTORDR >= NRAD) THEN
          ESIGEI(IRDS,5)=EELDS1(IRDS,K)
          EHEAVY=EHVDS1(IRDS,K)
        ELSE
          ESIGEI(IRDS,5)=FEELEI1(IRDS,K)
          EHEAVY=FEHVDS1(IRDS,K)
        ENDIF
C
        ESIGEI(IRDS,1)=EATDS(IRDS,0,1)*E0+EATDS(IRDS,0,2)*EHEAVY
        ESIGEI(IRDS,2)=EMLDS(IRDS,0,1)*E0+EMLDS(IRDS,0,2)*EHEAVY
        ESIGEI(IRDS,3)=EIODS(IRDS,0,1)*E0+EIODS(IRDS,0,2)*EHEAVY
        ESIGEI(IRDS,4)=EPLDS(IRDS,  1)*E0+EPLDS(IRDS,  2)*EHEAVY
C
        SIGEIT=SIGEIT+SIGVEI(IRDS)
10    CONTINUE
C
C
C  IONIZATION OF MOLECULE BY ION IMPACT, ION SPEZIES IPLS=1,NPLSI
C
25    CONTINUE
      DO 30 IMPI=1,NMPII(IMOL)
        SIGVPI(IMPI)=0.
        SIGPIT=SIGPIT+SIGVPI(IMPI)
30    CONTINUE
C
C  CHARGE EXCHANGE RATE COEFFICIENT FOR MOLECULE IMOL
C  WITH BULK IONS OF SPEZIES IPLS=1,NPLSI
C  40--->50
C
40    CONTINUE
      IF (LGMCX(IMOL,0,0).EQ.0.OR.LGVAC(K,0)) GOTO 50
      DO 41 IMCX=1,NMCXI(IMOL)
        IRCX=LGMCX(IMOL,IMCX,0)
        IPLS=LGMCX(IMOL,IMCX,1)
        IPLSTI=MPLSTI(IPLS)
        IPLSV=MPLSV(IPLS)
        IF (LGVAC(K,IPLS)) GOTO 41
C
C  1.) RATE COEFFICIENT
C
        IF (MODCOL(3,2,NSPA+IMOL,IPLS).EQ.1) THEN
C  MODEL 1:
C  MAXWELLIAN RATE, IGNORE NEUTRAL VELOCITY
          IF (NSTORDR >= NRAD) THEN
            SIGVCX(IRCX)=TABCX3(IRCX,K,1)
          ELSE
CDR  SIGVCX(IRCX)=FTABCX3 : NOT READY
            KK=NREACX(IRCX)
            PLS=TIINL(IPLSTI,K)+ADDCX(IRCX,IPLS)
            TBCX = CREAC(9,1,KK)
            DO II=8,1,-1
              TBCX = TBCX*PLS + CREAC(II,1,KK)
            END DO
            TBCX=EXP(MAX(-100._DP,TBCX))*DIIN(IPLS,K)
            SIGVCX(IRCX)=TBCX
          END IF
        ELSEIF (MODCOL(3,2,NSPA+IMOL,IPLS).EQ.2) THEN
C  MODEL 2:
C  BEAM - MAXWELLIAN RATE
          IF (TIIN(IPLSTI,K).LT.TVAC) THEN
C     HERE: T_I IS SO LOW, THAT ALL ION ENERGY IS IN DRIFT MOTION.
C           HENCE: USE BEAM-BEAM RATE INSTEAD.
            VRELQ=PVELQ(IPLSV)
            VREL=SQRT(VRELQ)
            ELAB=LOG(VRELQ)+DEFCX(IRCX)
            IREAC=MODCOL(3,1,NSPA+IMOL,IPLS)
            CXS=CROSS(ELAB,IREAC,IRCX,'FPATHM CX')
            SIGVCX(IRCX)=CXS*VREL*DENIO(IPLS)
          ELSE
            IF (NSTORDR >= NRAD) THEN
              TBCX3(1:NSTORDT) = TABCX3(IRCX,K,1:NSTORDT)
              JAN=NSTORDT
            ELSE
              JAN=0
            END IF
            IF (JAN < 9) THEN
              KK=NREACX(IRCX)
              PLS=TIINL(IPLSTI,K)+ADDCX(IRCX,IPLS)
              DO J=JAN+1,9
                TBCX3(J)=CREAC(9,J,KK)
                DO II=8,1,-1
                  TBCX3(J)=TBCX3(J)*PLS+CREAC(II,J,KK)
                END DO
              END DO
            END IF
            IF (JAN < 1) TBCX3(1)=TBCX3(1)+DIINL(IPLS,K)
C  MINIMUM PROJECTILE ENERGY: 0.1 EV
            ELB=MAX(-2.3_DP,LOG(PVELQ(IPLSV))+EEFCX(IRCX))
            EXPO=TBCX3(9)
            DO 43 II=1,8
              IF8=9-II
              EXPO=EXPO*ELB+TBCX3(IF8)
43          CONTINUE
            SIGVCX(IRCX)=EXP(EXPO)
          ENDIF
        ELSEIF (MODCOL(3,2,NSPA+IMOL,IPLS).EQ.3) THEN
C  MODEL 3:
C  BEAM - BEAM RATE, BUT WITH EFFECTIVE INTERACTION ENERGY
          VEFFQ=ZTI(IPLS)+PVELQ(IPLSV)
          VEFF=SQRT(VEFFQ)
          ELAB=LOG(VEFFQ)+DEFCX(IRCX)
          IREAC=MODCOL(3,1,NSPA+IMOL,IPLS)
          CXS=CROSS(ELAB,IREAC,IRCX,'FPATHM CX')
          SIGVCX(IRCX)=CXS*VEFF*DENIO(IPLS)
        ELSE
          GOTO 992
        ENDIF
C
        SIGCXT=SIGCXT+SIGVCX(IRCX)
C
C  2.) BULK ION ENERGY LOSS RATE:
C
        IF (MODCOL(3,4,NSPA+IMOL,IPLS).EQ.1) THEN
C  MODEL 1:
C  MEAN ENERGY FROM DRIFTING MAXWELLIAN
C  (ONLY NEEDED FOR TRACKLENGTH ESTIMATOR)
C  ION SAMPLING FROM MAXWELLIAN
          IF (NSTORDR >= NRAD) THEN
            ESIGCX(IRCX,1)=EPLCX3(IRCX,K,1)
          ELSE
            ESIGCX(IRCX,1)=FEPLCX3(IRCX,K)
          END IF
          CFLAG(3,1)=2
        ELSEIF (MODCOL(3,4,NSPA+IMOL,IPLS).EQ.2) THEN
C  MODEL 2:
C  MEAN ENERGY FROM CROSS SECTION WEIGHTED DRIFTING MAXWELLIAN
C  (ONLY NEEDED FOR TRACKLENGTH ESTIMATOR)
C  ION SAMPLING FROM WEIGHTED DRIFTING MAXWELLIAN (E.G., BY REJECTION)
          IF (IESTCX(IRCX,3).EQ.0) THEN  ! for tracklength estimator only
          IF (NSTORDR >= NRAD) THEN
            EPCX3(1:NSTORDT) = EPLCX3(IRCX,K,1:NSTORDT)
            JAN=NSTORDT
          ELSE
            JAN=0
          END IF
          IF (JAN < 9) THEN
            KK=NELRCX(IRCX)
            PLS=TIINL(IPLSTI,K)+ADDCX(IRCX,IPLS)
            DO J=JAN+1,9
              EPCX3(J)=CREAC(9,J,KK)
              DO II=8,1,-1
                EPCX3(J)=EPCX3(J)*PLS+CREAC(II,J,KK)
              END DO
            END DO
          END IF
          IF (JAN < 1) EPCX3(1)=EPCX3(1)+DIINL(IPLS,K)
C  MINIMUM PROJECTILE ENERGY: 0.1 EV
          ELB=MAX(-2.3_DP,LOG(PVELQ(IPLSV))+EEFCX(IRCX))
          EXPO=EPCX3(9)
          DO 45 II=1,8
            IF8=9-II
            EXPO=EXPO*ELB+EPCX3(IF8)
45        CONTINUE
          ESIGCX(IRCX,1)=EXP(EXPO)/SIGVCX(IRCX)
          ESIGCX(IRCX,1)=ESIGCX(IRCX,1)+EDRIFT(IPLS,K)
          ENDIF  ! this was for tracklength estimator only
          CFLAG(3,1)=3
        ELSEIF (MODCOL(3,4,NSPA+IMOL,IPLS).EQ.3) THEN
C  MODEL 3:
C  MEAN ENERGY FROM DRIFTING ISOTROPIC ONE SPEED DISTRIBUTION
C  (ONLY NEEDED FOR TRACKLENGTH ESTIMATOR)
C  ION SAMPLING FROM WEIGHTED DRIFTING ISOTROPIC ONE SPEED DISTRIBUTION
          IF (NSTORDR >= NRAD) THEN
            ESIGCX(IRCX,1)=EPLCX3(IRCX,K,1)
          ELSE
            ESIGCX(IRCX,1)=FEPLCX3(IRCX,K)
          END IF
          CFLAG(3,1)=1
        ELSE
          GOTO 992
        ENDIF
41    CONTINUE
C
C  ELASTIC COLLISIONS OF MOLECULE IMOL WITH IONS OF SPEZIES IPLS=1,NPLSI
C  50--->60
C
50    CONTINUE
      IF (LGMEL(IMOL,0,0).EQ.0.OR.LGVAC(K,0)) GOTO 60
      DO 51 IMEL=1,NMELI(IMOL)
        IREL=LGMEL(IMOL,IMEL,0)
        IPLS=LGMEL(IMOL,IMEL,1)
        IPLSTI=MPLSTI(IPLS)
        IPLSV=MPLSV(IPLS)
        IBGK=NPBGKP(IPLS,1)
        IF (LGVAC(K,IPLS)) GOTO 51
C
C  1.) RATE COEFFICIENT
C
        IF (MODCOL(5,2,NSPA+IMOL,IPLS).EQ.1) THEN
C  MAXWELL
          IF (NSTORDR >= NRAD) THEN
            SIGVEL(IREL)=TABEL3(IREL,K,1)
          ELSE
            KK=NREAEL(IREL)
            PLS=TIINL(IPLSTI,K)+ADDEL(IREL,IPLS)
            TBEL = CREAC(9,1,KK)
            DO II=8,1,-1
              TBEL = TBEL*PLS + CREAC(II,1,KK)
            END DO
            TBEL=EXP(MAX(-100._DP,TBEL))*DIIN(IPLS,K)
            SIGVEL(IREL)=TBEL
          END IF
        ELSEIF (MODCOL(5,2,NSPA+IMOL,IPLS).EQ.2) THEN
C  BEAM - MAXWELL
          IF (TIIN(IPLSTI,K).LT.TVAC) THEN
            VRELQ=PVELQ(IPLSV)
            VREL=SQRT(VRELQ)
            ELAB=LOG(VRELQ)+DEFEL(IREL)
            IREAC=MODCOL(5,1,NSPA+IMOL,IPLS)
            CEL=CROSS(ELAB,IREAC,IREL,'FPATHM EL')
            SIGVEL(IREL)=CEL*VREL*DENIO(IPLS)
          ELSE
            IF (NSTORDR >= NRAD) THEN
              TBEL3(1:NSTORDT) = TABEL3(IREL,K,1:NSTORDT)
              JAN=NSTORDT
            ELSE
              JAN=0
            END IF
            IF (JAN < 9) THEN
              KK=NREAEL(IREL)
              PLS=TIINL(IPLSTI,K)+ADDEL(IREL,IPLS)
              DO J=JAN+1,9
                TBEL3(J)=CREAC(9,J,KK)
                DO II=8,1,-1
                  TBEL3(J)=TBEL3(J)*PLS+CREAC(II,J,KK)
                END DO
              END DO
            END IF
            IF (JAN < 1) TBEL3(1)=TBEL3(1)+DIINL(IPLS,K)
C  MINIMUM PROJECTILE ENERGY: 0.1 EV
            ELB=MAX(-2.3_DP,LOG(PVELQ(IPLSV))+EEFEL(IREL))
            EXPO=TBEL3(9)
            DO 53 II=1,8
              IF8=9-II
              EXPO=EXPO*ELB+TBEL3(IF8)
53          CONTINUE
            SIGVEL(IREL)=EXP(EXPO)
          ENDIF
        ELSEIF (MODCOL(5,2,NSPA+IMOL,IPLS).EQ.3) THEN
C  BEAM - BEAM
          VRELQ=ZTI(IPLS)+PVELQ(IPLSV)
          VREL=SQRT(VRELQ)
          ELAB=LOG(VRELQ)+DEFEL(IREL)
          IREAC=MODCOL(5,1,NSPA+IMOL,IPLS)
          CEL=CROSS(ELAB,IREAC,IREL,'FPATHM EL')
          SIGVEL(IREL)=CEL*VREL*DENIO(IPLS)
        ELSE
          GOTO 995
        ENDIF
        SIGELT=SIGELT+SIGVEL(IREL)
        IF (IBGK.NE.0) SIGBGK=SIGBGK+SIGVEL(IREL)
C
C  2.) BULK ION ENERGY LOSS RATE:
C
        IF (MODCOL(5,4,NSPA+IMOL,IPLS).EQ.1) THEN
C  MODEL 1:
C  MEAN ENERGY FROM DRIFTING MAXWELLIAN
C  (ONLY NEEDED FOR TRACKLENGTH ESTIMATOR)
C  ION SAMPLING FROM MAXWELLIAN
          IF (NSTORDR >= NRAD) THEN
            ESIGEL(IREL,1)=EPLEL3(IREL,K,1)
          ELSE
            ESIGEL(IREL,1)=FEPLEL3(IREL,K)
          END IF
          CFLAG(5,1)=2
        ELSEIF (MODCOL(5,4,NSPA+IMOL,IPLS).EQ.2) THEN
C  MODEL 2:
C  MEAN ENERGY FROM CROSS SECTION WEIGHTED DRIFTING MAXWELLIAN
C  (ONLY NEEDED FOR TRACKLENGTH ESTIMATOR)
C  ION SAMPLING FROM WEIGHTED DRIFTING MAXWELLIAN (E.G., BY REJECTION)
          IF (IESTEL(IREL,3).EQ.0) THEN  ! for tracklength estimator only
          IF (NSTORDR >= NRAD) THEN
            EPEL3(1:NSTORDT) = EPLEL3(IREL,K,1:NSTORDT)
            JAN=NSTORDT
          ELSE
            JAN=0
          END IF
          IF (JAN < 9) THEN
            KK=NELREL(IREL)
            PLS=TIINL(IPLSTI,K)+ADDEL(IREL,IPLS)
            DO J=JAN+1,9
              EPEL3(J)=CREAC(9,J,KK)
              DO II=8,1,-1
                EPEL3(J)=EPEL3(J)*PLS+CREAC(II,J,KK)
              END DO
            END DO
          END IF
          IF (JAN < 1) EPEL3(1)=EPEL3(1)+DIINL(IPLS,K)
C  MINIMUM PROJECTILE ENERGY: 0.1 EV
          ELB=MAX(-2.3_DP,LOG(PVELQ(IPLSV))+EEFEL(IREL))
          EXPO=EPEL3(9)
          DO 55 II=1,8
            IF8=9-II
            EXPO=EXPO*ELB+EPEL3(IF8)
55        CONTINUE
          ESIGEL(IREL,1)=EXP(EXPO)/SIGVEL(IREL)
          ESIGEL(IREL,1)=ESIGEL(IREL,1)+EDRIFT(IPLS,K)
          ENDIF  ! this was for tracklength estimator only
          CFLAG(5,1)=3
C       ELSEIF (MODCOL(5,4,NSPA+IMOL,IPLS).EQ.3) THEN
C  MODEL 3:
C  MEAN ENERGY FROM DRIFTING ISOTROPIC ONE SPEED DISTRIBUTION
C  (ONLY NEEDED FOR TRACKLENGTH ESTIMATOR)
C  ION SAMPLING FROM WEIGHTED DRIFTING ISOTROPIC ONE SPEED DISTRIBUTION
C  NOT READY
        ELSE
          GOTO 995
        ENDIF
51    CONTINUE
C
60    CONTINUE
C
C     TOTAL
C
!      SIGMAX=MAXVAL(XSTOR(:,1:4))
!      WHERE (XSTOR(:,1:4) .LE. SIGMAX*1.D-10 )
!        XSTOR(:,1:4) = 0.D0
!      END WHERE
      SIGMAX=MAXVAL(XSTOR(1:mstor1,1:4))
      WHERE (XSTOR(1:mstor1,1:4) .LE. SIGMAX*1.D-10 )
        XSTOR(1:mstor1,1:4) = 0.D0
      END WHERE
c     DO I1=1,MSTOR1
c       IF (XSTOR(I1,1) .LE. SIGMAX*1.D-10 ) XSTOR(I1,1) = 0._DP
c       IF (XSTOR(I1,2) .LE. SIGMAX*1.D-10 ) XSTOR(I1,2) = 0._DP
c       IF (XSTOR(I1,3) .LE. SIGMAX*1.D-10 ) XSTOR(I1,3) = 0._DP
c       IF (XSTOR(I1,4) .LE. SIGMAX*1.D-10 ) XSTOR(I1,4) = 0._DP
c     END DO
C
100   CONTINUE
      SIGTOT=SIGPIT+SIGCXT+SIGEIT+SIGELT
      IF (SIGTOT.GT.1.D-20) THEN
        FPATHM=VEL/SIGTOT
        ZMFPI=1./FPATHM
      ENDIF
C
      RETURN
990   CONTINUE
      IML=NSPA+IMOL
      WRITE (6,*) 'ERROR IN FPATHM: INCONSISTENT ELEC. IMP. DATA'
      WRITE (6,*) 'IML,MODCOL(1,J,IML,1) '
      WRITE (6,*) IMOL,(MODCOL(1,J,IML,1),J=1,4)
      CALL EXIT_OWN(1)
991   CONTINUE
      IML=NSPA+IMOL
      WRITE (6,*) 'ERROR IN FPATHM: INCONSISTENT ION IMP. IONIZ. DATA'
      WRITE (6,*) 'IML,IPL,MODCOL(4,J,IML,IPL) '
      DO 993 IPL=1,NPLSI
        WRITE (6,*) IMOL,IPL,(MODCOL(4,J,IML,IPL),J=1,4)
993   CONTINUE
      CALL EXIT_OWN(1)
992   CONTINUE
      IML=NSPA+IMOL
      WRITE (6,*) 'ERROR IN FPATHM: INCONSISTENT CHARGE EXCHANGE DATA'
      WRITE (6,*) 'IML,IPL,(MODCOL(3,J,IML,IPL),J=1,4) '
      DO 994 IPL=1,NPLSI
        WRITE (6,*) IMOL,IPL,(MODCOL(3,J,IML,IPL),J=1,4)
994   CONTINUE
      CALL EXIT_OWN(1)
995   CONTINUE
      IML=NSPA+IMOL
      WRITE (6,*) 'ERROR IN FPATHM: INCONSISTENT ELASTIC COLL. DATA'
      WRITE (6,*) 'IML,IPL,(MODCOL(5,J,IML,IPL),J=1,4) '
      DO 996 IPL=1,NPLSI
        WRITE (6,*) IMOL,IPL,(MODCOL(5,J,IML,IPL),J=1,4)
996   CONTINUE
      CALL EXIT_OWN(1)
      END
