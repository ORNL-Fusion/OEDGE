
C
C       ..............................
C       .                            .
C       .  SOURCE SAMPLING ROUTINES  .
C       .                            .
C       ..............................
C
C     SUBROUTINE SAMPNT
C     SUBROUTINE SAMLNE
C     SUBROUTINE SAMSRF
C     SUBROUTINE SAMVOL
C
      SUBROUTINE SAMPNT (NLPT,TIWL,TEWL,DIWL,VXWL,VYWL,VZWL,WEISPZ)

      USE PRECISION
      USE PARMMOD
      USE COMUSR
      USE CCONA
      USE CLOGAU
      USE CINIT
      USE CGRID
      USE COMPRT
      USE COMSOU
      USE CTRIG

      IMPLICIT NONE

      REAL(DP), INTENT(OUT) :: TEWL, TIWL(*), DIWL(*),
     .                       VXWL(*), VYWL(*), VZWL(*), WEISPZ(*)
      INTEGER, INTENT(IN) :: NLPT
      REAL(DP) :: X01, CNORM, WINK
      INTEGER :: NT, LEARCA, LEARC1, LEARC2, LEARCT, LEAUSR, IPOINT,
     .           IAUSR, IBUSR, IRUSR, IPUSR, ITUSR, IPLSTI, IPLSV
C
      IPOINT=NLPT
      IF (SORLIM(IPOINT,ISTRA).LT.0.D0) THEN
        CALL SM1USR(NLPT,X0,Y0,Z0,
     .              SORAD1(NLPT,ISTRA),SORAD2(NLPT,ISTRA),
     .              SORAD3(NLPT,ISTRA),SORAD4(NLPT,ISTRA),
     .              SORAD5(NLPT,ISTRA),SORAD6(NLPT,ISTRA),
     .              IRUSR,IPUSR,ITUSR,IAUSR,IBUSR,
     .              TIWL,TEWL,DIWL,VXWL,VYWL,VZWL,WEISPZ)
      ELSE
        X0=SORAD1(IPOINT,ISTRA)
        Y0=SORAD2(IPOINT,ISTRA)
        Z0=SORAD3(IPOINT,ISTRA)
      ENDIF
C
      IF (NLTRA) PHI=SORAD3(IPOINT,ISTRA)*DEGRAD
      MRSURF=0
      MPSURF=0
      MTSURF=0
      MASURF=0
      NLSRFX=.FALSE.
      NLSRFY=.FALSE.
      NLSRFZ=.FALSE.
      NLSRFA=.FALSE.
      IF (NRSOR(IPOINT,ISTRA).GT.0.OR.NASOR(IPOINT,ISTRA).GT.0) THEN
        write (6,*) ' marke 1 '
        NRCELL=NRSOR(IPOINT,ISTRA)
        NACELL=NASOR(IPOINT,ISTRA)
        IPOLG =NISOR(IPOINT,ISTRA)
      ELSEIF (NRSOR(IPOINT,ISTRA).EQ.0.AND.
     .        NASOR(IPOINT,ISTRA).EQ.0) THEN
        IF (LEVGEO.LE.4) THEN
          NRCELL=LEARC1(X0,Y0,Z0,IPOLG,1,NR1STM,.FALSE.,.FALSE.,NPANU,
     .                 'SAMPNT      ')
        ELSEIF (LEVGEO.EQ.5) THEN
          NRCELL=LEARCT(X0,Y0,Z0)
        ELSEIF (LEVGEO.EQ.6) THEN
C          WRITE (6,*) 'INVALID CELL NUMBER IN SAMPNT '
C          CALL EXIT_OWN(1)
        write (6,*) ' marke 3 '
          nrcell=leausr(x0,y0,z0)
        END IF
        NACELL=0
      ELSE
        GOTO 991
      ENDIF
      NTCELL=1
      IPERID=1
      IF (NLTOR.AND.NACELL.EQ.0) THEN
        IF (NLTRZ) THEN
          IF (NTSOR(NLPT,ISTRA).GT.0) THEN
C  NTCELL IS EXPLICITLY DEFINED BY INPUT VARIABLE NTSOR
            NTCELL=NTSOR(NLPT,ISTRA)
          ELSEIF (NTSOR(NLPT,ISTRA).EQ.0) THEN
C  NTCELL IS COMPUTED IN STANDARD MESH
            NTCELL=LEARCA(Z0,ZSURF,1,NT3RD,1,'SAMPNT      ')
          ELSE
            GOTO 991
          ENDIF
        ELSEIF (NLTRA) THEN
C  NTSOR NOT AVAILABLE FOR NLTRA OPTION
C  FIND Z0,NTCELL FROM X01,PHI
          NTCELL=LEARCA(PHI,ZSURF,1,NT3RD,1,'SAMPNT      ')
          IF (NTCELL.LE.0.OR.NTCELL.GT.NT3RDM) THEN
            WRITE (6,*) 'NTCELL OUT OF RANGE IN SAMPNT '
            WRITE (6,*) PHI,ZHALF
            CALL EXIT_OWN(1)
          ENDIF
          X01=X0+RMTOR
          CALL FZRTRI(X0,Z0,NTCELL,X01,PHI,NTCELL)
          IPERID=NTCELL
        ELSEIF (NLTRT) THEN
          WRITE (6,*) 'NLTRT: TO BE WRITTEN IN SAMPNT '
          CALL EXIT_OWN(1)
        ENDIF
      ELSEIF (.NOT.NLTOR.OR.NACELL.GT.0) THEN
        IF (NLTRA) THEN
C  FIND Z0, NT,  FROM X0,PHI
          NT=LEARCA(PHI,ZSURF,1,NTTRA,1,'SAMPNT      ')
          IF (NT.LE.0.OR.NT.GT.NTTRAM) THEN
            WRITE (6,*) 'NT OUT OF RANGE IN SAMPNT '
            WRITE (6,*) PHI,ZFULL
            CALL EXIT_OWN(1)
          ENDIF
          X01=X0+RMTOR
          CALL FZRTRI(X0,Z0,NT,X01,PHI,NT)
          IPERID=NT
        ELSEIF (NLTRT) THEN
          WRITE (6,*) 'NLTRT: TO BE WRITTEN IN SAMPNT '
          CALL EXIT_OWN(1)
        ENDIF
      ENDIF
C
      NPCELL=1
      IF (NLPOL.AND.NACELL.EQ.0) THEN
        IF (NPSOR(NLPT,ISTRA).GT.0) THEN
C  NPCELL IS EXPLICITLY DEFINED BY INPUT VARIABLE NPSOR
          NPCELL=NPSOR(NLPT,ISTRA)
        ELSEIF (NPSOR(NLPT,ISTRA).EQ.0) THEN
C  NPCELL IS COMPUTED IN STANDARD MESH
          IF (LEVGEO.EQ.1) THEN
            NPCELL=LEARCA(Y0,PSURF,1,NP2ND,1,'SAMPNT')
          ELSEIF (LEVGEO.EQ.2) THEN
            IF (NLCRC) THEN
              WINK=MOD(ATAN2(Y0,X0)+PI2A-PSURF(1),PI2A)+PSURF(1)
              NPCELL=LEARCA(WINK,PSURF,1,NP2ND,1,'SAMPNT')
            ELSE
              NPCELL=LEARC2(X0,Y0,NRCELL,NPANU,'SAMPNT')
            ENDIF
          ELSEIF (LEVGEO.EQ.3) THEN
            NPCELL=IPOLG
          ELSE
            WRITE (6,*) 'ERROR EXIT FROM SAMPNT. NLPOL ',LEVGEO
            CALL EXIT_OWN(1)
          ENDIF
        ELSE
          GOTO 991
        ENDIF
      ENDIF
C
      NBLOCK=NBSOR(IPOINT,ISTRA)
      NBLOCK=MAX0(1,NBLOCK)
      NBLOCK=MIN0(NBLOCK,NBMLT)
C
      IF (NRCELL.GT.0) NACELL=0
      IF (NACELL.GT.0) NBLOCK=NBMLTP
      NBLCKA=NSTRD*(NBLOCK-1)+NACELL
      NCELL=NRCELL+((NPCELL-1)+(NTCELL-1)*NP2T3)*NR1P2+NBLCKA
C
      TEWL=TEIN(NCELL)
      DO 13 IPLS=1,NPLSI
        IPLSTI=MPLSTI(IPLS)
        IPLSV=MPLSV(IPLS)
        TIWL(IPLS)=TIIN(IPLSTI,NCELL)
        IF (INDPRO(4) == 8) THEN
          CALL VECUSR (2,VXWL(IPLS),VYWL(IPLS),VZWL(IPLS),IPLS)
        ELSE
          VXWL(IPLS)=VXIN(IPLSV,NCELL)
          VYWL(IPLS)=VYIN(IPLSV,NCELL)
          VZWL(IPLS)=VZIN(IPLSV,NCELL)
        END IF
        DIWL(IPLS)=DIIN(IPLS,NCELL)
13    CONTINUE
C
      DO 20 ISPZ=1,NSPZ
        WEISPZ(ISPZ)=-1.
20    CONTINUE
      IF (NSPEZ(ISTRA).LE.0) THEN
C  ANALOG SAMPLING DISTRIBUTION NOT AVAILABLE FOR POINT SOURCE
        GOTO 992
      ENDIF
C
      CRTX=SORAD4(IPOINT,ISTRA)
      CRTY=SORAD5(IPOINT,ISTRA)
      CRTZ=SORAD6(IPOINT,ISTRA)
      CNORM=SQRT(CRTX**2+CRTY**2+CRTZ**2)+EPS60
      CRTX=CRTX/CNORM
      CRTY=CRTY/CNORM
      CRTZ=CRTZ/CNORM
C
      RETURN
991   CONTINUE
      WRITE (6,*) 'ERROR IN SAMPNT                               '
      CALL EXIT_OWN(1)
992   CONTINUE
      WRITE (6,*) 'ERROR IN SAMPNT, NSPEZ OUT OF RANGE           '
      CALL EXIT_OWN(1)
      END
