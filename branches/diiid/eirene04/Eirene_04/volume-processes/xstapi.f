C
C
      SUBROUTINE XSTAPI(COUN,PLS)
C
C       SET UP TABLES (E.G. OF REACTION RATE ) FOR ATOMIC SPECIES
C
      USE PRECISION
      USE PARMMOD
      USE COMUSR
      USE CCONA
      USE CLOGAU
      USE CGRID
      USE CZT1
      USE CTRCEI
      USE COMPRT
      USE COMXS
      USE CSPEI

      IMPLICIT NONE

      REAL(DP), INTENT(OUT) :: PLS(*), COUN(0:9,*)
      REAL(DP) :: CF(9,0:9)
      REAL(DP) :: FCTKKL, P2N, FACTKK, TMASS, ADDT, ADDTL, PMASS, CHRDIF
      INTEGER :: NSEPI4, NSEPI5, IAPI, I, NEND, J, IAT, IO, ION, IA,
     .           IML, IM, MODC, KK, NRC, IDSC, IRPI, IIO, IPL, IPLSTI
      INTEGER, EXTERNAL :: IDEZ
      SAVE
C
C   ION IMPACT COLLISIONS
C
      DO 1000 IATM=1,NATMI
        IDSC=0
        LGAPI(IATM,0,0)=0
        LGAPI(IATM,0,1)=0
C
C  NO DEFAULT MODEL
C

        IF (NRCA(IATM).EQ.0) THEN
          NAPII(IATM)=0
C
C  NON DEFAULT ION IMPACT MODEL:  130--190
C
        ELSEIF (NRCA(IATM).GT.0) THEN
          DO 130 NRC=1,NRCA(IATM)
            KK=IREACA(IATM,NRC)
            IF (ISWR(KK).NE.4) GOTO 130
C
            FACTKK=FREACA(IATM,NRC)
            IF (FACTKK.EQ.0.D0) FACTKK=1.
            IF (MASSP(KK).LE.0.OR.MASST(KK).LE.0) GOTO 992
C  INCIDENT BULK PARTICLE INDEX
            IPLS=IDEZ(IBULKA(IATM,NRC),3,3)
            IPLSTI=MPLSTI(IPLS)
            IF (IPLS.LE.0.OR.IPLS.GT.NPLSI) GOTO 990
            IDSC=IDSC+1
            NRPII=NRPII+1
            IF (NRPII.GT.NRPI) GOTO 999
            IRPI=NRPII
            NREAPI(IRPI) = KK
            LGAPI(IATM,IDSC,0)=IRPI
            LGAPI(IATM,IDSC,1)=IPLS
            PPLPI(IRPI,IPLS)=PPLPI(IRPI,IPLS)-1.D0
C  SECONDARY INDEX, FIRST SECONDARY
            ITYP=IDEZ(ISCD1A(IATM,NRC),1,3)
            ISPZ=IDEZ(ISCD1A(IATM,NRC),3,3)
            IF (ITYP.EQ.3) PIOPI(IRPI,ISPZ)=PIOPI(IRPI,ISPZ)+1.D0
            IF (ITYP.EQ.4) PPLPI(IRPI,ISPZ)=PPLPI(IRPI,ISPZ)+1.D0
C  SECONDARY INDEX, SECOND SECONDARY
            ITYP=IDEZ(ISCD2A(IATM,NRC),1,3)
            ISPZ=IDEZ(ISCD2A(IATM,NRC),3,3)
            IF (ITYP.EQ.3) PIOPI(IRPI,ISPZ)=PIOPI(IRPI,ISPZ)+1.D0
            IF (ITYP.EQ.4) PPLPI(IRPI,ISPZ)=PPLPI(IRPI,ISPZ)+1.D0
C
            CHRDIF=0.
            DO 133 IIO=1,NIONI
              CHRDIF=CHRDIF+PIOPI(IRPI,IIO)*NCHRGI(IIO)
133         CONTINUE
            DO 134 IPL=1,NPLSI
              CHRDIF=CHRDIF+PPLPI(IRPI,IPL)*NCHRGP(IPL)
134         CONTINUE
            PELPI(IRPI)=PELPI(IRPI)+CHRDIF
C
            PPLPI(IRPI,IPLS)=PPLPI(IRPI,IPLS)+1.D0
C
C  TARGET MASS IN <SIGMA*V> FORMULA: MAXW. BULK PARTICLE
C  (= PROJECTILE MASS IN CROSS SECTION MEASUREMENT: TARGET AT REST)
            PMASS=MASSP(KK)*PMASSA
C  PROJECTILE MASS IN <SIGMA*V> FORMULA: MONOENERG. TEST PARTICLE
C  (= TARGET PARTICLE IN CROSS SECTION MEASUREMENT: TARGET AT REST)
            TMASS=MASST(KK)*PMASSA
C
            ADDT=PMASS/RMASSP(IPLS)
            ADDTL=LOG(ADDT)
            ADDPI(IRPI,IPLS) = ADDTL
C
C CROSS SECTION (E-LAB)
            IF (IDEZ(MODCLF(KK),2,5).EQ.1) THEN
              MODCOL(4,1,NSPH+IATM,IPLS)=KK
              MODCOL(4,2,NSPH+IATM,IPLS)=3
              IF (FACTKK.NE.1.D0)
     .        WRITE (6,*) 'FREACA NOT READY FOR CROSS SECTION IN XSTAPI'
            ENDIF
C
C RATE COEFFICIENT
            MODC=IDEZ(MODCLF(KK),3,5)
            IF (MODC.GE.1.AND.MODC.LE.2) THEN
              MODCOL(4,2,NSPH+IATM,IPLS)=MODC
              IF (MODC.EQ.1) NEND=1
              IF (MODC.EQ.2) NEND=NSTORDT
              IF (NSTORDR >= NRAD) THEN
                DO 142 J=1,NSBOX
                  PLS(J)=TIINL(IPLSTI,J)+ADDTL
142             CONTINUE
                IF (MODC.EQ.1) THEN
                  CALL CDEF (PLS,1,NEND,KK,COUN,NSBOX,CF,.TRUE.,
     .                      .FALSE.,.TRUE.)
                  DO 145 J=1,NSBOX
                    TABPI3(IRPI,J,1)=COUN(1,J)*DIIN(IPLS,J)*FACTKK
145               CONTINUE
                ELSEIF (MODC.EQ.2) THEN
                  CALL CDEF (PLS,1,NEND,KK,COUN,NSBOX,CF,.FALSE.,
     .                      .FALSE.,.TRUE.)
                  FCTKKL=LOG(FACTKK)
                  DO 146 J=1,NSBOX
                    TABPI3(IRPI,J,1)=COUN(1,J)+DIINL(IPLS,J)+FCTKKL
146               CONTINUE
                ENDIF
                DO 144 I=2,NEND
                  DO 143 J=1,NSBOX
                    TABPI3(IRPI,J,I)=COUN(I,J)
143               CONTINUE
144             CONTINUE
              ELSE
                FACREA(KK) = LOG(FACTKK)
              END IF
            ENDIF
C
            DEFPI(IRPI)=LOG(CVELI2*PMASS)
            EEFPI(IRPI)=LOG(CVELI2*TMASS)
C
C  3. BULK ION MOMENTUM LOSS RATE
C
C
C  4A. BULK ION ENERGY LOSS RATE
C
C  SET ENERGY LOSS RATE OF IMPACTING ION
            NSEPI4=IDEZ(ISCDEA(IATM,NRC),4,5)
            IF (NSEPI4.EQ.0) THEN
              IF (NSTORDR >= NRAD) THEN
                DO 151 J=1,NSBOX
                  EPLPI3(IRPI,J,1)=EBULKA(IATM,NRC)
151             CONTINUE
                NELRPI(IRPI)=-1
              ELSE
                NELRPI(IRPI)=-1
                EPLPI3(IRPI,1,1)=EBULKA(IATM,NRC)
              END IF
              MODCOL(4,4,NSPH+IATM,IPLS)=1
            ELSEIF (NSEPI4.EQ.1) THEN
C  4.B)  ENERGY LOSS RATE OF IMP. ION = 1.5*TI* RATECOEFF.
              IF (NSTORDR >= NRAD) THEN
                DO 252 J=1,NSBOX
                  EPLPI3(IRPI,J,1)=1.5*TIIN(IPLSTI,J)+EDRIFT(IPLS,J)
252             CONTINUE
                NELRPI(IRPI) = -2
              ELSE
                NELRPI(IRPI) = -2
              END IF
              MODCOL(4,4,NSPH+IATM,IPLS)=1
            ELSE
              WRITE (6,*) 'NSEPI4 ILL DEFINED IN XSTAPI '
              CALL EXIT_OWN(1)
            ENDIF
C
C  4B. BULK ELECTRON ENERGY LOSS RATE
C
C  SET NET ENERGY LOSS RATE OF ELECTRON (IF ANY INVOLVED)
            NSEPI5=IDEZ(ISCDEA(IATM,NRC),5,5)
            IF (NSEPI5.EQ.0) THEN
C             MODCOL(4,4,NSPH+IATM,IPLS)=1
            ELSE
              WRITE (6,*) 'NSEPI5 ILL DEFINED IN XSTAPI '
              CALL EXIT_OWN(1)
            ENDIF
C
130       CONTINUE
C
          NAPII(IATM)=IDSC
C  NO MODEL DEFINED
        ELSE
          NAPII(IATM)=0
        ENDIF
C
        NAPIIM(IATM)=NAPII(IATM)-1
C
        LGAPI(IATM,0,0)=0
        DO 180 IAPI=1,NAPII(IATM)
          LGAPI(IATM,0,0)=LGAPI(IATM,0,0)+LGAPI(IATM,IAPI,0)
180     CONTINUE
C
        DO 500 IAPI=1,NAPII(IATM)
          IRPI=LGAPI(IATM,IAPI,0)
          DO 510 IAT=1,NATMI
            IA=IAT
            PATPI(IRPI,0)=PATPI(IRPI,0)+
     +                          PATPI(IRPI,IAT)
510       CONTINUE
          DO 520 IML=1,NMOLI
            IM=NATMI+IML
            PMLPI(IRPI,0)=PMLPI(IRPI,0)+
     +                          PMLPI(IRPI,IML)
520       CONTINUE
          DO 530 ION=1,NIONI
            IO=NSPAM+ION
            PIOPI(IRPI,0)=PIOPI(IRPI,0)+
     +                          PIOPI(IRPI,ION)
530       CONTINUE
          DO 540 IPL=1,NPLSI
            PPLPI(IRPI,0)=PPLPI(IRPI,0)+
     +                          PPLPI(IRPI,IPL)
540       CONTINUE
C
C
          P2NPI(IRPI)=PATPI(IRPI,0)+PMLPI(IRPI,0)+
     .                   PIOPI(IRPI,0)
          P2N=P2NP(IRPI,NSPAMI)
          DO 550 ISPZ=1,NSPAMI
            IF (P2N.GT.0.D0)
     .      P2NP(IRPI,ISPZ)=P2NP(IRPI,ISPZ)/P2N
550       CONTINUE
500     CONTINUE
1000  CONTINUE
C
      RETURN
C
C
990   CONTINUE
      WRITE (6,*) 'ERROR IN XSTAPI: EXIT CALLED  '
      WRITE (6,*) 'INVALID SPECIES INDEX FOR ION IMPACT COLLISION'
      CALL EXIT_OWN(1)
992   CONTINUE
      WRITE (6,*) 'ERROR IN XSTAPI: EXIT CALLED  '
      WRITE (6,*) 'MASS NUMBERS OF INTERACTING PARTICLES INCONSISTENT'
      CALL EXIT_OWN(1)
999   CONTINUE
      WRITE (6,*) 'INSUFFICIENT STORAGE FOR PI: NRPI=',NRPI
      CALL EXIT_OWN(1)
      RETURN
C
      END
