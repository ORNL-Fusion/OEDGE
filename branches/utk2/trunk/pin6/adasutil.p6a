      SUBROUTINE ADASRE( IZ0 , ECUT , ICHAN , IOUT , IFORCE , IER )
      IMPLICIT NONE
C
C+ .....................................................................
C
C ROUTINE : ADAS READING OF DATAFILES
C           ---  --
C VERSION : V2.R1.M0
C
C PURPOSE : TO READ A COMPLETE SET OF 'ADAS' MASTER FILES FOR AN ELEMENT
C
C INPUT   : (I*4) IZ0          = NUCLEAR CHARGE OF ELEMENT TO BE READ
C           (R*4) ECUT         = ENERGY CUT-OFF (EV) (USED TO ACCESS
C                                ENERGY FILTERED RADIATED POWER DATA
C                                SETS - SEE IEVCUT BELOW)
C           (I*4) ICHAN        = N/A
C           (I*4) IOUT         = OUTPUT CHANNEL FOR MESSAGES/ERRORS
C           (I*4) IFORCE       = 0 --- ALLOW ROUTINE TO DETERMINE
C                                      WHETHER TO READ DATA OR NOT.
C                                      ( E.G DISALLOWING THE READING
C                                            OF THE SAME SPECIES TWICE)
C                              = 1 --- FORCE ROUTINE TO READ DATA AND
C                                      OVERWRITE THE OLD SPECIES DATA
C                                      WITH THE NEW ONE.
C                                      ( E.G READ THE SAME SPECIES AGAIN
C                                            BUT FROM A DIFFERENT YEAR )
C
C OUTPUT  : (I*4) IER          = 0 --- ROUTINE SUCCESSFUL
C                              = 2 --- NO. ADAS TEMP'S > MAX ALLOWED
C                              = 3 --- NO. ADAS DENS'S > MAX ALLOWED
C                              = 4 --- NO. ADAS STATES > MAX ALLOWED
C                              = 7 --- UNABLE TO OPEN A DATAFILE
C                              = 8 --- SPECIES EXCEEDS MAXIMUM ALLOWED
C
C PROGRAM : (I*4)  ICLMAX      = MAX. ICLASS ALLOWED
C           (C*2)  YEAR        = IYEAR
C           (C*2)  YEARDF      = IDYEAR
C           (I*4)  ISOLD       = ORIGINAL INDEX OF SPECIES WHICH WILL
C                                BE OVERWRITTEN BY NEW DATA (IFORCE=1)
C           (I*4)  IEVCUT      = ABSOLUTE INTEGER PART OF ENERGY CUTOF
C           (I*4)  IFAIL       = D2LINK ERROR CODES
C           (C*100)MESS        = MESSAGE FROM D2DATA
C           (LOG)  LINIT       = .TRUE. --- INITIALISE /CADAS2/
C
C NOTES   : (1) FROM COMMON BLOCK 'CADAS1' :-
C               (I*4)  IYEAR  = 'ADAS' YEAR IDENTIFIER REQUESTED
C               (I*4)  IDYEAR = 'ADAS' YEAR IDENTIFIER DEFAULT
C               (C*6)  USERID = ON WHO'S FILE SPACE ARE 'ADAS' FILES
C
C           (2) IF IYEAR = 0 THEN IDYEAR IS USED
C
C           (3) IF THERE IS A MISSING 'ADAS' FILE FOR IYEAR THEN
C               THE 'ADAS' FILE FROM IDYEAR WILL BE USED INSTEAD.
C
C           (4) A WARNING MESSAGE WILL BE GIVEN IF A IDYEAR IS
C               USED AS A REPLACEMENT FOR IYEAR WHEN IYEAR <> 0.
C
C           (5) ADAS DATAFILE NAMES ;
C    ICLASS=1 ... ACD    = COLLISIONAL DIELECTRONIC
C                          RECOMBINATION RATE COEFFICIENTS (CM**3 SEC-1)
C    ICLASS=2 ... SCD    = COLLISIONAL DIELECTRONIC
C                          IONISATION RATE COEFFICIENTS (CM**3 SEC-1)
C    ICLASS=3 ... CCD    = COLLISIONAL RADIATIVE CHARGE EXCHANGE
C                          RECOMBINATION RATE COEFFICIENTS CM**3 SEC-1)
C    ICLASS=4 ... PLT    = TOTAL LOW LEVEL LINE POWER
C                          LOSS RATE COEFFICIENTS (ERG CM**3 SEC-1)
C    ICLASS=5 ... PRB    = RECOMBINATION/CASCADE + BREMSSTRAHLUNG POWER
C                          LOSS RATE COEFFICIENTS (ERG CM**3 SEC-1)
C    ICLASS=6 ... PRC    = CHARGE EXCHANGE POWER
C                          LOSS RATE COEFFICIENTS (ERG CM**3 SEC-1)
C    ICLASS=7 ... PLS    = SPECIFIC LINE POWER
C                          LOSS RATE COEFFICIENTS (ERG CM**3 SEC-1)
C
C ROUTINE : D2LINK       = CALL D2DATA AND THEN FILL /CADAS2/
C           I4UNIT       = SET MESSAGE OUTPUT CHANNEL FOR D2DATA
C           XXUID        = SET ADAS DATA SOURCE USER ID
C
C AUTHOR  : JAMES SPENCE  (K1/0/80)  EXT. 4865
C           JET
C
C HISTORY : V2.R1.M0 --- 16/05/96 --- CREATION
C
C- .....................................................................
C
C..INPUT
      INTEGER*4   IZ0 , ICHAN , IOUT , IFORCE
      REAL*4      ECUT
C
C..OUTPUT
      INTEGER*4   IER
C
C../CADAS1/
      INTEGER*4   IYEAR , IDYEAR
      CHARACTER   USERID*80
C
      COMMON /CADAS1/ IYEAR , IDYEAR , USERID
C
C../CADAS2/
      INTEGER*4   ITDIM    , IDDIM    , IZDIM    , ISDIM   , IPDIM
      PARAMETER(  ITDIM=55 , IDDIM=30 , IZDIM=28 , ISDIM=5 , IPDIM=7 )
C
      REAL*4      ZRAL  (ITDIM,IDDIM,IZDIM,ISDIM)
     &         ,  ZCAL  (ITDIM,IDDIM,IZDIM,ISDIM)
     &         ,  ZSAL  (ITDIM,IDDIM,IZDIM,ISDIM)
     &         ,  ZPLTL (ITDIM,IDDIM,IZDIM,ISDIM)
     &         ,  ZPLSL (ITDIM,IDDIM,IZDIM,ISDIM)
     &         ,  ZPRBL (ITDIM,IDDIM,IZDIM,ISDIM)
     &         ,  ZPRCL (ITDIM,IDDIM,IZDIM,ISDIM)
     &         ,  ZSAL0 (ITDIM,IDDIM,ISDIM)
     &         ,  ZPLTL0(ITDIM,IDDIM,ISDIM)
     &         ,  ZPLSL0(ITDIM,IDDIM,ISDIM)
     &         ,  ZTEL(ITDIM,IPDIM,ISDIM)
     &         ,  ZNEL(IDDIM,IPDIM,ISDIM)
      INTEGER*4   ITMAX(IPDIM,ISDIM)
     &         ,  IDMAX(IPDIM,ISDIM)
     &         ,  IZ0A(ISDIM)
     &         ,  ISMAX
      CHARACTER*8 ZLINFO(IZDIM,IPDIM,ISDIM)
C
      COMMON /CADAS2/ ZRAL  , ZCAL  , ZSAL   , ZPLTL   , ZPLSL , ZPRBL
     &              , ZPRCL , ZSAL0 , ZPLTL0 , ZPLSL0  , ZTEL  , ZNEL
     &              , ITMAX , IDMAX , IZ0A   , ISMAX
     &              , ZLINFO
C
C..PROGRAM
      INTEGER*4   ICLMAX
      PARAMETER(  ICLMAX = 7 )
      INTEGER*4   IS     , ISOLD    , IEVCUT , IFAIL , ICLASS
      CHARACTER   YEAR*2 , YEARDF*2 , MESS*100
      LOGICAL     LINIT
      SAVE        LINIT
c
c     DIVIMP PATCH
c
      integer I4UNIT, ITMP
      external I4UNIT
c
c     DIVIMP PATCH
c
C
C-------------------------------- INITIALISE ---------------------------
C
      DATA LINIT/ .TRUE. /
C
      IF( LINIT ) THEN
          ISMAX = 0
          LINIT = .FALSE.
      END IF
C
      IER      = 0
      ISOLD    = 0
c
c     DIVIMP PATCH 
c
c     CALL I4UNIT(IOUT)
c
      Itmp = I4UNIT(IOUT)
c
c     DIVIMP PATCH
c
C
      CALL XXUID(USERID)
C
C--------------------- CONVERT YEAR INTEGER TO STRING ------------------
C
      WRITE(YEARDF,'(I2)') IDYEAR
C
      IF( IYEAR.GT.0 ) THEN
          WRITE(YEAR  ,'(I2)') IYEAR
      ELSE
          YEAR = YEARDF
      END IF
C
C---------------------- CONVERT ECUT REAL TO INTEGER -------------------
C
      IEVCUT = ABS(ECUT)
C
C----------------------------- SPECIES LOADING -------------------------
C
C.. SKIP ROUTINE IF THE SPECIES HAS ALREADY BEEN READ OR FORCE RE-READ.
      DO 10 IS = 1 , ISMAX
         IF( IZ0A(IS).EQ.IZ0 ) THEN
             IF( IFORCE.GE.1 ) THEN
                 ISOLD = IS
             ELSE
                 GOTO 9999
             END IF
         END IF
   10 CONTINUE
C
C.. IS THERE STORAGE AVAILABLE FOR THE SPECIES ?
      IF( ISOLD.EQ.0 ) THEN
          IS   = ISMAX + 1
          IF( IS.GT.ISDIM ) THEN
              WRITE(IOUT,9000) ISDIM
              IER = 7
              GOTO 9999
          END IF
      ELSE
          IS   = ISOLD
          WRITE(IOUT,9010) ISOLD , IZ0
      END IF
C
C----------------------------- READ ADAS FILES -------------------------
C
      DO 100 ICLASS = 1 , ICLMAX
         CALL D2LINK( ICLASS , YEAR  , YEARDF , IZ0 , IS , IEVCUT , IOUT
     &              , MESS   , IFAIL )
         IF( IFAIL.NE.0 ) THEN
             WRITE(IOUT,*) MESS
             GOTO 9999
         END IF
  100 CONTINUE
C
C----------------------------- SPECIES STORAGE -------------------------
C
      IF( ISOLD.EQ.0 ) THEN
          ISMAX       = IS
          IZ0A(ISMAX) = IZ0
      END IF
C
C-----------------------------------------------------------------------
C
 9000 FORMAT(' *** ERROR *** SPECIES DIMENSION (ISDIM=',I3,') : TOO LOW'
     &      /'               THE DIMENSION MUST BE, AT LEAST, EQUAL TO '
     &      /'               THE NUMBER OF SPECIES YOU WANT TO ACCESS.')
 9010 FORMAT(' *** WARNING *** SPECIES INDEX =',I3,' (IZ0 = ',I2,')',
     &      /'                 OVERWRITTEN WITH NEW ADAS DATA' )
C
C-----------------------------------------------------------------------
C
 9999 CONTINUE
C
      RETURN
      END
C
C=======================================================================
      SUBROUTINE D2LINK( ICLASS , YEAR  , YEARDF
     I                 , IZ0    , IS    , IEVCUT, IOUT
     O                 , MESS   , IFAIL )
      IMPLICIT NONE
C
C+ .....................................................................
C
C ROUTINE : ADAS READING OF DATAFILES
C           ---  --
C VERSION : V1.R1.M0
C
C PURPOSE : TO READ A COMPLETE SET OF 'ADAS' MASTER FILES FOR AN ELEMENT
C           USING D2DATA AND STORE IN /CADAS2/
C
C INPUT   : (I*4) ICLASS       = 1 --- READ 'ACD' DATA
C                              = 2 --- READ 'SCD' DATA
C                              = 3 --- READ 'CCD' DATA
C                              = 4 --- READ 'PRB' DATA
C                              = 5 --- READ 'PLT' DATA
C                              = 6 --- READ 'PRC' DATA
C                              = 7 --- READ 'PLS' DATA
C           (C*2) YEAR         = 'ADAS' YEAR REQUESTED (YY)
C           (C*2) YEARDF       = 'ADAS' YEAR DEFAULT (YY)
C           (I*4) IZ0          = NUCLEAR CHARGE OF ELEMENT TO BE READ
C           (I*4) IS           = SPECIES INDEX
C           (I*4) IEVCUT       = ENERGY CUT-OFF (EV) (USED TO ACCESS
C                                ENERGY FILTERED RADIATED POWER DATA
C                                SETS (FOR ICLASS=4,5,6)
C           (I*4) IOUT         = OUTPUT CHANNEL FOR MESSAGES/ERRORS
C
C OUTPUT  : (C**) MESS         = MESSAGE FROM D2DATA
C           (I*4) IFAIL        = 0 --- ROUTINE SUCCESSFUL
C                              = 2 --- NO. ADAS TEMP'S > MAX ALLOWED
C                              = 3 --- NO. ADAS DENS'S > MAX ALLOWED
C                              = 4 --- NO. ADAS STATES > MAX ALLOWED
C                              = 6 --- UNABLE TO OPEN A DATAFILE
C                              = 8 --- ICLASS NOT SUPPORTED
C                              = 9 --- NOT ALL IZ0 CHARGED STATES READ
C
C PARAM   : (I*4) ITDIM        = MAX. NUMBER OF TEMPERATURES    ALLOWED
C           (I*4) IDDIM        = MAX. NUMBER OF DENSITIES       ALLOWED
C           (I*4) IZDIM        = MAX. NUMBER OF CHARGED STATES  ALLOWED
C           (I*4) IPDIM        = MAX. NUMBER OF ADAS FILE TYPES ALLOWED
C
C /CADAS2/: (R*4) ZRAL(I,J,Z,S) =RADIATIVE + DIELECTRONIC RECOMBINATION
C           (R*4) ZCAL(I,J,Z,S) =CHARGE EXCHANGE RECOMBINATION
C           (R*4) ZSAL0(I,J,S)  =IONISATION (NEUTRAL)
C           (R*4) ZSAL(I,J,Z,S) =IONISATION (NON-NEUTRAL)
C           (R*4) ZPLTL0(I,J,S) =TOTAL LINE RADIATED POWER (NEUTRAL)
C           (R*4) ZPLTL(I,J,Z,S)=TOTAL LINE RADIATED POWER (NON-NEUTRAL
C           (R*4) ZPRBL(I,J,Z,S)=RAD. + DIEL RECOM. + BREMS. POWER
C           (R*4) ZPRCL(I,J,Z,S)=CX. RECOM. POWER
C           (R*4) ZPLSL0(I,J,S) =SPECIFIC LINE POWER (NEUTRAL)
C           (R*4) ZPLSL(I,J,Z,S)=SPECIFIC LINE POWER (NON-NEUTRAL)
C           (I*4) ITMAX(P,S)    =NUMBER OF TEMPERATURES (EV)
C           (I*4) IDMAX(P,S)    =NUMBER OF TEMPERATURES (CM-3)
C           (I*4) IZ0A(S)       =NUCLEAR CHARGE
C           (I*4) ISMAX         =NUMBER OF SPECIES READ FROM ADAS
C           (C*8) ZLINFO(Z,P,S) =WAVELENGTH INFORMATION LINE
C
C                 PARAMETERS:
C                 -----------
C           (I*4) ITDIM        = MAX. NUMBER OF TEMPERATURES    ALLOWED
C           (I*4) IDDIM        = MAX. NUMBER OF DENSITIES       ALLOWED
C           (I*4) IZDIM        = MAX. NUMBER OF CHARGED STATES  ALLOWED
C           (I*4) IPDIM        = MAX. NUMBER OF ADAS FILE TYPES ALLOWED
C
C                 INDEXING:
C                 ---------
C                 I            =  TE        (1 <= I >= ITMAX(P,S))
C                 J            =  DENS      (1 <= J >= IDMAX(P,S))
C                 Z            =  STAGE     (1 <= Z >= IZ0A(S))
C                 S            =  SPECIES   (1 <= S >= ISMAX)
C                 P            =  ADAS FILE (1 <= K >= IPDIM)
C
C                 *    ALL TABLES ARE LOG10  IN CGS UNITS
C
C                 *    ENERGY LOWER LIMIT  EGR  OPERATES
C
C PROGRAM : (R*8)  DTEVD()     = ADAS DATAFILE TEMPERATURES (EV)
C           (R*8)  DDENSD()    = ADAS DATAFILE DENSITIES (CM-3)
C       (R*8) DCOEFD(IZ,IT,ID) = ADAS DATAFILE COEFFICIENTS
C           (R*8)  ZDATA()     = ADAS DATAFILE CHARGED STATE
C
C           (I*4)  INTP        = NO. OF (TE,DE) INTERPOLATION POINTS
C                                FOR S.R. D2DATA
C           (R*8)  TEINT()     = TEMPERATURE INTERPOLATION POINTS (EV)
C           (R*8)  DEINT()     = DENSITY INTERPOLATION POINTS (CM-3)
C           (R*8)  COFINT()    = INTERPOLATED COEFFICIENT FOR (TE,DE)
C
C           (I*4)  IT          = LOOP ARRAY FOR TEMPERATURES
C           (I*4)  ID          = LOOP ARRAY FOR DENSITIES
C           (I*4)  IZ          = LOOP ARRAY FOR CHARGED STATES
C           (I*4)  IP          = LOOP ARRAY FOR POINTS
C           (I*4)  ICTOIP()    = MAP ICLASS TO IPDIM ELEMENT IN /CADAS2/
C
C NOTES   : (1) A WARNING MESSAGE WILL BE GIVEN IF A IDYEAR IS
C               USED AS A REPLACEMENT FOR IYEAR WHEN IYEAR <> 0.
C
C           (2) ADAS DATAFILE NAMES ;
C    ICLASS=1 ... ACD    = COLLISIONAL DIELECTRONIC
C                          RECOMBINATION RATE COEFFICIENTS (CM**3 SEC-1)
C    ICLASS=2 ... SCD    = COLLISIONAL DIELECTRONIC
C                          IONISATION RATE COEFFICIENTS (CM**3 SEC-1)
C    ICLASS=3 ... CCD    = COLLISIONAL RADIATIVE CHARGE EXCHANGE
C                          RECOMBINATION RATE COEFFICIENTS CM**3 SEC-1)
C    ICLASS=4 ... PLT    = TOTAL LOW LEVEL LINE POWER
C                          LOSS RATE COEFFICIENTS (ERG CM**3 SEC-1)
C    ICLASS=5 ... PRB    = RECOMBINATION/CASCADE + BREMSSTRAHLUNG POWER
C                          LOSS RATE COEFFICIENTS (ERG CM**3 SEC-1)
C    ICLASS=6 ... PRC    = CHARGE EXCHANGE POWER
C                          LOSS RATE COEFFICIENTS (ERG CM**3 SEC-1)
C    ICLASS=7 ... PLS    = SPECIFIC LINE POWER
C                          LOSS RATE COEFFICIENTS (ERG CM**3 SEC-1)
C
C ROUTINE : D2DATA       = READ MASTER FILE
C           I4UNIT       = SET MESSAGE OUTPUT CHANNEL FOR D2DATA
C
C AUTHOR  : JAMES SPENCE  (K1/0/80)  EXT. 4865
C           JET
C
C HISTORY : V1.R1.M0 --- 17/05/96 --- CREATION
C
C- .....................................................................
C
C..INPUT
      INTEGER*4   ICLASS   , IZ0 , IS   , IEVCUT , IOUT
      CHARACTER   YEAR*(*) , YEARDF*(*)
C
C..OUTPUT
      INTEGER*4   IFAIL
      CHARACTER   MESS*(*)
C
C../CADAS2/
      INTEGER*4   ITDIM    , IDDIM    , IZDIM    , ISDIM   , IPDIM
      PARAMETER(  ITDIM=55 , IDDIM=30 , IZDIM=28 , ISDIM=5 , IPDIM=7 )
C
      REAL*4      ZRAL  (ITDIM,IDDIM,IZDIM,ISDIM)
     &         ,  ZCAL  (ITDIM,IDDIM,IZDIM,ISDIM)
     &         ,  ZSAL  (ITDIM,IDDIM,IZDIM,ISDIM)
     &         ,  ZPLTL (ITDIM,IDDIM,IZDIM,ISDIM)
     &         ,  ZPLSL (ITDIM,IDDIM,IZDIM,ISDIM)
     &         ,  ZPRBL (ITDIM,IDDIM,IZDIM,ISDIM)
     &         ,  ZPRCL (ITDIM,IDDIM,IZDIM,ISDIM)
     &         ,  ZSAL0 (ITDIM,IDDIM,ISDIM)
     &         ,  ZPLTL0(ITDIM,IDDIM,ISDIM)
     &         ,  ZPLSL0(ITDIM,IDDIM,ISDIM)
     &         ,  ZTEL(ITDIM,IPDIM,ISDIM)
     &         ,  ZNEL(IDDIM,IPDIM,ISDIM)
      INTEGER*4   ITMAX(IPDIM,ISDIM)
     &         ,  IDMAX(IPDIM,ISDIM)
     &         ,  IZ0A(ISDIM)
     &         ,  ISMAX
      CHARACTER*8 ZLINFO(IZDIM,IPDIM,ISDIM)
C
      COMMON /CADAS2/ ZRAL  , ZCAL  , ZSAL   , ZPLTL   , ZPLSL , ZPRBL
     &              , ZPRCL , ZSAL0 , ZPLTL0 , ZPLSL0  , ZTEL  , ZNEL
     &              , ITMAX , IDMAX , IZ0A   , ISMAX
     &              , ZLINFO
C
C..PROGRAM
      INTEGER*4   INTP
      PARAMETER(  INTP = 1 )
      REAL*8      DTEVD(ITDIM)                , DDENSD(ITDIM)
     &         ,  DCOEFD(ITDIM,ITDIM,ITDIM)   , ZDATA(ITDIM)
     &         ,  TEINT(INTP)                 , DEINT(INTP)
     &         ,  COFINT(INTP)
      INTEGER*4   IT     , ID       , IZ      , IP
     &         ,  ITMAXD , IDMAXD   , IZMAXD  , ICTOIP(7)
C
C--- FIXED INTERPOLATION VALUES AS D2DATA INTERPOLATION IS NOT WANTED --
C
      DATA TEINT/ 1.0E+00 /
      DATA DEINT/ 1.0E+13 /
      DATA ICTOIP/ 1 , 3 , 2 , 5 , 4 , 6 , 7 /
C
C-------------------------------- INITIALISE ---------------------------
C
      IFAIL  = 0
C
      ITMAXD = 0
      IDMAXD = 0
      IZMAXD = 0
C
C-------------------------------- READ ADAS ----------------------------
C
      CALL D2DATA( YEAR          , YEARDF    , MESS   , IFAIL
     &           , IZ0           , 0         , ICLASS , INTP   , IEVCUT
     &           , ITDIM         , ITMAXD    , IDMAXD , IZMAXD
     &           , TEINT(1)      , DEINT(1)
     &           , DTEVD(1)      , DDENSD(1)
     &           , DCOEFD(1,1,1) , ZDATA(1)
     &           , COFINT(1)     )
C
C-------------------------------- CHECK DATA ---------------------------
C
      IF( IFAIL.LT.0 ) IFAIL = 0
C
      IF( IFAIL.EQ.1 ) IFAIL = 6
C
      IF( ITMAXD.GT.ITDIM) THEN
          IFAIL = 2
          WRITE(MESS,9000) 'ITMAXD' , ITMAXD , 'ITDIM' , ITDIM
      ELSE IF( IDMAXD.GT.IDDIM ) THEN
          IFAIL = 3
          WRITE(MESS,9000) 'IDMAXD' , IDMAXD , 'IDDIM' , IDDIM
      ELSE IF( IZMAXD.GT.IZDIM ) THEN
          IFAIL = 4
          WRITE(MESS,9000) 'IZMAXD' , IZMAXD , 'IZDIM' , IZDIM
      END IF
C
      IF( ZDATA(1).NE.1 .OR. ZDATA(IZMAXD).NE.IZ0 ) THEN
          IFAIL = 9
          WRITE(MESS,9020)
      END IF
C
      IF( IFAIL.GT.0 ) GOTO 9999
C
C------------------------------ FILL /CADAS2/ --------------------------
C
      IP           = ICTOIP(ICLASS)
C
      ITMAX(IP,IS) = ITMAXD
      IDMAX(IP,IS) = IDMAXD
C
      DO 10 IT = 1 , ITMAXD
         ZTEL(IT,IP,IS) = DTEVD(IT)
   10 CONTINUE
C
      DO 20 ID = 1 , IDMAXD
         ZNEL(ID,IP,IS) = DDENSD(ID)
   20 CONTINUE
C
      DO 30 IZ = 1 , IZMAXD
         READ(MESS,'(44X,A)') ZLINFO(IZ,IP,IS)
C.. <<PATCH FOR LACK OF HYDROGEN ISOTOPE MASS IN SOME CX MASTER FILES>>
         IF( ICLASS.EQ.3 .AND. ZLINFO(IZ,IP,IS)(1:4).NE.' MH=' )
     >       ZLINFO(IZ,IP,IS) = ' MH=2.00'
C..
   30 CONTINUE
C
      DO 100 IT       = 1 , ITMAXD
         DO 120 ID    = 1 , IDMAXD
            DO 140 IZ = 1 , IZMAXD
C
C.. COLLISIONAL DILELECTRONIC - RADIATIVE RECOMBINATION RATE
               IF( ICLASS.EQ.1 ) THEN
                   ZRAL(IT,ID,IZ,IS)    = DCOEFD(IZ,IT,ID)
C
C.. IONISATION RATE COEFFICIENT
               ELSE IF( ICLASS.EQ.2 .AND. IZ.EQ.1 ) THEN
                   ZSAL0(IT,ID,IS)      = DCOEFD(1,IT,ID)
               ELSE IF( ICLASS.EQ.2 .AND. IZ.GT.1 ) THEN
                   ZSAL(IT,ID,IZ-1,IS)  = DCOEFD(IZ,IT,ID)
C
C.. CHARGE EXCHANGE RECOMBINATION
               ELSE IF( ICLASS.EQ.3 ) THEN
                   ZCAL(IT,ID,IZ,IS)    = DCOEFD(IZ,IT,ID)
C
C.. RAD. + DIEL RECOMB. + BREMS. POWER
               ELSE IF( ICLASS.EQ.4 ) THEN
                   ZPRBL(IT,ID,IZ,IS)   = DCOEFD(IZ,IT,ID)
C
C.. TOTAL LINE RADIATIVE POWER
               ELSE IF( ICLASS.EQ.5 .AND. IZ.EQ.1 ) THEN
                   ZPLTL0(IT,ID,IS)     = DCOEFD(1,IT,ID)
               ELSE IF( ICLASS.EQ.5 .AND. IZ.GT.1 ) THEN
                   ZPLTL(IT,ID,IZ-1,IS) = DCOEFD(IZ,IT,ID)
C
C.. CHARGE EXCHANGE RECOMBINATION POWER
               ELSE IF( ICLASS.EQ.6 ) THEN
                   ZPRCL(IT,ID,IZ,IS)   = DCOEFD(IZ,IT,ID)
C
C.. SPECIFIC LINE POWER
               ELSE IF( ICLASS.EQ.7 .AND. IZ.EQ.1 ) THEN
                   ZPLSL0(IT,ID,IS)     = DCOEFD(1,IT,ID)
               ELSE IF( ICLASS.EQ.7 .AND. IZ.GT.1 ) THEN
                   ZPLSL(IT,ID,IZ-1,IS) = DCOEFD(IZ,IT,ID)
C
C.. ICLASS VALUE UNSUPPORTED !
               ELSE
                   IFAIL = 8
                   WRITE(MESS,9010) ICLASS
                   GOTO 9999
               END IF
  140       CONTINUE
  120    CONTINUE
  100 CONTINUE
C
C-----------------------------------------------------------------------
C
 9000 FORMAT( ' *** ERROR *** D2DATA : ' , A , ' (' , I5
     &      , ') > ' , A , ' (' , I5 ,')' )
 9010 FORMAT( ' *** ERROR *** D2LINK : ICLASS (' , I5
     &      , ') NOT SUPPORTED' )
 9020 FORMAT( ' *** ERROR *** D2LINK : INCOMPLETE CHARGE STATE RANGE'
     &      , ' READ FROM ADAS' )
C
C-----------------------------------------------------------------------
C
 9999 RETURN
      END
C
C=======================================================================
      SUBROUTINE ADASIT( IZ0     , IOUT
     I                 , TE      , TI     , DENS   , DENSH , FRACTH
     O                 , SA0     , SA     , RTA    , PTA0  , PTA
     O                 , IFAIL
     &                 )
      IMPLICIT REAL*4(A-H,O-Z)
C
C-----------------------------------------------------------------------
C
C
C PURPOSE : TO INTERPOLATE 'ADAS' ISONUCLEAR MASTER FILES AT THE
C           REQUIRED ELECTRON TEMPERATURE, ION TEMPERATURE & ELECTRON
C           DENSITY.  THE REQUIRED ELEMENT MUST ALREADY HAVE BEEN
C           EXTRACTED FROM THE 'ADAS' ISONUCLEAR MASTER FILES.
C
C
C TYPE    : SINGLE PRECISION
C
C
C INPUT   : (I*4) IZ0          = NUCLEAR CHARGE OF REQUIRED ELEMENT
C           (I*4) IOUT         = OUTPUT CHANNEL FOR MESSAGES/ERRORS
C           (R*4) TE           = ELECTRON TEMPERATURE (EV) AT WHICH THE
C                                ADAS COEFFICIENTS ARE REQUIRED
C           (R*4) TI           = ION TEMPERATURE (EV) AT WHICH THE
C                                ADAS COEFFICIENTS ARE REQUIRED
C           (R*4) DENS         = ELECTRON DENSITY (CM-3) AT WHICH THE
C                                ADAS COEFFICIENTS ARE REQUIRED
C           (R*4) DENSH        = HYDROGEN DENSITY (CM-3) AT WHICH THE
C                                ADAS COEFFICIENTS ARE REQUIRED
C           (R*4) FRACTH()     = FRACTH(1) : HYDROGEN  FUEL FRACTION
C                                FRACTH(2) : DEUTERIUM FUEL FRACTION
C                                FRACTH(3) : TRITIUM   FUEL FRACTION
C
C
C OUTPUT  : (R*4) SA0          = NEUTRAL IONIS. RATE COEFFT.(CM3 S-1)
C           (R*4) SA()         = ION IONIS. RATE COEFFT.    (CM3 S-1)
C           (R*4) RTA()        = ION RECOMB. RATE COEFFT.   (CM3 S-1)
C           (R*4) PTA0         = NEUTRAL RADIATED POWER  (WATTS CM3 S-1)
C           (R*4) PTA()        = ION RADIATED POWER      (WATTS CM3 S-1)
C           (I*4) IFAIL        = 0 --- ROUTINE SUCCESSFUL
C                              = 1 --- THE REQUIRED ELEMENT (IZ0) HAS
C                                      NOT BEEN EXTRACTED FROM THE ADAS
C                                      'ISONUCLEAR MASTER FILES'
C                              = 2 --- FRACTH(1)+...+FRACTH(MHYD) IS
C                                      NOT A REAL NUMBER.
C
C
C COMMON  : (I*4) ITDIM        = MAX. NUMBER OF TEMPERATURES   ALLOWED
C           (I*4) IDDIM        = MAX. NUMBER OF DENSITIES      ALLOWED
C           (I*4) IZDIM        = MAX. NUMBER OF CHARGED STATES ALLOWED
C           (I*4) ISDIM        = MAX. NUMBER OF SPECIES        ALLOWED
C           (I*4) IPDIM        = MAX. NUMBER OF ADAS FILES     ALLOWED
C
C
C PROGRAM : (I*4) MHYD         = NUMBER OF HYDROGEN ISOTOPES
C           (I*4) IS           = INDEX OF ELEMENT STORED IN /CADAS2/
C           (R*4) FSUM         = SUM OF HYDROGEN ISOTOPIC FRACTIONS
C           (R*4) HMADAS       = HYDROGEN ISOTOPE USED IN MASTER CX FILE
C                                (1=PROTIUM, 2=DEUTERIUM, 3=TRITIUM)
C           (C*8) STRING       = WORK STRING
C
C
C NOTES   : (1) THE HYDROGEN ISOTOPIC FRACTIONS ARE NORMALISED FOR
C               THE CODE IN CASE THEY ARE NOT ON INPUT.
C           (2) THE ARRAY STACKING IS UNUSUAL!
C               FOR RA, CA, PRB, PRC DATA IS STORED AS FOLLOWS:
C                RECOMBINING ION CHARGE   RECOMBINED ION CHARGE  INDEX
C                ----------------------   ---------------------  -----
C                     1                       0 (NEUTRAL)          1
C                     IZ                      IZ-1                 IZ
C                     IZ0 (BARE NUCLEUS)      IZ0-1                IZ0
C
C               FOR SA, PLT, PLS DATA IS STORED AS FOLLOWS:
C                IONISING  ION  CHARGE    IONISED  ION  CHARGE   INDEX
C                ----------------------   ---------------------  -----
C                     0 (NEUTRAL)             1                 SEPARATE
C                     IZ                      IZ+1                 IZ
C                     IZ0-1                   IZ0 (BARE NUCLEUS)   IZ0-1
C
C
C               THIS IS DIFFERENT FROM THE CONVENTIONS ACCORDING TO
C               ADF12 IN THE ADAS MASTER FILES.
C
C AUTHOR  : JAMES SPENCE  (K1/0/80)  EXT. 4866
C           JET
C
C
C DATE    : 25/07/91
C
C
C CHANGES : 31/07/91, H.P.SUMMERS - PROVIDE HYDROGEN ISOTOPE MASS USED
C                                   IN ADAS MASTER CX FILE PRODUCTION
C                                   IN INTEGER VARIABLE 'MH'.
C                                   CHANGE CX INTERPOLATION TO OBTAIN
C                                   COLL-RAD DEPENDENCE AT TE/NE AND
C                                   SCALE TO TI AT NE=0
C
C
C-----------------------------------------------------------------------
C
C
      PARAMETER( ITDIM=55 , IDDIM=30 , IZDIM=28 , ISDIM=5 , IPDIM=7 )
      COMMON / CADAS2 / ZRAL  (ITDIM,IDDIM,IZDIM,ISDIM)
     R                , ZCAL  (ITDIM,IDDIM,IZDIM,ISDIM)
     R                , ZSAL  (ITDIM,IDDIM,IZDIM,ISDIM)
     R                , ZPLTL (ITDIM,IDDIM,IZDIM,ISDIM)
     R                , ZPLSL (ITDIM,IDDIM,IZDIM,ISDIM)
     R                , ZPRBL (ITDIM,IDDIM,IZDIM,ISDIM)
     R                , ZPRCL (ITDIM,IDDIM,IZDIM,ISDIM)
     R                , ZSAL0 (ITDIM,IDDIM,ISDIM)
     R                , ZPLTL0(ITDIM,IDDIM,ISDIM)
     R                , ZPLSL0(ITDIM,IDDIM,ISDIM)
     R                , ZTEL(ITDIM,IPDIM,ISDIM)
     R                , ZNEL(IDDIM,IPDIM,ISDIM)
     I                , ITMAX(IPDIM,ISDIM)        , IDMAX(IPDIM,ISDIM)
     I                , IZ0A(ISDIM)               , ISMAX
     C                , ZLINFO(IZDIM,IPDIM,ISDIM)
      CHARACTER ZLINFO*8     , STRING*8
C
      PARAMETER( MHYD=3 )
      DIMENSION FRACTH(MHYD) , HMASAU(MHYD)
      DIMENSION SA(IZDIM)    , RTA(IZDIM)   , PTA(IZDIM)
C
C-----------------------------------------------------------------------
C
      DIMENSION ITE(IPDIM) , INE(IPDIM)
      DIMENSION ZINT(IPDIM), ZINT1(IPDIM)
C
      DIMENSION CXC(IZDIM), PROCXC(IZDIM)
      DIMENSION CA(IZDIM) , PLT(IZDIM), PRB(IZDIM), PLS(IZDIM)
      DIMENSION PRC(IZDIM), RA(IZDIM)
C
C-----------------------------------------------------------------------
C
      DATA HMASAU/ 1.007825D+00 , 2.0140D+00 , 3.01605D+00 /
C
C-----CHECK THAT REQUIRED ELEMENT HAS BEEN READ-------------------------
C
      IS        = 0
      DO 2 I    = 1 , ISMAX
         IF( IZ0A(I).EQ.IZ0 ) IS = I
    2 CONTINUE
C
      IF( IS.LE.0 ) THEN
          WRITE(IOUT,9000) IZ0
          IFAIL = 1
          GOTO 9999
      END IF
C
C-----IDENTIFY HYDROGEN ISOTOPE USED IN ADAS CX MASTER FILE PRODUCTION--
C
      STRING   = ZLINFO(1,2,IS)
      READ(STRING,'(4X,F4.2)')HMADAS
C
C-----MEAN HYDROGEN ISOTOPE MASS FOR CHARGE EXCHANGE--------------------
C
      FSUM      = 0.0D+00
      DO 4 JH   = 1 , MHYD
        FSUM    = FSUM + FRACTH(JH)
    4 CONTINUE
C
      IF( FSUM.LE.0.0D+00 ) THEN
          WRITE(IOUT,9010) FSUM
          IFAIL = 2
          GOTO 9999
      END IF
C
      ZAVMAS    = 0.0D+00
      DO 6 JH   = 1 , MHYD
         ZAVMAS = ZAVMAS + FRACTH(JH)*HMASAU(JH)/FSUM
    6 CONTINUE
C
C=======================================================================
C
C  TABLE INTERPOLATION SECTION
C
C       1. RA(IZ)         ---  RADIATIVE + DIELECTRONIC RECOMBINATION
C       2. CA(IZ)         ---  CHARGE EXCHANGE RECOMBINATION
C
C       3. SA0            ---  IONISATION (NEUTRAL)
C          SA(IZ)         ---  IONISATION (NON-NEUTRAL)
C
C       4. PLT0           ---  TOTAL LINE RADIATED POWER (NEUTRAL)
C          PLT(IZ)        ---  TOTAL LINE RADIATED POWER (NON-NEUTRAL)
C
C       5. PRB(IZ)        ---  RAD. + DIEL RECOM. + BREMS. POWER
C       6. PRC(IZ)        ---  CX. RECOM. POWER
C
C       7. PLS0           ---  SPECIFIC LINE POWER     (NEUTRAL)
C          PLS(IZ)        ---  SPECIFIC LINE POWER     (NON-NEUTRAL)
C
C
C       INDEXING:
C                  IZ =  STAGE    (1 .LE. IZ .LE. IZ0 )
C=======================================================================
C-----------------------------------------------------------------------
C     ZERO THE RATES
C-----------------------------------------------------------------------
      SA0   = 0.0E0
      PLT0  = 0.0E0
      PLS0  = 0.0E0
      DO 201 IZ=1,IZ0
       RA(IZ) = 0.0E0
       CA(IZ) = 0.0E0
       SA(IZ) = 0.0E0
       PLT(IZ)= 0.0E0
       PRB(IZ)= 0.0E0
       PRC(IZ)= 0.0E0
       PLS(IZ)= 0.0E0
  201 CONTINUE
C
      IZ01 = IZ0 - 1
C-----------------------------------------------------------------------
C     FIND LOOKUP TABLE POSITIONS FOR ELECTRON TEMP AND DENSITY
C-----------------------------------------------------------------------
       ZTELG = ALOG10(TE)
       CALL SRCHA(ZTELG,ZTEL(1,1,IS),ITDIM,ITMAX(1,IS),ITE)
C
       ZNELG = ALOG10(DENS)
       CALL SRCHA(ZNELG,ZNEL(1,1,IS),IDDIM,IDMAX(1,IS),INE)
C
       DO 50 K=1,IPDIM
        ZINT(K) = (ZTEL(ITE(K),K,IS)-ZTELG) /
     &            (ZTEL(ITE(K),K,IS)-ZTEL(ITE(K)-1,K,IS))
        ZINT1(K) = (ZNEL(INE(K),K,IS)-ZNELG) /
     &             (ZNEL(INE(K),K,IS)-ZNEL(INE(K)-1,K,IS))
   50  CONTINUE
C-------------------------------------
C  INTERPOLATE NEUTRAL STAGE TABLES
C-------------------------------------
C
C----------
C  2*LINEAR
C----------
       ZSL1 = ZSAL0(ITE(3)-1,INE(3)-1,IS)*ZINT(3) +
     &        ZSAL0(ITE(3),INE(3)-1,IS)*(1.0-ZINT(3))
       ZSL2 = ZSAL0(ITE(3)-1,INE(3),IS)*ZINT(3) +
     &        ZSAL0(ITE(3),INE(3),IS)*(1.0-ZINT(3))
       ZSLG = ZSL1 * ZINT1(3) + ZSL2 * (1.0 - ZINT1(3))
       SA0  = 10.0**ZSLG
C
       ZPLT1 = ZPLTL0(ITE(4)-1,INE(4)-1,IS)*ZINT(4) +
     &          ZPLTL0(ITE(4),INE(4)-1,IS)*(1.0-ZINT(4))
       ZPLT2 = ZPLTL0(ITE(4)-1,INE(4),IS)*ZINT(4) +
     &          ZPLTL0(ITE(4),INE(4),IS)*(1.0-ZINT(4))
       ZPLTLG = ZPLT1 * ZINT1(4) + ZPLT2 * (1.0 - ZINT1(4))
       PLT0   = 10.0**ZPLTLG
C
       ZPLS1 = ZPLSL0(ITE(7)-1,INE(7)-1,IS)*ZINT(7) +
     &          ZPLSL0(ITE(7),INE(7)-1,IS)*(1.0-ZINT(7))
       ZPLS2 = ZPLSL0(ITE(7)-1,INE(7),IS)*ZINT(7) +
     &          ZPLSL0(ITE(7),INE(7),IS)*(1.0-ZINT(7))
       ZPLSLG = ZPLS1 * ZINT1(7) + ZPLS2 * (1.0 - ZINT1(7))
       PLS0   = 10.0**ZPLSLG
C-------------------------------------
C  INTERPOLATE ION  STAGE TABLES
C-------------------------------------
C----------
C  2*LINEAR
C----------
      DO 203 IZ=1,IZ01
       ZSL1 = ZSAL(ITE(3)-1,INE(3)-1,IZ,IS)*ZINT(3) +
     &         ZSAL(ITE(3),INE(3)-1,IZ,IS)*(1.0-ZINT(3))
       ZSL2 = ZSAL(ITE(3)-1,INE(3),IZ,IS)*ZINT(3) +
     &         ZSAL(ITE(3),INE(3),IZ,IS)*(1.0-ZINT(3))
       ZSLG = ZSL1 * ZINT1(3) + ZSL2 * (1.0 - ZINT1(3))
       SA(IZ) = 10.0**ZSLG
C
       ZPLT1 = ZPLTL(ITE(4)-1,INE(4)-1,IZ,IS)*ZINT(4) +
     &         ZPLTL(ITE(4),INE(4)-1,IZ,IS)*(1.0-ZINT(4))
       ZPLT2 = ZPLTL(ITE(4)-1,INE(4),IZ,IS)*ZINT(4) +
     &         ZPLTL(ITE(4),INE(4),IZ,IS)*(1.0-ZINT(4))
       ZPLTLG = ZPLT1 * ZINT1(4) + ZPLT2 * (1.0 - ZINT1(4))
       PLT(IZ) = 10.0**ZPLTLG
C
       ZPLS1 = ZPLSL(ITE(7)-1,INE(7)-1,IZ,IS)*ZINT(7) +
     &          ZPLSL(ITE(7),INE(7)-1,IZ,IS)*(1.0-ZINT(7))
       ZPLS2 = ZPLSL(ITE(7)-1,INE(7),IZ,IS)*ZINT(7) +
     &          ZPLSL(ITE(7),INE(7),IZ,IS)*(1.0-ZINT(7))
       ZPLSLG = ZPLS1 * ZINT1(7) + ZPLS2 * (1.0 - ZINT1(7))
       PLS(IZ) = 10.0**ZPLSLG
C
       ZRA1 = ZRAL(ITE(1)-1,INE(1)-1,IZ,IS)*ZINT(1)
     &        + ZRAL(ITE(1),INE(1)-1,IZ,IS)*(1.0-ZINT(1))
       ZRA2 = ZRAL(ITE(1)-1,INE(1),IZ,IS)*ZINT(1)
     &        + ZRAL(ITE(1),INE(1),IZ,IS)*(1.0-ZINT(1))
       ZRLG = ZRA1 * ZINT1(1) + ZRA2 * (1.0 - ZINT1(1))
       RA(IZ) = 10.0**ZRLG
C
       ZPA1 = ZPRBL(ITE(5)-1,INE(5)-1,IZ,IS)*ZINT(5)
     &        + ZPRBL(ITE(5),INE(5)-1,IZ,IS)*(1.0-ZINT(5))
       ZPA2 = ZPRBL(ITE(5)-1,INE(5),IZ,IS)*ZINT(5)
     &        + ZPRBL(ITE(5),INE(5),IZ,IS)*(1.0-ZINT(5))
       ZPRBLG = ZPA1 * ZINT1(5) + ZPA2 * (1.0 - ZINT1(5))
       PRB(IZ) = 10.0**ZPRBLG
C--------------------------------------------------------------
  203 CONTINUE
C-----------------------------------------------------------------------
C  INTERPOLATE LAST STAGE TABLES
C-----------------------------------------------------------------------
         SA(IZ0) = 0.0E0
         PLT(IZ0) = 0.0E0
         PLS(IZ0) = 0.0E0
C
C----------
C  2*LINEAR
C----------
         ZRA1 = ZRAL(ITE(1)-1, INE(1)-1, IZ0, IS) * ZINT(1)
     &          + ZRAL(ITE(1), INE(1)-1, IZ0, IS) * (1.0-ZINT(1))
         ZRA2 = ZRAL(ITE(1)-1, INE(1), IZ0, IS) * ZINT(1)
     &          + ZRAL(ITE(1), INE(1), IZ0, IS) * (1.0-ZINT(1))
         ZRLG = ZRA1 * ZINT1(1) + ZRA2 * (1.0 - ZINT1(1))
         RA(IZ0) = 10.0**ZRLG
C
         ZPA1 = ZPRBL(ITE(5)-1, INE(5)-1, IZ0, IS) * ZINT(5)
     &          + ZPRBL(ITE(5), INE(5)-1, IZ0, IS) * (1.0-ZINT(5))
         ZPA2 = ZPRBL(ITE(5)-1, INE(5), IZ0, IS) * ZINT(5)
     &          + ZPRBL(ITE(5), INE(5), IZ0, IS) * (1.0-ZINT(5))
         ZPRBLG = ZPA1 * ZINT1(5) + ZPA2 * (1.0 - ZINT1(5))
         PRB(IZ0) = 10.0**ZPRBLG
C--------------------------------------------------------------
  204 CONTINUE
C-----------------------------------------------------------------------
C  INTERPOLATE CHARGE EXCHANGE TABLE
C-----------------------------------------------------------------------
      IF ( DENSH .GT. 0.0000) THEN
C--------------------------------------------------
C  SHIFT TI ACCORDING TO MEAN HYDROGEN ISOTOPE MASS
C---------------------------------------------------
         TISH  = TI*HMADAS/ZAVMAS
C---------------------------------------------------------
C  FIND LOOKUP TABLE POSITION FOR ION/NEUTRAL TEMPERATURES
C---------------------------------------------------------
         ZTILG = ALOG10(TISH)
         CALL SRCHB(ZTILG,ZTEL(1,2,IS),ITMAX(2,IS),ITI2)
         CALL SRCHB(ZTILG,ZTEL(1,6,IS),ITMAX(6,IS),ITI6)
C
           ZINTI2=(ZTEL(ITI2,2,IS)-ZTILG) /
     &          (ZTEL(ITI2,2,IS)-ZTEL(ITI2-1,2,IS))
           ZINTI6=(ZTEL(ITI6,6,IS)-ZTILG) /
     &          (ZTEL(ITI6,6,IS)-ZTEL(ITI6-1,6,IS))
C----------------------------
C  1*LINEAR AT TI AND TE AT LOWEST DENSITY
C----------------------------
          DO 215 IZ = 1, IZ0
           ZCAI0= ZCAL(ITI2-1,1,IZ,IS)*ZINTI2
     &            + ZCAL(ITI2,1,IZ,IS)*(1.0-ZINTI2)
           ZCAE0= ZCAL(ITE(2)-1,1,IZ,IS)*ZINT(2)
     &            + ZCAL(ITE(2),1,IZ,IS)*(1.0-ZINT(2))
C
           ZPAI0= ZPRCL(ITI6-1,1,IZ,IS)*ZINTI6
     &            + ZPRCL(ITI6,1,IZ,IS)*(1.0-ZINTI6)
           ZPAE0= ZPRCL(ITE(6)-1,1,IZ,IS)*ZINT(2)
     &            + ZPRCL(ITE(6),1,IZ,IS)*(1.0-ZINT(6))
C---------------------
C  2*LINEAR AT TE/DENS
C---------------------
           ZCA1 = ZCAL(ITE(2)-1,INE(2)-1,IZ,IS)*ZINT(2)
     &            + ZCAL(ITE(2),INE(2)-1,IZ,IS)*(1.0-ZINT(2))
           ZCA2 = ZCAL(ITE(2)-1,INE(2),IZ,IS)*ZINT(2)
     &            + ZCAL(ITE(2),INE(2),IZ,IS)*(1.0-ZINT(2))
           ZCLG = ZCA1 * ZINT1(2) + ZCA2 * (1.0 - ZINT1(2))
C---------------------------------------------------------------------
C  FORM SCALED RESULT & MULTIPLY BY DENSH/DENS FOR COMBINATION WITH RA
C---------------------------------------------------------------------
           ZCLG=10.0**(ZCLG+ZCAI0-ZCAE0)
           CA(IZ)=ZCLG*DENSH/DENS
C
           ZPA1 = ZPRCL(ITE(6)-1,INE(6)-1,IZ,IS)*ZINT(6)
     &            + ZPRCL(ITE(6),INE(6)-1,IZ,IS)*(1.0-ZINT(6))
           ZPA2 = ZPRCL(ITE(6)-1,INE(6),IZ,IS)*ZINT(6)
     &            + ZPRCL(ITE(6),INE(6),IZ,IS)*(1.0-ZINT(6))
           ZPRCLG = ZPA1 * ZINT1(6) + ZPA2 * (1.0 - ZINT1(6))
C---------------------------------------------------------------------
C  FORM SCALED RESULT & MULTIPLY BY DENSH/DENS FOR COMBINATION WITH PRB
C---------------------------------------------------------------------
           ZPRCLG=10.0**(ZPRCLG+ZPAI0-ZPAE0)
           PRC(IZ)=ZPRCLG*DENSH/DENS
 215      CONTINUE
      ENDIF
C------------------------------------
C    COMBINE RA & CA , PLT, PRB & PRC
C------------------------------------
       PTA0=PLT0
       IZ=0
       DO 220 IZ=1,IZ0
           RTA(IZ)=RA(IZ)+CA(IZ)
           PTA(IZ)=PLT(IZ)+PRB(IZ)+PRC(IZ)
  220  CONTINUE
C
C-----------------------------------------------------------------------
C
 9999 RETURN
C
C-----------------------------------------------------------------------
C
 9000 FORMAT( ' *** ERROR *** ELEMENT IZ0=',I2,' HAS NOT BEEN EXTRACTED'
     &      / '               FROM THE ADAS ISONUCLEAR MASTER FILES.'  )
 9010 FORMAT( ' *** ERROR *** HYDROGEN ISOTOPIC FRACTIONS SUM TO '
     &      , 1PE12.4 )
C
C-----------------------------------------------------------------------
C
      END

C
C=======================================================================
      SUBROUTINE ADASITX( IZ0   , IOUT
     I                  , TE    , TI   , DENS , DENSH , FRACTH
     O                  , SA0   , SA   , RTA  , PTA0  , PTA
     O                  , IFAIL
     &                  )
      IMPLICIT REAL*4(A-H,O-Z)
C
C-----------------------------------------------------------------------
C
C
C PURPOSE : TO INTERPOLATE 'ADAS' ISONUCLEAR MASTER FILES AT THE
C           REQUIRED ELECTRON TEMPERATURE, ION TEMPERATURE & ELECTRON
C           DENSITY.  THE REQUIRED ELEMENT MUST ALREADY HAVE BEEN
C           EXTRACTED FROM THE 'ADAS' ISONUCLEAR MASTER FILES.
C
C
C TYPE    : SINGLE PRECISION
C
C
C INPUT   : (I*4) IZ0          = NUCLEAR CHARGE OF REQUIRED ELEMENT
C           (I*4) IOUT         = OUTPUT CHANNEL FOR MESSAGES/ERRORS
C           (R*4) TE           = ELECTRON TEMPERATURE (EV) AT WHICH THE
C                                ADAS COEFFICIENTS ARE REQUIRED
C           (R*4) TI           = ION TEMPERATURE (EV) AT WHICH THE
C                                ADAS COEFFICIENTS ARE REQUIRED
C           (R*4) DENS         = ELECTRON DENSITY (CM-3) AT WHICH THE
C                                ADAS COEFFICIENTS ARE REQUIRED
C           (R*4) DENSH        = HYDROGEN DENSITY (CM-3) AT WHICH THE
C                                ADAS COEFFICIENTS ARE REQUIRED
C           (R*4) FRACTH()     = FRACTH(1) : HYDROGEN  FUEL FRACTION
C                                FRACTH(2) : DEUTERIUM FUEL FRACTION
C                                FRACTH(3) : TRITIUM   FUEL FRACTION
C
C
C OUTPUT  : (R*4) SA0          = NEUTRAL IONIS. RATE COEFFT.(CM3 S-1)
C           (R*4) SA()         = ION IONIS. RATE COEFFT.    (CM3 S-1)
C           (R*4) RTA()        = ION RECOMB. RATE COEFFT.   (CM3 S-1)
C           (R*4) PTA0         = NEUTRAL RADIATED POWER  (WATTS CM3 S-1)
C           (R*4) PTA()        = ION RADIATED POWER      (WATTS CM3 S-1)
C           (I*4) IFAIL        = 0 --- ROUTINE SUCCESSFUL
C                              = 1 --- THE REQUIRED ELEMENT (IZ0) HAS
C                                      NOT BEEN EXTRACTED FROM THE ADAS
C                                      'ISONUCLEAR MASTER FILES'
C                              = 2 --- FRACTH(1)+...+FRACTH(MHYD) IS
C                                      NOT A REAL NUMBER.
C
C
C COMMON  : (I*4) ITDIM        = MAX. NUMBER OF TEMPERATURES   ALLOWED
C           (I*4) IDDIM        = MAX. NUMBER OF DENSITIES      ALLOWED
C           (I*4) IZDIM        = MAX. NUMBER OF CHARGED STATES ALLOWED
C           (I*4) ISDIM        = MAX. NUMBER OF SPECIES        ALLOWED
C           (I*4) IPDIM        = MAX. NUMBER OF ADAS FILES     ALLOWED
C
C
C PROGRAM : (I*4) MHYD         = NUMBER OF HYDROGEN ISOTOPES
C           (I*4) IS           = INDEX OF ELEMENT STORED IN /CADAS2/
C           (R*4) FSUM         = SUM OF HYDROGEN ISOTOPIC FRACTIONS
C           (R*4) HMADAS       = HYDROGEN ISOTOPE USED IN MASTER CX FILE
C                                (1=PROTIUM, 2=DEUTERIUM, 3=TRITIUM)
C           (C*8) STRING       = WORK STRING
C
C
C NOTES   : (1) THE HYDROGEN ISOTOPIC FRACTIONS ARE NORMALISED FOR
C               THE CODE IN CASE THEY ARE NOT ON INPUT.
C           (2) THE ARRAY STACKING IS UNUSUAL!
C               FOR RA, CA, PRB, PRC DATA IS STORED AS FOLLOWS:
C                RECOMBINING ION CHARGE   RECOMBINED ION CHARGE  INDEX
C                ----------------------   ---------------------  -----
C                     1                       0 (NEUTRAL)          1
C                     IZ                      IZ-1                 IZ
C                     IZ0 (BARE NUCLEUS)      IZ0-1                IZ0
C
C               FOR SA, PLT, PLS DATA IS STORED AS FOLLOWS:
C                IONISING  ION  CHARGE    IONISED  ION  CHARGE   INDEX
C                ----------------------   ---------------------  -----
C                     0 (NEUTRAL)             1                 SEPARATE
C                     IZ                      IZ+1                 IZ
C                     IZ0-1                   IZ0 (BARE NUCLEUS)   IZ0-1
C
C
C               THIS IS DIFFERENT FROM THE CONVENTIONS ACCORDING TO
C               ADF12 IN THE ADAS MASTER FILES.
C
C AUTHOR  : JAMES SPENCE  (K1/0/80)  EXT. 4866
C           JET
C
C
C DATE    : 25/07/91
C
C
C CHANGES : 31/07/91, H.P.SUMMERS - PROVIDE HYDROGEN ISOTOPE MASS USED
C                                   IN ADAS MASTER CX FILE PRODUCTION
C                                   IN INTEGER VARIABLE 'MH'.
C                                   CHANGE CX INTERPOLATION TO OBTAIN
C                                   COLL-RAD DEPENDENCE AT TE/NE AND
C                                   SCALE TO TI AT NE=0
C            5/08/91, H.P.SUMMERS - ADD IONISATION  POTENTIAL ENERGY
C                                   PART TO THE POWER TO MATCH SIMONINI
C                                   USE - REMOVE LATER AS NOT PHYSICAL !
C
C
C-----------------------------------------------------------------------
C
C
      PARAMETER( ITDIM=55 , IDDIM=30 , IZDIM=28 , ISDIM=5 , IPDIM=7 )
      COMMON / CADAS2 / ZRAL  (ITDIM,IDDIM,IZDIM,ISDIM)
     R                , ZCAL  (ITDIM,IDDIM,IZDIM,ISDIM)
     R                , ZSAL  (ITDIM,IDDIM,IZDIM,ISDIM)
     R                , ZPLTL (ITDIM,IDDIM,IZDIM,ISDIM)
     R                , ZPLSL (ITDIM,IDDIM,IZDIM,ISDIM)
     R                , ZPRBL (ITDIM,IDDIM,IZDIM,ISDIM)
     R                , ZPRCL (ITDIM,IDDIM,IZDIM,ISDIM)
     R                , ZSAL0 (ITDIM,IDDIM,ISDIM)
     R                , ZPLTL0(ITDIM,IDDIM,ISDIM)
     R                , ZPLSL0(ITDIM,IDDIM,ISDIM)
     R                , ZTEL(ITDIM,IPDIM,ISDIM)
     R                , ZNEL(IDDIM,IPDIM,ISDIM)
     I                , ITMAX(IPDIM,ISDIM)        , IDMAX(IPDIM,ISDIM)
     I                , IZ0A(ISDIM)               , ISMAX
     C                , ZLINFO(IZDIM,IPDIM,ISDIM)
      CHARACTER ZLINFO*8     , STRING*8
C
      PARAMETER( MHYD=3 )
      DIMENSION FRACTH(MHYD) , HMASAU(MHYD)
      DIMENSION SA(IZDIM)    , RTA(IZDIM)   , PTA(IZDIM)
C
C-----------------------------------------------------------------------
C
      DIMENSION ITE(IPDIM) , INE(IPDIM)
      DIMENSION ZINT(IPDIM), ZINT1(IPDIM)
C
      DIMENSION CXC(IZDIM), PROCXC(IZDIM)
      DIMENSION CA(IZDIM) , PLT(IZDIM), PRB(IZDIM), PLS(IZDIM)
      DIMENSION PRC(IZDIM), RA(IZDIM) , PIA(IZDIM)
C
      DIMENSION BWNOA(55)
C
C-----------------------------------------------------------------------
C
      DATA HMASAU/ 1.007825D+00 , 2.0140D+00 , 3.01605D+00 /
C
C-----------------------------------------------------------------------
C
      DATA BWNOA /   109679. ,
     &               198311. ,   438909. ,
     &                43487. ,   610079. ,   987661. ,
     &                75192. ,   146883. ,  1241242. ,  1756019. ,
     &                66928. ,   202887. ,   305931. ,  2092001. ,
     &              2744108. ,
     &                90820. ,   196645. ,   386241. ,   520178. ,
     &              3162395. ,  3952062. ,
     &               117225. ,   238751. ,   382704. ,   624866. ,
     &               789537. ,  4452745. ,  5380089. ,
     &               109837. ,   283240. ,   443086. ,   624384. ,
     &               918657. ,  1114008. ,  5963114. ,  7026394. ,
     &               140525. ,   282059. ,   505777. ,   702830. ,
     &               921430. ,  1267622. ,  1493629. ,  7693780. ,
     &              8897240. ,
     &               173932. ,   330391. ,   511800. ,   783300. ,
     &              1018000. ,  1273800. ,  1671792. ,  1928462. ,
     &              9644960. , 10986873. /
C
C-----CHECK THAT REQUIRED ELEMENT HAS BEEN READ-------------------------
C
      IS        = 0
      DO 2 I    = 1 , ISMAX
         IF( IZ0A(I).EQ.IZ0 ) IS = I
    2 CONTINUE
C
      IF( IS.LE.0 ) THEN
          WRITE(IOUT,9000) IZ0
          IFAIL = 1
          GOTO 9999
      END IF
C
C-----IDENTIFY HYDROGEN ISOTOPE USED IN ADAS CX MASTER FILE PRODUCTION--
C
      STRING   = ZLINFO(1,2,IS)
      READ(STRING,'(4X,F4.2)')HMADAS
C
C-----MEAN HYDROGEN ISOTOPE MASS FOR CHARGE EXCHANGE--------------------
C
      FSUM      = 0.0D+00
      DO 4 JH   = 1 , MHYD
        FSUM    = FSUM + FRACTH(JH)
    4 CONTINUE
C
      IF( FSUM.LE.0.0D+00 ) THEN
          WRITE(IOUT,9010) FSUM
          IFAIL = 2
          GOTO 9999
      END IF
C
      ZAVMAS    = 0.0D+00
      DO 6 JH   = 1 , MHYD
         ZAVMAS = ZAVMAS + FRACTH(JH)*HMASAU(JH)/FSUM
    6 CONTINUE
C
C=======================================================================
C
C  TABLE INTERPOLATION SECTION
C
C       1. RA(IZ)         ---  RADIATIVE + DIELECTRONIC RECOMBINATION
C       2. CA(IZ)         ---  CHARGE EXCHANGE RECOMBINATION
C
C       3. SA0            ---  IONISATION (NEUTRAL)
C          SA(IZ)         ---  IONISATION (NON-NEUTRAL)
C
C       4. PLT0           ---  TOTAL LINE RADIATED POWER (NEUTRAL)
C          PLT(IZ)        ---  TOTAL LINE RADIATED POWER (NON-NEUTRAL)
C
C       5. PRB(IZ)        ---  RAD. + DIEL RECOM. + BREMS. POWER
C       6. PRC(IZ)        ---  CX. RECOM. POWER
C
C       7. PLS0           ---  SPECIFIC LINE POWER     (NEUTRAL)
C          PLS(IZ)        ---  SPECIFIC LINE POWER     (NON-NEUTRAL)
C
C
C       INDEXING:
C                  IZ =  STAGE    (1 .LE. IZ .LE. IZ0 )
C=======================================================================
C-----------------------------------------------------------------------
C     ZERO THE RATES
C-----------------------------------------------------------------------
      SA0   = 0.0E0
      PLT0  = 0.0E0
      PLS0  = 0.0E0
      DO 201 IZ=1,IZ0
       RA(IZ) = 0.0E0
       CA(IZ) = 0.0E0
       SA(IZ) = 0.0E0
       PLT(IZ)= 0.0E0
       PRB(IZ)= 0.0E0
       PRC(IZ)= 0.0E0
       PLS(IZ)= 0.0E0
  201 CONTINUE
C
      IZ01 = IZ0 - 1
C-----------------------------------------------------------------------
C     FIND LOOKUP TABLE POSITIONS FOR ELECTRON TEMP AND DENSITY
C-----------------------------------------------------------------------
       ZTELG = ALOG10(TE)
       CALL SRCHA(ZTELG,ZTEL(1,1,IS),ITDIM,ITMAX(1,IS),ITE)
C
       ZNELG = ALOG10(DENS)
       CALL SRCHA(ZNELG,ZNEL(1,1,IS),IDDIM,IDMAX(1,IS),INE)
C
       DO 50 K=1,IPDIM
        ZINT(K) = (ZTEL(ITE(K),K,IS)-ZTELG) /
     &            (ZTEL(ITE(K),K,IS)-ZTEL(ITE(K)-1,K,IS))
        ZINT1(K) = (ZNEL(INE(K),K,IS)-ZNELG) /
     &             (ZNEL(INE(K),K,IS)-ZNEL(INE(K)-1,K,IS))
   50  CONTINUE
C-------------------------------------
C  INTERPOLATE NEUTRAL STAGE TABLES
C-------------------------------------
C
C----------
C  2*LINEAR
C----------
       ZSL1 = ZSAL0(ITE(3)-1,INE(3)-1,IS)*ZINT(3) +
     &        ZSAL0(ITE(3),INE(3)-1,IS)*(1.0-ZINT(3))
       ZSL2 = ZSAL0(ITE(3)-1,INE(3),IS)*ZINT(3) +
     &        ZSAL0(ITE(3),INE(3),IS)*(1.0-ZINT(3))
       ZSLG = ZSL1 * ZINT1(3) + ZSL2 * (1.0 - ZINT1(3))
       SA0  = 10.0**ZSLG
C
       ZPLT1 = ZPLTL0(ITE(4)-1,INE(4)-1,IS)*ZINT(4) +
     &          ZPLTL0(ITE(4),INE(4)-1,IS)*(1.0-ZINT(4))
       ZPLT2 = ZPLTL0(ITE(4)-1,INE(4),IS)*ZINT(4) +
     &          ZPLTL0(ITE(4),INE(4),IS)*(1.0-ZINT(4))
       ZPLTLG = ZPLT1 * ZINT1(4) + ZPLT2 * (1.0 - ZINT1(4))
       PLT0   = 10.0**ZPLTLG
C
       ZPLS1 = ZPLSL0(ITE(7)-1,INE(7)-1,IS)*ZINT(7) +
     &          ZPLSL0(ITE(7),INE(7)-1,IS)*(1.0-ZINT(7))
       ZPLS2 = ZPLSL0(ITE(7)-1,INE(7),IS)*ZINT(7) +
     &          ZPLSL0(ITE(7),INE(7),IS)*(1.0-ZINT(7))
       ZPLSLG = ZPLS1 * ZINT1(7) + ZPLS2 * (1.0 - ZINT1(7))
       PLS0   = 10.0**ZPLSLG
C-------------------------------------
C  INTERPOLATE ION  STAGE TABLES
C-------------------------------------
C----------
C  2*LINEAR
C----------
      DO 203 IZ=1,IZ01
       ZSL1 = ZSAL(ITE(3)-1,INE(3)-1,IZ,IS)*ZINT(3) +
     &         ZSAL(ITE(3),INE(3)-1,IZ,IS)*(1.0-ZINT(3))
       ZSL2 = ZSAL(ITE(3)-1,INE(3),IZ,IS)*ZINT(3) +
     &         ZSAL(ITE(3),INE(3),IZ,IS)*(1.0-ZINT(3))
       ZSLG = ZSL1 * ZINT1(3) + ZSL2 * (1.0 - ZINT1(3))
       SA(IZ) = 10.0**ZSLG
C
       ZPLT1 = ZPLTL(ITE(4)-1,INE(4)-1,IZ,IS)*ZINT(4) +
     &         ZPLTL(ITE(4),INE(4)-1,IZ,IS)*(1.0-ZINT(4))
       ZPLT2 = ZPLTL(ITE(4)-1,INE(4),IZ,IS)*ZINT(4) +
     &         ZPLTL(ITE(4),INE(4),IZ,IS)*(1.0-ZINT(4))
       ZPLTLG = ZPLT1 * ZINT1(4) + ZPLT2 * (1.0 - ZINT1(4))
       PLT(IZ) = 10.0**ZPLTLG
C
       ZPLS1 = ZPLSL(ITE(7)-1,INE(7)-1,IZ,IS)*ZINT(7) +
     &          ZPLSL(ITE(7),INE(7)-1,IZ,IS)*(1.0-ZINT(7))
       ZPLS2 = ZPLSL(ITE(7)-1,INE(7),IZ,IS)*ZINT(7) +
     &          ZPLSL(ITE(7),INE(7),IZ,IS)*(1.0-ZINT(7))
       ZPLSLG = ZPLS1 * ZINT1(7) + ZPLS2 * (1.0 - ZINT1(7))
       PLS(IZ) = 10.0**ZPLSLG
C
       ZRA1 = ZRAL(ITE(1)-1,INE(1)-1,IZ,IS)*ZINT(1)
     &        + ZRAL(ITE(1),INE(1)-1,IZ,IS)*(1.0-ZINT(1))
       ZRA2 = ZRAL(ITE(1)-1,INE(1),IZ,IS)*ZINT(1)
     &        + ZRAL(ITE(1),INE(1),IZ,IS)*(1.0-ZINT(1))
       ZRLG = ZRA1 * ZINT1(1) + ZRA2 * (1.0 - ZINT1(1))
       RA(IZ) = 10.0**ZRLG
C
       ZPA1 = ZPRBL(ITE(5)-1,INE(5)-1,IZ,IS)*ZINT(5)
     &        + ZPRBL(ITE(5),INE(5)-1,IZ,IS)*(1.0-ZINT(5))
       ZPA2 = ZPRBL(ITE(5)-1,INE(5),IZ,IS)*ZINT(5)
     &        + ZPRBL(ITE(5),INE(5),IZ,IS)*(1.0-ZINT(5))
       ZPRBLG = ZPA1 * ZINT1(5) + ZPA2 * (1.0 - ZINT1(5))
       PRB(IZ) = 10.0**ZPRBLG
C--------------------------------------------------------------
  203 CONTINUE
C-----------------------------------------------------------------------
C  INTERPOLATE LAST STAGE TABLES
C-----------------------------------------------------------------------
         SA(IZ0) = 0.0E0
         PLT(IZ0) = 0.0E0
         PLS(IZ0) = 0.0E0
C
C----------
C  2*LINEAR
C----------
         ZRA1 = ZRAL(ITE(1)-1, INE(1)-1, IZ0, IS) * ZINT(1)
     &          + ZRAL(ITE(1), INE(1)-1, IZ0, IS) * (1.0-ZINT(1))
         ZRA2 = ZRAL(ITE(1)-1, INE(1), IZ0, IS) * ZINT(1)
     &          + ZRAL(ITE(1), INE(1), IZ0, IS) * (1.0-ZINT(1))
         ZRLG = ZRA1 * ZINT1(1) + ZRA2 * (1.0 - ZINT1(1))
         RA(IZ0) = 10.0**ZRLG
C
         ZPA1 = ZPRBL(ITE(5)-1, INE(5)-1, IZ0, IS) * ZINT(5)
     &          + ZPRBL(ITE(5), INE(5)-1, IZ0, IS) * (1.0-ZINT(5))
         ZPA2 = ZPRBL(ITE(5)-1, INE(5), IZ0, IS) * ZINT(5)
     &          + ZPRBL(ITE(5), INE(5), IZ0, IS) * (1.0-ZINT(5))
         ZPRBLG = ZPA1 * ZINT1(5) + ZPA2 * (1.0 - ZINT1(5))
         PRB(IZ0) = 10.0**ZPRBLG
C--------------------------------------------------------------
  204 CONTINUE
C-----------------------------------------------------------------------
C  INTERPOLATE CHARGE EXCHANGE TABLE
C-----------------------------------------------------------------------
      IF ( DENSH .GT. 0.0000) THEN
C--------------------------------------------------
C  SHIFT TI ACCORDING TO MEAN HYDROGEN ISOTOPE MASS
C---------------------------------------------------
         TISH  = TI*HMADAS/ZAVMAS
C---------------------------------------------------------
C  FIND LOOKUP TABLE POSITION FOR ION/NEUTRAL TEMPERATURES
C---------------------------------------------------------
         ZTILG = ALOG10(TISH)
         CALL SRCHB(ZTILG,ZTEL(1,2,IS),ITMAX(2,IS),ITI2)
         CALL SRCHB(ZTILG,ZTEL(1,6,IS),ITMAX(6,IS),ITI6)
C
           ZINTI2=(ZTEL(ITI2,2,IS)-ZTILG) /
     &          (ZTEL(ITI2,2,IS)-ZTEL(ITI2-1,2,IS))
           ZINTI6=(ZTEL(ITI6,6,IS)-ZTILG) /
     &          (ZTEL(ITI6,6,IS)-ZTEL(ITI6-1,6,IS))
C----------------------------
C  1*LINEAR AT TI AND TE AT LOWEST DENSITY
C----------------------------
          DO 215 IZ = 1, IZ0
           ZCAI0= ZCAL(ITI2-1,1,IZ,IS)*ZINTI2
     &            + ZCAL(ITI2,1,IZ,IS)*(1.0-ZINTI2)
           ZCAE0= ZCAL(ITE(2)-1,1,IZ,IS)*ZINT(2)
     &            + ZCAL(ITE(2),1,IZ,IS)*(1.0-ZINT(2))
C
           ZPAI0= ZPRCL(ITI6-1,1,IZ,IS)*ZINTI6
     &            + ZPRCL(ITI6,1,IZ,IS)*(1.0-ZINTI6)
           ZPAE0= ZPRCL(ITE(6)-1,1,IZ,IS)*ZINT(2)
     &            + ZPRCL(ITE(6),1,IZ,IS)*(1.0-ZINT(6))
C---------------------
C  2*LINEAR AT TE/DENS
C---------------------
           ZCA1 = ZCAL(ITE(2)-1,INE(2)-1,IZ,IS)*ZINT(2)
     &            + ZCAL(ITE(2),INE(2)-1,IZ,IS)*(1.0-ZINT(2))
           ZCA2 = ZCAL(ITE(2)-1,INE(2),IZ,IS)*ZINT(2)
     &            + ZCAL(ITE(2),INE(2),IZ,IS)*(1.0-ZINT(2))
           ZCLG = ZCA1 * ZINT1(2) + ZCA2 * (1.0 - ZINT1(2))
C---------------------------------------------------------------------
C  FORM SCALED RESULT & MULTIPLY BY DENSH/DENS FOR COMBINATION WITH RA
C---------------------------------------------------------------------
           ZCLG=10.0**(ZCLG+ZCAI0-ZCAE0)
           CA(IZ)=ZCLG*DENSH/DENS
C
           ZPA1 = ZPRCL(ITE(6)-1,INE(6)-1,IZ,IS)*ZINT(6)
     &            + ZPRCL(ITE(6),INE(6)-1,IZ,IS)*(1.0-ZINT(6))
           ZPA2 = ZPRCL(ITE(6)-1,INE(6),IZ,IS)*ZINT(6)
     &            + ZPRCL(ITE(6),INE(6),IZ,IS)*(1.0-ZINT(6))
           ZPRCLG = ZPA1 * ZINT1(6) + ZPA2 * (1.0 - ZINT1(6))
C---------------------------------------------------------------------
C  FORM SCALED RESULT & MULTIPLY BY DENSH/DENS FOR COMBINATION WITH PRB
C---------------------------------------------------------------------
           ZPRCLG=10.0**(ZPRCLG+ZPAI0-ZPAE0)
           PRC(IZ)=ZPRCLG*DENSH/DENS
 215      CONTINUE
      ENDIF
C------------------------------------
C    COMBINE RA & CA , PLT, PRB & PRC
C------------------------------------
       IXP=(IZ0*(IZ0-1))/2+1
C
       IF(IZ0.LE.10) THEN
           PIA0=BWNOA(IXP)*1.98618E-23*SA0
       ELSE
           PIA0=0.0
       ENDIF
C
       PTA0=PLT0+PIA0
       IZ=0
       DO 220 IZ=1,IZ0
           IF(IZ.LT.IZ0.AND.IZ0.LE.10) THEN
               PIA(IZ)=BWNOA(IXP+IZ)*1.98618E-23*SA(IZ)
           ELSE
               PIA(IZ)=0.0
           ENDIF
C
           RTA(IZ)=RA(IZ)+CA(IZ)
           PTA(IZ)=PLT(IZ)+PRB(IZ)+PRC(IZ)+PIA(IZ)
  220  CONTINUE
C
C-----------------------------------------------------------------------
C
 9999 RETURN
C
C-----------------------------------------------------------------------
C
 9000 FORMAT( ' *** ERROR *** ELEMENT IZ0=',I2,' HAS NOT BEEN EXTRACTED'
     &      / '               FROM THE ADAS ISONUCLEAR MASTER FILES.'  )
 9010 FORMAT( ' *** ERROR *** HYDROGEN ISOTOPIC FRACTIONS SUM TO '
     &      , 1PE12.4 )
C
C-----------------------------------------------------------------------
C
      END
C
C=======================================================================
       SUBROUTINE ADASR1(  ICHAN , IPOINT , IZ0    , IS
     I                   , ITDIM , IDDIM  , IZDIM  , ISDIM  , IPDIM
     O                   , ITMAX , IDMAX  , IZ0MAX
     O                   , TEMPE , DENSE  , ZDATA  , ZLINFO
     O                   , IFAIL
     &                   )
       IMPLICIT REAL*4(A-H,O-Z)
C
C-----------------------------------------------------------------------
C
C PURPOSE : TO READ 'ADAS' ELEMENT MASTER FILES FORMATTED ACCORDING TO
C           ADAS DATA FORMAT 'ADF01'.  NO SEPARATION OF THE NEUTRAL
C           IONISATION STAGE DATA INTO SPECIAL ARRAYS IS DONE.
C
C           THE DATA RETURNED IS IN THE FORM :-
C
C                        ZDATA( IT , ID , IZ , IS )
C           WITH
C
C                        TEMPE(IT,IPOINT,IS)
C                        DENSE(IT,IPOINT,IS)
C           WHERE,
C                  IT       =  TEMPERATURE INDEX ( 1 - ITMAX  )
C                  ID       =  DENSITY     INDEX ( 1 - IDMAX  )
C                  IZ       =  ION. STAGE  INDEX ( 1 - IZ0MAX )
C                  IS       =  SPECIES     INDEX ( 1 - ISDIM  )
C                  IPOINT   =  DATA TYPE   INDEX ( 1 - IPDIM  )
C                  TEMPE(,,)=  LOG10(ELEC. TEMPERATURE)(EV)
C                  DENSE(,) =  LOG10(ELEC. DENSITY)    (CM**3)
C
C
C TYPE    : SINGLE PRECISION
C
C INPUT   : (I*4)  ICHAN    =  STREAM NUMBER (PREVIOUSLY ALLOCATED)
C           (I*4)  IPOINT   =  DATA TYPE POINTER FOR ARRAY STACKING
C           (I*4)  ITDIM    =  ARRAY DIMENSION LIMIT FOR ITMAX
C           (I*4)  IDDIM    =  ARRAY DIMENSION LIMIT FOR IDMAX
C           (I*4)  IZDIM    =  ARRAY DIMENSION LIMIT FOR IZ0MAX
C           (I*4)  ISDIM    =  ARRAY DIMENSION LIMIT FOR ISMAX
C           (I*4)  IPDIM    =  ARRAY DIMENSION LIMIT FOR IPOINT
C           (I*4)  IZ0      =  NUCLEAR CHARGE OF SPECIES
C
C OUTPUT  : (I*4)  ITMAX(,) =  NUMBER OF TEMPERATURES FOR IPOINT
C           (I*4)  IDMAX(,) =  NUMBER OF DENSITIES FOR IPOINT
C           (I*4)  IZ0MAX   =  NUMBER OF CHARGED STATES (MUST EQUAL IZ0)
C           (R*4)  TEMPE(,,)=  LOG10(ELECTRON TEMPERATURES)
C           (R*4)  DENSE(,,)=  LOG10(ELECTRON DENSITIES)
C           (R*4)  ZDATA(,,,)= RETURNED COEFFICIENT ARRAY (SEE ABOVE)
C                              (LOG10 VALUES)
C           (C*8)  ZLINFO(,,)= TEXT INFORMATION FOR EACH ION AND DATA
C                              TYPE.  USED FOR WAVELENGTH OF SPECIFIC
C                              LINE AND HYDROGEN MASS FOR CX DATA
C                              ONLY AT THIS STAGE
C           (I*4)  IFAIL    =  0 --- IF ROUTINE SUCCESSFUL
C                           =  1 --- MISMATCH OF NUCLEAR CHARGES
C                           =  2 --- ITDIM SET TOO LOW
C                           =  3 --- IDDIM SET TOO LOW
C
C NOTE    : THE ROUTINE ABORTS IF IZ0 DOES NOT MATCH THE NUCLEAR CHARGE,
C           IZ0MAX, AND NUMBER OF STAGES,IZMAX, READ FROM THE ADAS FILE.
C
C AUTHOR  : JAMES SPENCE  (K1/0/80)  EXT. 4866
C           JET
C
C DATE    : 23/03/90
C
C
C CHANGES : 12/12/90, H.P.SUMMERS - PUT ADAS DATA FORM CODE IN POSITIONS
C                                   76-80 OF FIRST LINE OF OUTPUT FILES.
C                                   CODE IS 'ADF01'.
C
C           20/ 2/91, H.P.SUMMERS - ADD ZLINFO
C           20/ 2/91, H.P.SUMMERS - ADD IPOINT
C           23/07/91, J.SPENCE    - REMOVE WRITE OPTION & 'SANC0' STUFF.
C           25/07/91, J.SPENCE    - ALLOW MULTIPLE SPECIES
C
C-----------------------------------------------------------------------
C
       DIMENSION ZDATA( ITDIM , IDDIM , IZDIM , ISDIM )
     R         , TEMPE( ITDIM , IPDIM , ISDIM )
     R         , DENSE( IDDIM , IPDIM , ISDIM )
     I         , ITMAX( IPDIM , ISDIM )
     I         , IDMAX( IPDIM , ISDIM )
     C         , ZLINFO( IZDIM , IPDIM , ISDIM )
C
C-----------------------------------------------------------------------
C
       CHARACTER*(*) ZLINFO
       CHARACTER*80  STRING
C
C-----------------------------------------------------------------------
C
C
       IFAIL = 0
C
C-----------------------------------------------------------------------
C
       READ(ICHAN,1600) IZADAS , IDMAX(IPOINT,IS) , ITMAX(IPOINT,IS) ,
     &                  IDUMMY , IZ0MAX
C
       IF( ITDIM.LT.ITMAX(IPOINT,IS) ) THEN
         IFAIL=2
         RETURN
       ENDIF
C
       IF( IDDIM.LT.IDMAX(IPOINT,IS) ) THEN
         IFAIL=3
         RETURN
       ENDIF
C
       IF( IZ0.EQ.IZADAS.AND.IZ0.EQ.IZ0MAX ) THEN
C
         READ(ICHAN,1000) STRING
C
         READ(ICHAN,1200) ( DENSE(ID,IPOINT,IS),ID=1,IDMAX(IPOINT,IS))
C
         READ(ICHAN,1200) ( TEMPE(IT,IPOINT,IS),IT=1,ITMAX(IPOINT,IS))
C
         DO 300 IZ = 1 , IZ0MAX
           READ(ICHAN,1800)  ZLINFO(IZ,IPOINT,IS)
           DO 300 IT = 1 , ITMAX(IPOINT,IS)
             READ(ICHAN,1400)(ZDATA(IT,ID,IZ,IS),ID=1,IDMAX(IPOINT,IS))
  300    CONTINUE
C
       ELSE
C
         IFAIL = 1
C
       END IF
C
       RETURN
C
C-----------------------------------------------------------------------
C
 1000  FORMAT( A )
 1200  FORMAT( 8(1X , F9.5) )
 1400  FORMAT( 8F10.5 )
 1600  FORMAT( 5I5 )
 1800  FORMAT( 44X , A )
C
C-----------------------------------------------------------------------
C
       END
C
C=======================================================================
       SUBROUTINE ADASR2(  ICHAN , IPOINT , IZ0    , IS
     I                   , ITDIM , IDDIM  , IZDIM  , ISDIM , IPDIM
     O                   , ITMAX , IDMAX  , IZ0MAX
     O                   , TEMPE , DENSE  , ZDATA0 , ZDATA , ZLINFO
     &                   , IFAIL
     &                   )
       IMPLICIT REAL*4(A-H,O-Z)
C
C-----------------------------------------------------------------------
C
C PURPOSE : TO READ 'ADAS' ELEMENT MASTER FILES FORMATTED ACCORDING TO
C           ADAS DATA FORMAT 'ADF01'.  SEPARATION OF THE NEUTRAL
C           IONISATION STAGE DATA INTO SPECIAL ARRAYS IS DONE
C
C           THE DATA RETURNED IS IN THE FORM :-
C
C                        ZDATA0( IT , ID ,IS )
C           AND
C                        ZDATA( IT , ID , IZ-1 , IS )
C           WITH
C
C                        TEMPE(IT,IPOINT,IS)
C                        DENSE(IT,IPOINT,IS)
C           WHERE,
C                  IT       =  TEMPERATURE INDEX ( 1 - ITMAX  )
C                  ID       =  DENSITY     INDEX ( 1 - IDMAX  )
C                  IZ       =  ION. STAGE  INDEX ( 2 - IZ0MAX )
C                  IS       =  SPECIES     INDEX ( 1 - ISDIM  )
C                  IPOINT   =  DATA TYPE   INDEX ( 1 - IPDIM  )
C                  TEMPE(,,)=  LOG10(ELEC. TEMPERATURE)(EV)
C                  DENSE(,,)=  LOG10(ELEC. DENSITY)    (CM**3)
C
C
C TYPE    : SINGLE PRECISION
C
C INPUT   : (I*4)  ICHAN    =  STREAM NUMBER (PREVIOUSLY ALLOCATED)
C           (I*4)  IPOINT   =  DATA TYPE POINTER FOR ARRAY STACKING
C           (I*4)  ITDIM    =  ARRAY DIMENSION LIMIT FOR ITMAX
C           (I*4)  IDDIM    =  ARRAY DIMENSION LIMIT FOR IDMAX
C           (I*4)  IZDIM    =  ARRAY DIMENSION LIMIT FOR IZ0MAX
C           (I*4)  ISDIM    =  ARRAY DIMENSION LIMIT FOR ISMAX
C           (I*4)  IPDIM    =  ARRAY DIMENSION LIMIT FOR IPOINT
C           (I*4)  IZ0      =  NUCLEAR CHARGE OF SPECIES
C
C OUTPUT  : (I*4)  ITMAX(,) =  NUMBER OF TEMPERATURES FOR IPOINT
C           (I*4)  IDMAX(,) =  NUMBER OF DENSITIES FOR IPOINT
C           (I*4)  IZ9MAX   =  NUMBER OF CHARGE STATES (MUST EQUAL IZ0)
C           (R*4)  TEMPE(,,)=  ELECTRON TEMPERATURES
C           (R*4)  DENSE(,,)=  ELECTRON DENSITIES
C           (R*4)  ZDATA0(,,)= RETURNED NEUTRAL COEFFICIENT ARRAY
C           (R*4)  ZDATA(,,,)= RETURNED COEFFICIENT ARRAY (SEE ABOVE)
C                              (LOG10 VALUES)
C           (C*8)  ZLINFO(,,)= TEXT INFORMATION FOR EACH ION AND DATA
C                              TYPE.  USED FOR WAVELENGTH OF SPECIFIC
C                              LINE AND HYDROGEN MASS FOR CX DATA
C                              ONLY AT THIS STAGE
C           (I*4)  IFAIL    =  0 --- IF ROUTINE SUCCESSFUL
C                           =  1 --- MISMATCH OF NUCLEAR CHARGES
C                           =  2 --- ITDIM SET TOO LOW
C                           =  3 --- IDDIM SET TOO LOW
C
C NOTE    : THE ROUTINE ABORTS IF IZ0 DOES NOT MATCH THE NUCLEAR CHARGE,
C           IZ0MAX, AND NUMBER OF STAGES,IZMAX, READ FROM THE ADAS FILE.
C
C AUTHOR  : JAMES SPENCE  (K1/0/80)  EXT. 4866
C           JET
C
C DATE    : 23/03/90
C
C
C CHANGES : 12/12/90, H.P.SUMMERS - PUT ADAS DATA FROM CODE IN POSITIONS
C                                   76-80 OF FIRST LINE OF OUTPUT FILES.
C                                   CODE IS 'ADF01'.
C           20/ 2/91, H.P.SUMMERS - ADD ZLINDO
C           20/ 2/91, H.P.SUMMERS - ADD IPOINT
C           23/07/91, J.SPENCE    - REMOVE WRITE OPTION & 'SANC0' STUFF.
C           25/07/91, J.SPENCE    - ALLOW MULTIPLE SPECIES
C
C-----------------------------------------------------------------------
C
       DIMENSION ZDATA0( ITDIM , IDDIM , ISDIM )
     R         , ZDATA( ITDIM , IDDIM , IZDIM , ISDIM )
     R         , TEMPE( ITDIM , IPDIM , ISDIM )
     R         , DENSE( IDDIM , IPDIM , ISDIM )
     I         , ITMAX( IPDIM , ISDIM ) , IDMAX( IPDIM , ISDIM )
     C         , ZLINFO( IZDIM , IPDIM , ISDIM )
C
C-----------------------------------------------------------------------
C
       CHARACTER*(*) ZLINFO
       CHARACTER*80  STRING
C
C-----------------------------------------------------------------------
C
C
       IFAIL = 0
C
C-----------------------------------------------------------------------
C
       READ(ICHAN,1600) IZADAS , IDMAX(IPOINT,IS) , ITMAX(IPOINT,IS) ,
     &                  IDUMMY , IZ0MAX
C
       IF( ITDIM.LT.ITMAX(IPOINT,IS) )THEN
         IFAIL=2
         RETURN
       ENDIF
C
       IF( IDDIM.LT.IDMAX(IPOINT,IS) )THEN
         IFAIL=3
         RETURN
       ENDIF
C
       IF( IZ0.EQ.IZADAS.AND.IZ0.EQ.IZ0MAX ) THEN
C
         READ(ICHAN,1000) STRING
C
         READ(ICHAN,1200) ( DENSE(ID,IPOINT,IS),ID=1,IDMAX(IPOINT,IS))
C
         READ(ICHAN,1200) ( TEMPE(IT,IPOINT,IS),IT=1,ITMAX(IPOINT,IS))
C
         DO 300 IZ1 = 1 , IZ0MAX
            IZ = IZ1 - 1
            READ(ICHAN,1800)  ZLINFO(IZ1,IPOINT,IS)
            DO 300 IT = 1 , ITMAX(IPOINT,IS)
               IF( IZ1.EQ.1 ) THEN
                 READ(ICHAN,1400)(ZDATA0(IT,ID,IS) ,
     &                            ID = 1 , IDMAX(IPOINT,IS))
               ELSE
                 READ(ICHAN,1400)(ZDATA(IT,ID,IZ,IS) ,
     &                            ID = 1 , IDMAX(IPOINT,IS))
               END IF
  300    CONTINUE
C
       ELSE
C
         IFAIL = 1
C
       END IF
C
       RETURN
C
C-----------------------------------------------------------------------
C
 1000  FORMAT( A )
 1200  FORMAT( 8(1X,F9.5) )
 1400  FORMAT( 8F10.5 )
 1600  FORMAT( 5I5 )
 1800  FORMAT( 44X, A )
C
C-----------------------------------------------------------------------
C
       END
C
C=======================================================================
       SUBROUTINE SRCHA(X,XA,NXDIM,NX,IX)
C-----------------------------------------------------------------------
C  ARRAY VERSION OF CODE SRCH
C
C  SEARCHES FOR THE POSITION OF A VALUE IN AN MONOTONIC INCREASING
C  VECTOR OF VALUES.
C  THE INDEX RETURNED IS THAT OF THE VECTOR VALUE AT THE TOP OF THE
C  RANGE WITHIN WHICH THE SEARCH VALUE LIES.
C
C  A BINARY SEARCH IS USED
C
C  INPUT
C      X     =  SEARCH VALUE TO BE POSITIONED
C      XA(,) =  MONOTONIC INCREASING VECTOR  OF VALUES TO BE SCANNED
C      NX() = NUMBER OF VALUES IN THE VECTOR
C
C  OUTPUT
C      IX() = POSITION MARKER OF SEARCH VALUE
C
C
C  ******  H.P.SUMMERS, JET           20 FEB 1991      *********
C-----------------------------------------------------------------------
       DIMENSION XA(NXDIM,7),NX(7),IX(7)
C
       DO 100 K=1,7
        IX(K)=(NX(K)+1)/2
        IR=(IX(K)+1)/2
   10   IF(X.EQ.XA(IX(K),K)) THEN
            GO TO 20
        ELSEIF (X.LT.XA(IX(K),K))THEN
            IX(K)=IX(K)-IR
        ELSE
            IX(K)=IX(K)+IR
        ENDIF
C
        IF(IR.GT.1)THEN
            IR=(IR+1)/2
            GO TO 10
        ELSEIF (X.LT.XA(IX(K),K))THEN
            IX(K)=IX(K)-IR
        ENDIF
C
   20   IX(K)=IX(K)+1
        IX(K)=MAX0(2,IX(K))
        IX(K)=MIN0(IX(K),NX(K))
  100  CONTINUE
C
       RETURN
      END
C
C=======================================================================
       SUBROUTINE SRCHB(X,XA,NX,IX)
C-----------------------------------------------------------------------
C  SEARCHES FOR THE POSITION OF A VALUE IN AN MONOTONIC INCREASING
C  VECTOR OF VALUES.
C  THE INDEX RETURNED IS THAT OF THE VECTOR VALUE AT THE TOP OF THE
C  RANGE WITHIN WHICH THE SEARCH VALUE LIES.
C
C  A BINARY SEARCH IS USED
C
C  INPUT
C      X     =  SEARCH VALUE TO BE POSITIONED
C      XA()  =  MONOTONIC INCREASING VECTOR  OF VALUES TO BE SCANNED
C      NX    = NUMBER OF VALUES IN THE VECTOR
C
C  OUTPUT
C      IX    = POSITION MARKER OF SEARCH VALUE
C
C
C
C  AUTHOR:   H.P.SUMMERS, JET
C  DATE:     20 FEB 1991
C
C  UPDATE:   HPS 8 JULY 1993  - CHANGED SUBROUTINE NAME FROM SRCH TO
C                               SRCHB AT REQUEST OF JAMES SPENCE
C                               CALLS ALSO ALTERED IN ADASIT AND ADASITX
C-----------------------------------------------------------------------
       DIMENSION XA(NX)
C
       IX=(NX+1)/2
       IR=(IX+1)/2
   10  IF(X.EQ.XA(IX)) THEN
           GO TO 20
       ELSEIF (X.LT.XA(IX))THEN
           IX=IX-IR
       ELSE
           IX=IX+IR
       ENDIF
C
       IF(IR.GT.1)THEN
           IR=(IR+1)/2
           GO TO 10
       ELSEIF (X.LT.XA(IX))THEN
           IX=IX-IR
       ENDIF
C
   20  IX=IX+1
       IX=MAX0(2,IX)
       IX=MIN0(IX,NX)
C
       RETURN
      END
