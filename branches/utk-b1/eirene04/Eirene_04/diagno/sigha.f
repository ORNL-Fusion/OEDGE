C
C
      SUBROUTINE SIGHA(INIT,JJJ,ZDS,DUMMY1,PSIG,DUMMY2,ARGST)
C
C  INPUT:
C          INIT: FLAG FOR INITIALISATION (DO NOT CHANGE!)
C          NCELL (COMPRT): INDEX IN TALLY ARRAYS FOR CURRENT ZONE
C          JJJ:    INDEX OF SEGMENT ALONG CHORD
C          ZDS:    LENGTH OF SEGMENT NO. JJJ
C  OUTPUT: CONTRIB. FROM CELL NCELL AND CHORD SEGMENT JJJ TO:
C          THE H ALPHA FLUX PSIG(I),I=0,5 CONTRIBUTIONS
C          FROM ATOMS, MOLECULES, TEST IONS, BULK IONS AND NEGATIV IONS
C          THE INTEGRANT ARGST SUCH THAT INTEGR.(ARGST*DL) = PSIG
C
      USE PRECISION
      USE PARMMOD
      USE CESTIM
      USE CGRID
      USE CGEOM
      USE COMPRT

      IMPLICIT NONE

      INTEGER, INTENT(IN) :: INIT, JJJ
      REAL(DP), INTENT(IN) :: ZDS, DUMMY1, DUMMY2
      REAL(DP), INTENT(IN OUT) :: PSIG(0:NSPZ+2), ARGST(0:NSPZ+2,NRAD)
      INTEGER :: ISTOLD, ISP, NCELC, ICELL
      DATA ISTOLD/-1/
C
      SAVE
C
      IF (INIT.EQ.0) THEN
        DO 100 ISP=0,NSPZ+2
          PSIG(ISP)=0.
          DO 100 ICELL=1,NSBOX
            ARGST(ISP,ICELL)=0.
100     CONTINUE
C  INITIALISE H-ALPHA ARRAYS FOR CURRENT STRATUM ?
        IF (ISTRA .NE. ISTOLD) CALL HALPHA(ISTRA,1,2,3,4,5,6,7)
        ISTOLD=ISTRA
        RETURN
      ENDIF
C
C  LINE INTEGRAL: PHOTONS/SEC/CM**2
C
      IF (NSPZ+2.LT.6) THEN
        WRITE (6,*) 'ERROR EXIT FROM SIGHA '
        CALL EXIT_OWN(1)
      ENDIF
C
      ncelc=ncltal(ncell)
      PSIG(1)=PSIG(1)+ZDS*ADDV(1,NCELC)
      PSIG(2)=PSIG(2)+ZDS*ADDV(2,NCELC)
      PSIG(3)=PSIG(3)+ZDS*ADDV(3,NCELC)
      PSIG(4)=PSIG(4)+ZDS*ADDV(4,NCELC)
      PSIG(5)=PSIG(5)+ZDS*ADDV(5,NCELC)
      PSIG(0)=PSIG(0)+ZDS*ADDV(6,NCELC)
      PSIG(6)=PSIG(6)+ZDS*ADDV(7,NCELC)
      ARGST(1,JJJ)=ADDV(1,NCELC)
      ARGST(2,JJJ)=ADDV(2,NCELC)
      ARGST(3,JJJ)=ADDV(3,NCELC)
      ARGST(4,JJJ)=ADDV(4,NCELC)
      ARGST(5,JJJ)=ADDV(5,NCELC)
      ARGST(0,JJJ)=ADDV(6,NCELC)
      ARGST(6,JJJ)=ADDV(7,NCELC)
C
      RETURN
      END
