

      SUBROUTINE IF0PRM(IUNIN)
C
      USE PRECISION
      USE PARMMOD
      USE COMUSR
      USE CINIT
      USE CTETRA

      IMPLICIT NONE

      INTEGER :: NBRICK, NQUAD, NLINE
      COMMON /CINTFA/ NBRICK, NQUAD, NLINE

      INTEGER, INTENT(IN) :: IUNIN
      INTEGER :: NFLA, NCUTB, NCUTL, NDXA, NDYA, IPL, NTARGI, IT, IPRT,
     .           NAINB, IAIN, NAOTB, IAOT, NTARGSTP,
     .           NCOPI, NOD, NTT, I1, I2, I3
      INTEGER, ALLOCATABLE :: NTGPRT(:)
      CHARACTER(72) :: ZEILE
C
      READ (IUNIN,*)
      DO IPL=1,NPLS
        READ (IUNIN,*)
      END DO
C  NUMBER OF TARGET SOURCES ON B2 SURFACES: NTARGI
      READ (IUNIN,'(I6)') NTARGI
!pb      NSTEP = MAX(NSTEP,NTARGI)
C  NUMBER OF PARTS PER TARGET SOURCE
      NTARGSTP=0
      IF (NTARGI.GT.0) THEN
        DO IT=1,NTARGI
          READ (IUNIN,*) I1, I2, I3
          IF (I3 /= 0) NTARGSTP = NTARGSTP + 1
        END DO
      END IF
      NSTEP = MAX(NSTEP,NTARGSTP)
C  READ ADDITIONAL DATA TO BE TRANSFERRED FROM B2 INTO EIRENE
C  HERE: B2 VOLUME TALLIES
      READ (IUNIN,'(I6)') NAINB
      NAIN = MAX(NAIN,NAINB)
      DO IAIN=1,NAINB
        READ (IUNIN,*)
        READ (IUNIN,*)
        READ (IUNIN,*)
      END DO
C  READ ADDITIONAL DATA TO BE TRANSFERRED FROM EIRENE INTO B2
C  HERE: EIRENE SURFACE TALLIES
      READ (IUNIN,'(I6)') NAOTB
      DO IAOT=1,NAOTB
        READ (IUNIN,*)
      END DO
C
C READING BLOCK 14 FROM FORMATTED INPUT FILE (IUNIN) FINISHED
C
C
C  DEFINE ADDITIONAL TALLIES FOR COUPLING (UPDATED IN SUBR. UPTCOP
C                                              AND IN SUBR. COLLIDE)
      NCOPI=4
      NCPVI=max(NCOPI*NPLS,13)
      NCOP = NCOPI
      NCPV = MAX(NCPVI,13)
C
      OPEN (UNIT=30,ACCESS='SEQUENTIAL',FORM='FORMATTED')
      REWIND 30

      READ (30,'(A72)') ZEILE
      DO WHILE (INDEX(ZEILE,'NO. OF NODES') == 0)
         READ (30,'(A72)') ZEILE
      END DO
      READ (30,*) NCOORD

      NBRICK = 0
      NQUAD = 0
      NLINE = 0
      READ (30,'(A72)') ZEILE
      DO WHILE (INDEX(ZEILE,'ELEMENT GROUPS') == 0)
         READ (30,'(A72)') ZEILE
      END DO

      DO
         READ (30,'(A72)',END=9) ZEILE
         I1 = INDEX(ZEILE,'ELEMENTS:')
         DO WHILE (I1 == 0)
            READ (30,'(A72)',END=9) ZEILE
            I1 = INDEX(ZEILE,'ELEMENTS:')
         END DO
         I2 = INDEX(ZEILE,'NODES:')
         I3 = INDEX(ZEILE,'GEOMETRY:')
         READ (ZEILE(I2+7:I3-1),*) NOD
         READ (ZEILE(I1+10:I2),*) NTT
         IF (NOD == 27) THEN
           NBRICK = NBRICK + NTT
         ELSE IF (NOD == 9) THEN
           NQUAD = NQUAD + NTT
         ELSE IF (NOD == 3) THEN
           NLINE = NLINE + NTT
         ELSE
           EXIT
         END IF
      END DO

 9    CONTINUE
      NTETRA = NBRICK*48
C
C SAVE SOME MORE INPUT DATA FOR SHORT CYCLE ON COMMON CCOUPL
      NDX = 1
      NDY = 1
      NFL = 1
      NDXP = NDX+1
      NDYP = NDY+1

      RETURN
      END
