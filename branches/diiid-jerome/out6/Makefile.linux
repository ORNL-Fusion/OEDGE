#
# Definintions
#
# Remove implicit .f, .f90 and .mod creation rule
#
%.o : %.f
%.o : %.f90
#%.o : %.mod
#
# Source filename extensions
#
OUTEXT=.f
OUTF90EXT=.f90
#COMEXT=.u6a
#COMF90EXT=.u6b
CEXT=.c
#
# VERSION to build
#
# VER=aix
#
VER=pgi
VER_ABSOFT=abs
VER_PGI=pgi
VER_INTEL=ifort
#
# Source file locations
#
DIVMAIN=$(HOME)/divimp
COMMONS=$(DIVMAIN)/commons
DIVLOCALINC=$(DIVMAIN)/local/include
#
OUTSRC =$(DIVMAIN)/out6/src
OUTF90SRC=$(OUTSRC)/f90
COMSRC =$(DIVMAIN)/comsrc
COMF90SRC=$(COMSRC)/f90
#
# 64 bit support
#
BIT64=
EMU=
#
VPATH=$(OUTSRC):$(COMSRC):$(OUTF90SRC):$(COMF90SRC)
#
# Suffixes
#
.SUFFIXES: .o $(OUTEXT) $(OUTF90EXT)

#
# Compiler
#
# FCOMP=xlfnb
#
FCOMP=pgf90
RM=rm -f
#
FCOMP_ABSOFT=f95
FCOMP_INTEL =ifort
FCOMP_pgi=pgf95
#
# Optimization and debugging flags
#
# AIX - XLF
#
# ARCH=-qarch=com
# OPTC= -O
#
# OPTG= -g -bloadmap:load1 -qextchk -qsource
# OPTG= -g -bloadmap:load1 -qsource
#
# OPTO= -O -bloadmap:load1 -qmaxmem=16384 -qsource
#
# OPTS= -NQ60000 -NT70000 -ND10000 -NA16384
#
#
# LINUX - PGI
#
ARCH=
OPTC= -O $(EMU)
#OPTG= -g -Mbyteswapio -Mlist -Mdclchk -Mdepchk -Mbounds
#OPTG= -g -Mbyteswapio -Mlist -Mdclchk -Mdepchk -Mbounds -Mfptrap -Minfo -Mchkstk -Mchkptr -Mchkfpstk
#
# Removed -Mdclchk since version 3.2-4 of the PGI compiler treats undeclared 
# variables as severe errors instead of warnings.
#
OPTG= -g -Mlist -Mbyteswapio -Mdepchk -Mbounds -Minfo -Mbounds -traceback
#OPTG= -g -Mbyteswapio -Mlist -Mdepchk -Mbounds -Mfptrap -Minfo -Mchkstk -Mchkptr -Mchkfpstk
OPTGS= -g -Mlist -Mbyteswapio -Mdclchk -Mdepchk -Minform=inform -Minfo -Mchkstk -Mchkptr -Mchkfpstk -Mfptrap -Mbounds
#OPTGS= -g -Mbyteswapio -Mlist -Mdclchk -Mdepchk -Minform=inform -Minfo -Mchkstk -Mchkptr -Mchkfpstk -Mfptrap -Mbounds
#OPTG= -g -Mbyteswapio -Mlist
OPTO= -O -Mlist -Mbyteswapio -Munroll -Mnoframe
OPTOS= -O -Mlist -Mbyteswapio -Munroll -Mnoframe -Msave
#OPTO= -O -Mbyteswapio -Mlist -Munroll -Mnoframe
OPTS=
#
# LINUX - ABSOFT
#
OPT_ABSOFT = -g 
OPT_ABSOFT_OPT = -O
#
# LINUX - INTEL
#
OPT_INTEL = -g -check all -debug all
OPT_INTEL_OPT = -O1 -g -traceback -debug all
#
OPT_INTEL_BIG = -g -check all -debug all --mcmodel medium --intel-shared
OPT_INTEL_OPT_BIG = -O1 -g -traceback -debug all --mcmodel medium --intel-shared#
#
# SET options
#
OPT = $(OPTG)
#
# Fortran compiler options
#
FFLAGS= $(OPT) 
#
# Common block directory
#
IDIR=-I$(COMMONS) -I$(DIVLOCALINC)

#
# C-compiler
#
CC= cc
#
# C-flags
#
CFLAGS= $(OPTC) -I$(IDIR)

#
# Libraries
#
#
# AIX
#
# LIBS= -L/u/local/lib -lxlf -lc -lghost -lpostsc
#
# LIBSCOL= -L/u/local/lib -lxlf -lc -lghost -lpostcl
#
#
# LINUX
#
#
LIB_VER=
#
LOCAL_LIB=/usr/local/lib
LOCAL_DIV_LIB=$(DIVMAIN)/local/lib
#
LIB_INC= -L$(LOCAL_LIB)
LIBSCOL= -lghost$(LIB_VER) -lpostcl$(LIB_VER) -ljpeg
LIBSBW = -lghost$(LIB_VER) -lpostsc$(LIB_VER) -ljpeg
LIBSDEF= $(LIBSCOL)
#
LIBS= -L$(LOCAL_DIV_LIB) -lnetcdff -lnetcdf $(LIB_INC) $(LIBSDEF)
#
# Name of target to build
#
TARG=out6O$(VER)
TARGALT=out6aO$(VER)
TARGCOL=out6OC$(VER)
TARGBW=out6OBW$(VER)

#
# Objects to compile
#

include OBJECT_LIST

#OBJECTS= mod_triangles.o adas.o amjuel.o datetime$(VER).o write_jpeg$(VER).o harw.o nc.o sys$(VER).o comhc.o  hc_put.o hc_get.o  hc_out_storage_setup.o hc_init_out_data.o hc_lib_setup.o hc_init_lib_data.o hc_lddta.o hc_interp.o hc_ioout.o hc_nsprb.o hc_rnlup.o hc_rnprb.o hc_stlup.o hc_tlprb.o hc_newst.o hc_out_utils.o utility.o utility_com.o utility2.o contin.o dummy.o hc_plots.o ioout.o outmain.o outbolo.o outcontour.o outlos.o outlos3D.o outplot.o outrcp.o outring.o outxsection.o out000.o out100.o out200.o out300.o out400.o out500.o out600.o out700.o out800.o out900.o outa00.o out966.o out970.o out972.o out974.o out978.o out980.o out981.o out982.o out983.o out984.o mod_out985.o out985.o out986.o out987.o out990.o plrp.o reiser.o reiser_out.o slmod.o SLoutplot.o SLtrace.o trace.o 

#
#
# Rules
#

$(OUTEXT).o:
	$(FCOMP) $(FFLAGS) $(ARCH) $(IDIR) $(OPTS) -c $?

$(OUTF90EXT).o:
	$(FCOMP) $(FFLAGS) $(ARCH) $(IDIR) $(OPTS) -c $?


#
# Basic creation rules - apparently the file extensions can't be aliased as a variable
#

%.o: %.f
	$(FCOMP) $(FFLAGS) $(ARCH) $(IDIR) $(OPTS) -c $?

%.o: %.f90
	$(FCOMP) $(FFLAGS) $(ARCH) $(IDIR) $(OPTS) -c $?


#$(COMEXT).o:
#	rm -f $*.f
#	rm -f $*.mod
#	cp $? $*.f
#	$(FCOMP) $(FFLAGS) $(ARCH) $(IDIR) $(OPTS) -c $*.f
#	$(RM) $*.f

#$(COMF90EXT).o:
#	rm -f $*.f90
#	rm -f $*.mod
#	cp $? $*.f90
#	$(FCOMP) $(FFLAGS) $(ARCH) $(IDIR) $(OPTS) -c $*.f90
#	$(RM) $*.f90

$(TARG): $(OBJECTS)
	$(FCOMP)  $(OBJECTS) $(ARCH) $(OPT) $(LIBS)  -o $(TARG)

#
# Various MAKE targets for different platforms and optimization
# levels - need to do an rm *.o to make sure that the whole
# thing is recompiled - it could be set up to do this automatically
# except for the one environment used for development.  
#

opt:
	$(MAKE)  "OPT=$(OPTO)"

32bit:
	$(MAKE)  "OPT=$(OPTO)" "EMU=-m32" "ARCH=-tp k8-32" "LOCAL_LIB=/usr/local/lib32"

col:
	$(MAKE)  "TARG=$(TARGCOL)" "LIBS=$(LIBSCOL)"

bw:
	$(MAKE)  "TARG=$(TARGBW)" "LIBS=$(LIBSBW)"

32bitbw:
	$(MAKE)  "TARG=$(TARGBW)" "LIBSDEF=$(LIBSBW)" "OPT=$(OPTO)" "EMU=-m32" "ARCH=-tp k8-32" "LOCAL_LIB=/usr/local/lib32"

debug:
	$(MAKE)  "OPT=$(OPTGS)" "TARG=out6dbg$(VER)"

abs:
	$(MAKE) "FCOMP=$(FCOMP_ABSOFT)" "OPT=$(OPT_ABSOFT)" "VER=$(VER_ABSOFT)" 

absopt:
	$(MAKE) "FCOMP=$(FCOMP_ABSOFT)" "OPT=$(OPT_ABSOFT_OPT)" "VER=$(VER_ABSOFT)" 

intel:
	$(MAKE) "FCOMP=$(FCOMP_INTEL)" "OPT=$(OPT_INTEL)" "VER=$(VER_INTEL)" 

intelopt:
	$(MAKE) "FCOMP=$(FCOMP_INTEL)" "OPT=$(OPT_INTEL_OPT)" "VER=$(VER_INTEL)" 

intellib:
	$(MAKE) "FCOMP=$(FCOMP_INTEL)" "OPT=$(OPT_INTEL)" "VER=$(VER_INTEL)" "LIB_VER=ifort"

inteloptlib:
	$(MAKE) "FCOMP=$(FCOMP_INTEL)" "OPT=$(OPT_INTEL_OPT)" "VER=$(VER_INTEL)" "LIB_VER=ifort"

intel-iter:
	$(MAKE) "FCOMP=$(FCOMP_INTEL)" "OPT=$(OPT_INTEL)" "VER=$(VER_INTEL)"  "DIVMAIN=/work/projects/divimp/divimp" "LOCAL_LIB=/work/projects/divimp/lib"

intelopt-iter:
	$(MAKE) "FCOMP=$(FCOMP_INTEL)" "OPT=$(OPT_INTEL_OPT)" "VER=$(VER_INTEL)" "DIVMAIN=/work/projects/divimp/divimp" "LOCAL_LIB=/work/projects/divimp/lib" 

intel-iter-big:
	$(MAKE) "FCOMP=$(FCOMP_INTEL)" "OPT=$(OPT_INTEL_BIG)" "VER=$(VER_INTEL)"  "DIVMAIN=/work/projects/divimp/divimp" "LOCAL_LIB=/work/projects/divimp/lib"

intelopt-iter-big:
	$(MAKE) "FCOMP=$(FCOMP_INTEL)" "OPT=$(OPT_INTEL_OPT_BIG)" "VER=$(VER_INTEL)" "DIVMAIN=/work/projects/divimp/divimp" "LOCAL_LIB=/work/projects/divimp/lib" 

alt:
	$(MAKE)  "TARG=$(TARGALT)" "OPT=$(OPTG)"

altopt:
	$(MAKE)  "TARG=$(TARGALT)" "OPT=$(OPTO)"


clean:
	$(RM) *.o
	$(RM) *.lst
	$(RM) *.f
	$(RM) *.f90
	$(RM) *.mod







