#!/bin/sh

# Usage help function ==========================================================
usage()
{
    if [ $# -gt 0 ]
    then
        echo $@
    fi
    echo "Usage: ro [-d <case subdir>] [-s <shot subdir>]"
    echo "       [-g <geometry grid file>] [-e <out run id>] divinput outinput"
}

# Set Run-time environment variables ===========================================

# These should be all that require changing for most installations

runroot=$HOME/divimp
exeroot=/afs/ipp/u/divimp/divimpIPP
dataroot=$HOME/divimp
divrundir=/tmp
eireneversion=eirene99
ADASCENT=/afs/ipp/u/divimp/adas

#  Locations of the various DIVIMP directories / files

#  divrundir - Directory where DIVIMP will run
#  divdatdir - Directory containing the input data files
#  DIVRESDIR - Directory where the results from the case will be stored
#  divmaindir- Main DIVIMP directory containing the source code tree
#  divexedir - Directory containing the DIVIMP executable
#  outexedir - Directory containing the DIVIMP output processor executable
#  EIREXEDIR - Directory containing the EIRENE executable
#  EIRDATDIR - Directory containing the EIRENE executable
#  ADASCENT  - Directory with ADAS data
#  equdir    - Directory containg the equilibrium, background plasma and pump files
#  divexe    - DIVIMP executable
#  outexe    - OUT executable
#  EIREXE    - EIRENE executable

divdatdir=$runroot/data
DIVRESDIR=$runroot/results
divmaindir=$exeroot
divexedir=$exeroot/bin
outexedir=$exeroot/bin
EIREXEDIR=$exeroot/bin
EIRDATDIR=$exeroot/$eireneversion
equdir=$dataroot/shots
divexe=$divexedir/div6
outexe=$outexedir/out6
EIREXE=$EIREXEDIR/$eireneversion

# Make variables readable by executables inside script

export ADASCENT
export DIVRESDIR
export EIREXEDIR
export EIRDATDIR
export EIREXE

# Argument parsing and testing =================================================

scriptname=`basename $0`

# set default out run identifier to empty string
plotext=""

# Parse options

while getopts "d:s:f:g:e:" option
do
    case $option in
        d )
            csubdir=$OPTARG
        ;;
        s )
            ssubdir=$OPTARG
        ;;
        g )
            geometry=$OPTARG
        ;;
        e )
            plotext="-$OPTARG"
        ;;
        \? )
            usage $USAGE
            exit 1
        ;;
        * )
            usage "$scriptname: that smells fishy - error in getopt routine?"
            exit 1
        ;;
    esac
done
shift `expr $OPTIND - 1`

# Check if we have argument left after options parsing
if [ $# -lt 2 ]
then
    usage "$scriptname: missing argument"
    exit 1
fi

# Test validity of arguments and options
if [ -n "$csubdir" ]
then
    if [ ! -d $divdatdir/$csubdir ]
    then
        usage "$scriptname: data subdirectory does not exist"
        exit 1
    fi
else
    csubdir="."
fi

if [ -n "$ssubdir" ]
then
    if [ ! -d $equdir/$ssubdir ]
    then
        usage "$scriptname: shots subdirectory does not exist"
        exit 1
    fi
else
    ssubdir="."
fi

if [ -n "$geometry" ]
then
    if [ \( ! -f $equdir/$ssubdir/$geometry \) -a \( ! -f $equdir/$csubdir/$geometry \) ]
    then
        usage "$scriptname: geometry grid file does not exist"
        exit 1
    else
        if [ -f $equdir/$csubdir/$geometry ]
        then
            ssubdir=$csubdir
        fi
    fi
fi

if [ ! -f $divdatdir/$csubdir/`basename $1 .d6i`.d6i ]
then
    usage "$scriptname: `basename $divexe` input parameter file does not exist"
    exit 1
else
    divinput=`basename $1 .d6i`.d6i
    CASENAME=`basename $1 .d6i`
    export CASENAME
fi

if [ ! -f $divdatdir/$csubdir/`basename $2 .d6o`.d6o ]
then
    usage "$scriptname: `basename $outexe` input parameter file does not exist"
    exit 1
else
    outinput=`basename $2 .d6o`.d6o
fi

# Start actual processing ======================================================

# Prevent crashing code dumping core
ulimit -c 0

# Copy and uncompress raw results file of DIVIMP run and
# create unique execution directory (including sh PID) and cd to it
if [ -f $DIVRESDIR/$csubdir/$CASENAME.raw.gz ]
then
    cd $divrundir
    mkdir $CASENAME.$$
    cd $CASENAME.$$
    cp $DIVRESDIR/$csubdir/$CASENAME.raw.gz .
    gunzip $CASENAME.raw.gz
    mv $CASENAME.raw fort.8
else
    echo "DIVIMP raw results file does not exist"
    exit 1
fi

# Link to EIRENE AMJUEL data files
ln -s "$EIRDATDIR/a+m/HYDHEL"     .
ln -s "$EIRDATDIR/a+m/SPUTER"     .
ln -s "$EIRDATDIR/a+m/AMJUEL.TEX" AMJUEL
ln -s "$EIRDATDIR/a+m/H2VIBR.TEX" H2VIBR
ln -s "$EIRDATDIR/a+m/METHANE"    .

# Link to file for Eirene option related print outs
if [ -f  $equdir/$ssubdir/info.dat ]
then
    ln -s $equdir/$ssubdir/info.dat .
elif [ -f $equdir/info.dat ]
then
    ln -s $equdir/info.dat .
fi

# Create subdirectory in results directory
if [ ! -d $DIVRESDIR/$csubdir ]
then
    echo "Create results subdirectory"
    mkdir $DIVRESDIR/$csubdir
fi

# Prepare OUT ==================================================================

# Link outinp1 to OUT parameter file

ln -s $divdatdir/$csubdir/$outinput outinp1

# Link experimental data to unit 13
if [ -f $equdir/$ssubdir/$geometry.experiment ]
then
    ln -s $equdir/$ssubdir/$geometry.experiment fort.13
fi

# Link camera.dat to toroidal camera inversion data
if [ -f $equdir/$ssubdir/$geometry.camera ]
then
   ln -s $equdir/$ssubdir/$geometry.camera camera.dat
fi

# Supplimentary raw files
if [ -f $DIVRESDIR/$CASENAME.raw.src ]
then
    ln -s $DIVRESDIR/$CASENAME.raw.src "source.dat"
fi
if [ -f $DIVRESDIR/$1.raw.pla ]
then
   ln -s $DIVRESDIR/$CASENAME.raw.pla plasma.dat
fi
if [ -f $DIVRESDIR/$CASENAME.raw.geo ]
then
   ln -s $DIVRESDIR/$CASENAME.raw.geo geomty.dat
fi
if [ -f $DIVRESDIR/$CASENAME.eirtrc ]
then
   ln -s $DIVRESDIR/$CASENAME.eirtrc eirtrac.dat
fi

# Run OUT ======================================================================

echo Starting OUTput processing ...
$outexe < outinp1 > outout1
grep "OUT: TOTAL TIME USED" outout1 > /dev/null 2>&1
if  [ "$?" -eq "0" ]
then
    echo OUT finished successfully
else
    echo OUT crashed
    echo Aborting script for inspection of crash site
    codecrash="true"
fi

# Pushing OUT results files to results directory ===============================

# .out OUT debugging file
if [ -f outout1 ]
then
    mv outout1 $DIVRESDIR/$csubdir/$CASENAME$plotext.out
fi

# .dag OUT output file
if [ -f fort.7 ]
then
    mv fort.7 $DIVRESDIR/$csubdir/$CASENAME$plotext.dag
fi

# .ing - Echo of input to graphing routines
if [ -f fort.9 ]
then
    mv fort.9 $DIVRESDIR/$csubdir/$CASENAME$plotext.ing
fi

# .psg - Postscript plots
if [ -f POSTSCPT.LIS ]
then
    ps2pdf POSTSCPT.LIS $CASENAME$plotext.pdf
    mv $CASENAME$plotext.pdf $DIVRESDIR/$csubdir
fi

# Special printed listing of some plot information.
if [ -f fort.26 ]
then
    mv fort.26 $DIVRESDIR/$csubdir/$CASENAME$plotext.grp
fi

# Special printed listing of some plot information.
if [ -f fort.49 ]
then
    mv fort.49 $DIVRESDIR/$csubdir/$CASENAME$plotext.plt
fi

# Erosion/Deposition data
if [ -f fort.57 ]
then
    mv fort.57 $DIVRESDIR/$csubdir/$CASENAME$plotext.deposition
fi

# AUG special output (deprecated?)
if [ -f fort.59 ]
then
    mv fort.59 $DIVRESDIR/$csubdir/$CASENAME$plotext.AUGdiv
fi

# Image files
if [ -f $CASENAME_image01.jpg ]
then
    mv *image*.jpg $DIVRESDIR/$csubdir
fi

# Clean-up =====================================================================

cd $divrundir
if [ ! -n "$codecrash" ]
then
    rm -rf $CASENAME.$$
else
    echo Keeping crash site $CASENAME.$$ for inspection
    echo Please delete manually if not required anymore
fi

#  Return to base directory.
cd $runroot

exit 0
