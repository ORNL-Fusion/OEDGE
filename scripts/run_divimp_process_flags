#!/bin/tcsh -x
#
  alias ls ls
#
# ======================================================================
# PROCESS INPUT FLAGS
# ======================================================================
#
# Select non-default DIVIMP/OUT executable:
# ----------------------------------------------------------------------
#
  setenv QSUB_ID $1
  shift

  setenv X86_64 0
  if ( "$1" == "-64") then
    shift
    setenv X86_64 1
  endif

  setenv MYEXT "default"
  setenv ITER  no
  if ( "$1" == "-iter" ) then
    shift 
    setenv ITER  yes
    setenv MYEXT iter
  endif

  setenv MASTU no
  if ( "$1" == "-mastu" || "$1" == "-mu" ) then
    shift 
    setenv MASTU yes
    setenv MYEXT mastu
  endif
#
# ----------------------------------------------------------------------
# Decide which version of EIRENE to run, and if photon transport is 
# included:
# 
  setenv EIRTEMP eirene07
  setenv EIRFILE eirene07.dat
  setenv EIR13  
  setenv EIR15  
  setenv EIRPHOTONS 

  if ( "$1" == "-eirene04" || "$1" == "-04" ) then
    shift 
    setenv EIRTEMP eirene04
    setenv EIRFILE eirene04.dat
  endif

  if ( "$1" == "-eirene06" || "$1" == "-06" ) then
    shift 
    setenv EIRTEMP  eirene06
    setenv EIRFILE  eirene06.dat
  endif

  if ( "$1" == "-eirene99" || "$1" == "-99" ) then
    shift 
    setenv EIRTEMP  eirene99
    setenv EIRFILE  eirene99.dat
  endif

  setenv EIRRAW  "no"
  if ( "$1" == "-cr" ) then
    shift 
    setenv EIRRAW  "yes"
  endif

  if      ( "$1" == "-template" || "$1" == "-t" ) then
    shift 
    setenv EIRFILE  $EIRFILE.$1
    shift
  endif

  if ( "$1" == "-photons" ) then
    shift 
    setenv EIRPHOTONS  yes
    setenv EIRFILE     $EIRFILE.photons
  endif

  if ( "$1" == "-13" ) then
    shift 
    setenv EIR13  $1
    shift 
  endif
  if ( "$1" == "-15" ) then
    shift 
    setenv EIR15  $1
    shift 
  endif
#
# ----------------------------------------------------------------------
# Just run OUT, the post-processing and graphics package:
# 
  setenv OUTONLY no
  if ( "$1" == "-out" || "$1" == "-o" ) then
    shift 
    setenv OUTONLY yes
  endif
#
# ----------------------------------------------------------------------
# Just run CORTEX, the IDL-based post-processing and graphics package:
# 
  setenv CORTEX_ONLY no
  if ( "$1" == "-cortex" || "$1" == "-c" ) then
    shift 
    setenv CORTEX_ONLY yes
  endif
#
# ----------------------------------------------------------------------
# Don't delete case directory when the run is completed, for debugging:
# 
  setenv CLEAN yes
  if ( "$1" == "-noclean" || "$1" == "-nc" ) then
    shift 
    setenv CLEAN no
  endif
#
# ----------------------------------------------------------------------
# Just run OUT, the post-processing and graphics package:
# 
  setenv DEVICE unknown
  setenv DEVDIR unknown
  if ( "$1" == "-device" || "$1" == "-d" ) then
    shift
    setenv DEVICE $1
    shift 
    setenv DEVDIR $1
    shift
  endif
#
# ----------------------------------------------------------------------
# Validate input (weak):
#
  if ( $1 == "" || $2 == "" || ($3 == "" && $OUTONLY == "no"  && $CORTEX_ONLY == "no" ) )  then
    echo "Parameter error"
    exit
  endif
#
# ----------------------------------------------------------------------
# Set case variables from what's left:
  setenv CASENAME $1
  setenv OUTNAME  $2
  setenv GRIDNAME $3
  setenv SAVENAME $4

  if ( $OUTONLY == "yes" ) then
    if ( $GRIDNAME == "")  then
      setenv GRIDNAME none
    endif
    setenv SAVENAME $CASENAME
  endif
  
  exit(0)
