#!/bin/ksh 
#
# This shell script is called from DIVIMP to execute EIRENE
#
# The name of the case has been loaded as an environment variable
# called $CASENAME - it replaces the argument to this function.
#
# The first argument is now an optional identifier for the
# EIRENE input file to be used. If $1 is specified then $1.dat will
# be used instead of asdex.dat.
#
# If this environment variable is not set - the shell script exits
#a
if [[ -n $CASENAME ]] then
  echo 'Eirene case: ' $CASENAME 
else
  echo 'ERROR: No Case name specified - script exiting.'
  exit 1
fi
#
# Old check for arguments
#
# if [ $# -lt 1 ]
# then 
#   echo "usage: $0 <input>"
#   exit 1
# fi
#
#  Create a temporary working directory
#
#  Eirene executes in its own subdirectory 
#
cd $DIVRUNDIR
mkdir eire.$CASENAME
cd eire.$CASENAME
#
# convert geometry file to EIRENE format
#
# slmod begin
#
#
#
# The VACUUM_GRID.DAT file contains the polygon data for the
# vacuum grid (if present), which is used by the CHKVAC 
# routine in EIRENE.  This file is musy be passed to EIRENE
# if EIRBGK = 3 is used:
  if [[ -f $DIVRUNDIR/$CASENAME/vacuum_grid.dat ]] then 
    ln -s $DIVRUNDIR/$CASENAME/vacuum_grid.dat vacuum_grid.dat
  fi

  if [[ -f $DIVRUNDIR/$CASENAME/fort.52 ]] then 
    ln -s $DIVRUNDIR/$CASENAME/fort.52 upgrade.geom
  else
    echo
    echo WARNING: Standard EIRENE call not validated
    echo
    
    ln -s $DIVRUNDIR/$CASENAME/fort.4 fort.20
    $EIREXE99DIR/interface > out
    cp out $DIVRESDIR/$CASENAME.eirint
    mv fort.21 upgrade.geom
    rm fort.*
  fi
#
#ln -s $DIVRUNDIR/$CASENAME/fort.4 fort.20
#$EIREXE99DIR/interface > out
#cp out  $DIVRESDIR/$CASENAME.eirint
#mv fort.21 upgrade.geom
#rm fort.*
# slmod end 
#
# set graphics output to postscript
#
GLI_HOME=$EIREXE99DIR/graphics
export GLI_HOME
GRSOFT_DEVICE='62'
export GRSOFT_DEVICE
#
# Make links to the needed EIRENE data files
#
# Any arument to this script is interpreted as a request for
# a non-default data-file.
#
# slmod begin
#
#
#
  if [[ -f $DIVRUNDIR/$CASENAME/fort.81 ]] then
    ln -s $DIVRUNDIR/$CASENAME/fort.81 fort.50
  else
    if [[ -f $EIREXE99DIR/$CASENAME.dat ]] then
      ln -s $EIREXE99DIR/$CASENAME.dat fort.50
    else
      echo
      echo 'ERROR: Cannot find EIRENE input file'
      echo
      exit 1
    fi
  fi
#
#if [[ -n $1 ]] then 
#   ln -s $EIREXE99DIR/$1.dat fort.50
#else
#   ln -s $EIREXE99DIR/asdex.dat fort.50
#fi
# slmod end
#
ln -s upgrade.geom fort.30
ln -s $DIVRUNDIR/$CASENAME/fort.17 fort.31
ln -s $EIREXE99DIR/TRIM/trim.dat fort.21
# slmod begin
#
#
#
  ln -s $EIREXE99DIR/a+m/HYDHEL HYDHEL
  ln -s $EIREXE99DIR/a+m/SPUTER SPUTER
  ln -s $EIREXE99DIR/a+m/AMJUEL.TEX AMJUEL
  ln -s $EIREXE99DIR/a+m/METHANE METHANE
#
#ln -s $EIREXE99DIR/a+m/AMJUEL AMJUEL
#ln -s $EIREXE99DIR/a+m/HYDHEL HYDHEL
# slmod end
#
#  Execute EIRENE
#
echo "Executing EIRENE:" $EIREXE99
$EIREXE99 > asdex.out
export PINRET=$?
#
#  Copy or move results
#
if [[ -f core ]] then
   cp core $DIVRESDIR/$CASENAME.eir.core  
fi
#
# Fix up fort 32 by adding fort.99 for pressure gauge data.
#
cp fort.32 temp.1
cp fort.99 temp.2
cat temp.1 temp.2 > fort.32
rm temp.1
rm temp.2
#
# Save particle track file if one was written. 
# 
if [[ -f fort.80 ]] then
   mv fort.80 $DIVRUNDIR/$CASENAME/eirtrac.dat
fi
if [[ -f fort.6 ]] then
  cp fort.6 $DIVRUNDIR/$CASENAME/eirfort6.out
fi
#
cp fort.32 $DIVRESDIR/$CASENAME.eir
mv fort.32 $DIVRUNDIR/$CASENAME/fort.16
#mv gli.eps $DIVRESDIR/$CASENAME.pse
mv asdex.out $DIVRESDIR/$CASENAME.eirprn
#
# Copy over the addsur.dat file to the case run directory
#
cp addsur.dat $DIVRUNDIR/$CASENAME
#
# Clean-up
#
unset GLI_HOME
unset GRSOFT_DEVICE
cd ..
rm -r eire.$CASENAME
#
#  Return to DIVIMP execution directory
#
cd $CASENAME
#
#
exit $PINRET



