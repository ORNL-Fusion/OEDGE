#!/bin/ksh
echo runout V 3 : LIM Input = $1 : OUT Input = $2 
if [ $# -lt 2 ]
then 
   echo "usage: $0 <input driver> <output driver>"
   exit 1
fi
#
# Set Run-time environment variables
#
# These should be all that require changing for most installations
#
#-------------------------------------
# 
export CASENAME=$1
export XLFRTEOPTS=namelist=old
export ADASCENT=/work/projects/divimp/adas
#
VER=pgi
RUNROOT=$HOME/divimp/lim3
EXEROOT=/work/projects/divimp/divimp/lim3
DATAROOT=/work/projects/divimp/divimp/lim3
#
#  Loctions of the various LIM files 
#
#  LIMRUNDIR - Directory where LIM will run - must have read/write access
#  LIMDATDIR - Directory containing the input data files
#  LIMRESDIR - Directory where the results from the case will be stored
#
#  LIMMAINDIR- Main LIM directory containing the source code tree 
#  LIMEXEDIR - Directory containing the LIM executable
#  LIMOUTDIR - Directory containing the OUT excutable
#  PINEXEDIR - Directory containing the PIN executable
#  EIREXEDIR - Directory containing the EIRENE executable 
#
#  EQUDIR    - Directory containg the equilibrium, background plasma and pump files
#
#  LIMEXE    - LIM executable
#  OUTEXE    - OUT executable
#
export LIMRUNDIR=$RUNROOT
export LIMDATDIR=$RUNROOT/data
export LIMRESDIR=$RUNROOT/results
#
export LIMMAINDIR=$EXEROOT
export LIMEXEDIR=$EXEROOT/lim
export OUTEXEDIR=$EXEROOT/out
#
export EQUDIR=$DATAROOT/shots
#
export LIMEXE=$LIMEXEDIR/lim3O$VER
export OUTEXE=$OUTEXEDIR/out3O$VER
#
#-------------------------------------
#
# Additional Setup
#
# Set plot file name extension
#
if [[ -n $5 ]] then     
  export PLOTEXT=-$5
else
  export PLOTEXT=-a
fi
#
#------------------------------------- 
#
#
# Change to execution directory
#
cd $LIMRUNDIR
mkdir $1
cd $1
#
#
#  Copy and uncompress the results of the LIM run 
#
cp $LIMRESDIR/$1.raw.Z $LIMRUNDIR/$1/$1.raw.Z
uncompress -f -v $1.raw.Z
mv $1.raw fort.8
#
#  Connect an experimental data input file to unit 13.
#  If one has been specified. 
#  - not yet supported in LIM
#
#  Unit 13 contains experimental data for the case - if available. 
#
if [[ -n $4 ]] then     
  if [[ -f $EQUDIR/$3.$4.experiment ]] then 
    ln -s $EQUDIR/$3.$4.experiment $DIVRUNDIR/$1/fort.13
  elif [[ -f $EQUDIR/$3.experiment ]] then 
    ln -s $EQUDIR/$3.experiment $DIVRUNDIR/$1/fort.13
  fi    
elif [[ -n $3 ]] then
  if [[ -f $EQUDIR/$3.experiment ]] then 
    ln -s $EQUDIR/$3.experiment $DIVRUNDIR/$1/fort.13
  fi    
fi
#
#-----------------------------------
#
#  Execute OUT
#
#-----------------------------------
#
echo Starting OUTput processing ...  
#
$OUTEXE < $LIMDATDIR/$2.dlo > outout1 
#
echo OUTput processing complete.
#
#
#  Copy or move results of OUT run.
#
#  .out - OUT debugging file 
#
if [[ -f outout1 ]] then 
   mv outout1 $LIMRESDIR/$1.outa
fi
#
#  .dag OUT output file
#
if [[ -f fort.7 ]] then 
   mv fort.7  $LIMRESDIR/$1.daga
fi
#
#  .psga - Postscript plots 
#  Changed to $PLOTEXT.psg and .pdf
#
if [[ -f POSTSCPT.LIS ]] then 
  ps2pdf POSTSCPT.LIS $LIMRESDIR/$1$PLOTEXT.pdf
  mv POSTSCPT.LIS $LIMRESDIR/$1$PLOTEXT.psg 
fi
#
#  .ing - Echo of input to graphing routines
#
if [[ -f fort.9 ]] then 
   mv fort.9 $LIMRESDIR/$1.inga
fi
#
#  Special printed listing of some plot information.
#  - not yet supported in LIM
#
if [[ -f fort.26 ]] then
   mv fort.26 $LIMRESDIR/$1.grpa
fi 
#
#
# Clean-up
#
if [[ -f $1.dat ]] then
   rm *.dat
fi
rm fort.*
#
#
cd $LIMRUNDIR
rmdir $1
cd $LIMRESDIR
#
# Compress the larger output files - check for file existence
#                                    before compressing.
#
if [[ -f $1.raw ]] then
   compress -f -v $1.raw
fi
#
if [[ -f $1.lim ]] then
   compress -f -v $1.lim
fi
#
#
if [[ -f $1.out ]] then
   compress -f -v $1.out
fi
#
#
#  Print
#
# lp $1.ps
# lp $1.sol.ps
# lp $1.plt.ps
# lp $1.psg
# lp $1.sol.ps
#
#  Return to base directory.
#
cd $LIMRUNDIR





