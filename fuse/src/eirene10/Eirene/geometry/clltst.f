!pb  22.03.07:  LEVGEO=6 --> LEVGEO=10
C
      SUBROUTINE CLLTST(*)

      USE PRECISION
      USE PARMMOD
      USE CCONA
      USE CLOGAU
      USE CUPD
      USE CGRID
      USE COMPRT

      IMPLICIT NONE

      REAL(DP) :: PHITEST, ZTESTO, PHIT, X0T, Y0T, Z0T, TTT, ZTESTU,
     .          WINK
      INTEGER :: NTEST2, LEARC2, IPOLGT, LEARCT, NTEST0, LEARC1,
     .           LEARCA, LEAUSR, NTEST1

C

      IF (NACELL.GT.0) RETURN
C
C  TEST FOR RADIAL CELL INDICES NRCELL, IPOLG
C
      IF (LEVGEO.LE.4) THEN
C
        NTEST0=LEARC1(X0,Y0,Z0,IPOLGT,1,NR1STM,.FALSE.,.FALSE.,NPANU,
     .                'CLLTST      ')
C
      ELSEIF (LEVGEO.EQ.5) THEN
C
        NTEST0=LEARCT(X0,Y0,Z0)
C
      ELSEIF (LEVGEO.EQ.10) THEN
C
        NTEST0=LEAUSR(X0,Y0,Z0)
C
      ENDIF
C
      IF(NTEST0.NE.NRCELL.AND..NOT.NLSRFX) THEN
        WRITE (iunout,*) 'WRONG CELL-NUMBER IN RADIAL DIRECTION'
        CALL MASJ3 ('NRCELL,NTEST0,NPANU      ',NRCELL,NTEST0,NPANU)
        RETURN 1
      ENDIF
C
C  TEST FOR POLOIDAL CELL INDEX
C
      IF (NLPOL) THEN
        IF (LEVGEO.EQ.1) THEN
          NTEST1=LEARCA(Y0,PSURF,1,NP2ND,1,'CLLTST    ')
        ELSEIF (LEVGEO.EQ.2) THEN
          IF (NLCRC) THEN
            WINK=MOD(ATAN2(Y0,X0)+PI2A-PSURF(1),PI2A)+PSURF(1)
            NTEST1=LEARCA(WINK,PSURF,1,NP2ND,1,'CLLTST    ')
          ELSE
            NTEST1=LEARC2(X0,Y0,NRCELL,NPANU,'CLLTST  ')
          ENDIF
        ELSEIF (LEVGEO.EQ.3) THEN
          NTEST1=IPOLGT
        ELSE
          WRITE (iunout,*) 'ERROR EXIT IN CLLTST, NLPOL ',NPCELL
          CALL EXIT_OWN(1)
        ENDIF
        IF (NTEST1.NE.NPCELL.AND..NOT.NLSRFY) THEN
          WRITE (iunout,*) 'WRONG CELL-NUMBER IN POLOIDAL DIRECTION'
          CALL MASJ3 ('NPCELL,NTEST1,NPANU     ',NPCELL,NTEST1,NPANU)
          RETURN 1
        ENDIF
      ENDIF
C
C  TEST FOR 3RD CELL INDEX
C
      IF (NLTOR) THEN
C  IN CYLINDER APPROXIMATION
        IF (NLTRZ) THEN
          NTEST2=LEARCA(Z0,ZSURF,1,NTTRA,1,'CLLTST      ')
C  IN TOROIDAL APPROXIMATION
        ELSEIF (NLTRA) THEN
          PHIT=PHI
          IF (PHIT.LT.ZSURF(1)) PHIT=PHIT+PI2A
          IF (PHIT.GT.ZSURF(NTTRA)) PHIT=PHIT-PI2A
          PHITEST=ATAN2(Z0,(RMTOR+X0))+ZZONE(NTCELL)
          IF (ABS(PHIT-PHITEST).GT.EPS10) THEN
            WRITE (iunout,*) 'PHI,PHITEST  ',
     .                        PHIT,PHITEST,PHIT-PHITEST,NTCELL
            CALL MASJ1 ('NPANU   ',NPANU)
          ENDIF
          NTEST2=LEARCA(PHIT,ZSURF,1,NTTRA,1,'CLLTST      ')
C
        ENDIF
        IF (NTEST2.NE.NTCELL.AND..NOT.NLSRFZ) THEN
          WRITE (iunout,*) 'WRONG CELL-NUMBER IN TOROIDAL DIRECTION'
          CALL MASJ3 ('NTCELL,NTEST2,NPANU     ',NTCELL,NTEST2,NPANU)
          IF (NLTRA) THEN
            ZTESTO=ZFULL*NTCELL
            ZTESTU=ZFULL*(NTCELL-1)
            CALL MASR3 ('ZTESTU,PHI,ZTESTO=      ',ZTESTU,PHI,ZTESTO)
            RETURN 1
          ENDIF
        ENDIF
C
      ELSEIF (.NOT.NLTOR.AND.NLTRA) THEN
        PHIT=PHI
        IF (PHIT.LT.ZSURF(1)) PHIT=PHIT+PI2A
        IF (PHIT.GT.ZSURF(NTTRA)) PHIT=PHIT-PI2A
        NTEST2=LEARCA(PHIT,ZSURF,1,NTTRA,1,'CLLTST      ')
        PHITEST=ATAN2(Z0,(RMTOR+X0))+ZZONE(NTEST2)
        IF (ABS(PHIT-PHITEST).GT.EPS10) THEN
          WRITE (iunout,*) 'PHI,PHITEST  ',
     .                      PHIT,PHITEST,PHIT-PHITEST,NTEST2
          CALL MASJ1 ('NPANU   ',NPANU)
        ENDIF
C
        X0T=X0+RMTOR
        Z0T=Z0
        TTT=Z0T/(X0T*TANAL)
        IF (ABS(TTT).GT.1.+EPS10) THEN
          WRITE (iunout,*) 'WRONG CO-ORDINATES IN TOROIDAL DIRECTION'
          CALL MASJ1 ('NPANU   ',NPANU)
          CALL MASR3 ('X0,Z0,TTT                ',X0,Z0,TTT)
          RETURN 1
        ENDIF
C
        IF (NTEST2.NE.IPERID.AND..NOT.NLSRFZ) THEN
          WRITE (iunout,*) 'WRONG CELL-NUMBER IN TOROIDAL DIRECTION'
          CALL MASJ3 ('IPERID,NTEST2,NPANU     ',IPERID,NTEST2,NPANU)
        ENDIF
      ENDIF
C
      RETURN
      END
