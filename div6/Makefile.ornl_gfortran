# Definitions

# Remove implicit .f and .f90 and .mod creation rules
%.o : %.f

# Source filename extensions
DIVEXT=.f
DIVF90EXT=.f90

# VERSION to build
VER=gfortran

# Source file locations
DIVMAIN=$(HOME)/utk-merge
COMMONS=$(DIVMAIN)/commons
DIVLOCALINC=/home/1jn/divimp/local/gcc/include
DIVSRC =$(DIVMAIN)/div6/src
DIVF90SRC=$(DIVSRC)/f90
COMSRC =$(DIVMAIN)/comsrc
COMF90SRC=$(COMSRC)/f90

# 64 bit support
#BIT64=
#EMU=
VPATH=$(DIVSRC):$(COMSRC):$(DIVF90SRC):$(COMF90SRC)

# Suffixes
.SUFFIXES: .o $(DIVEXT) $(DIVF90EXT)

# Compiler
FCOMP=gfortran

# For clean
RM=rm -f

#ARCH=
#OPTC= -O $(EMU)

# LINUX - gfortran

# Jake's flags.
OPT_GFORTRAN = -g -fbacktrace -O0 -ffree-line-length-none -Wall -fcheck=bounds -fcheck=array-temps -fcheck=do -fcheck=mem -fcheck=pointer

# Flags from .gfortran Makefile.
#OPT_GFORTRAN = -ffree-line-length-none -fbounds-check -fbacktrace -mcmodel=medium -finit-local-zero -O0 

#OPT = $(OPT_GFORTRAN)

# Fortran compiler options
FFLAGS= $(OPT_GFORTRAN)
#FFLAGS= $(OPT)

# Common block directory
IDIR=$(COMMONS)
IDIR_DIV=$(DIVLOCALINC)
INCL= -I$(IDIR) -I$(IDIR_DIV) -I/usr/include

# Libraries
LOCAL_DIV_LIB=/home/1jn/divimp/local/gcc/lib
LIBS= -Wl,-rpath=$(LOCAL_DIV_LIB) -L$(LOCAL_DIV_LIB) -lc -lm -lnetcdff -lnetcdf -lghost -lpostsc -lgfortran

# Name of target to build
TARG=div6O$(VER)
TARGALT=div6aO$(VER)

# Objects to compile
include OBJECT_LIST

# Rules
$(DIVEXT).o:
#	$(FCOMP) $(FFLAGS) $(ARCH) $(IDIR) $(OPTS) -c $?
	$(FCOMP) $(FFLAGS) $(IDIR) -c $?

$(DIVF90EXT).o:
#	$(FCOMP) $(FFLAGS) $(ARCH) $(IDIR) $(OPTS) -c $?
	$(FCOMP) $(FFLAGS) $(IDIR) -c $?

# Basic creation rules - apparently the file extensions can't be aliased as a variable
%.o: %.f
#	$(FCOMP) $(FFLAGS) $(ARCHOPT) $(INCL) $(OPTS) -c $?
	$(FCOMP) $(FFLAGS) $(INCL) -c $?

%.o: %.f90
#	$(FCOMP) $(FFLAGS) $(ARCHOPT) $(INCL) $(OPTS) -c $?
	$(FCOMP) $(FFLAGS) $(INCL) -c $?

# Target
$(TARG): $(OBJECTS)
#	$(FCOMP) $(OBJECTS) $(ARCH) $(OPT) $(LIBS) -o $(TARG)
	$(FCOMP) $(OBJECTS) $(LIBS) -o $(TARG)

# Various MAKE targets for different platforms and optimization
# levels - need to do an rm *.o to make sure that the whole
# thing is recompiled - it could be set up to do this automatically
# except for the one environment used for development.  
64bit:
	$(MAKE)  "OPT=$(OPT_GFORTRAN)" "ARCH=x86-64"

debug:
	$(MAKE)  "OPT=$(OPT_GFORTRAN)" "TARG=div6dbg$(VER)"

clean:
	$(RM) *.o
	$(RM) *.lst
	$(RM) *.f
	$(RM) *.f90
	$(RM) *.mod
	$(RM) *.oo







