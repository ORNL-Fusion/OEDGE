#
# Definintions
#
#
# Remove implicit .f and .f90 and .mod creation rules
#
%.o : %.f
#%.o : %.f90
#%.o : %.mod
#
#
# Source filename extensions
#
DIVEXT=.f
DIVF90EXT=.f90	
#COMEXT=.u6a
#COMF90EXT=.u6b
CEXT=.c
#
# VERSION to build
#
# VER=aix
#
VER=ifort
VER_INTEL=ifort
#
# Source file locations
#
DIVMAIN=$(HOME)/divimp
COMMONS=$(DIVMAIN)/commons
#
DIVSRC =$(DIVMAIN)/div6/src
DIVF90SRC=$(DIVSRC)/f90
COMSRC =$(DIVMAIN)/comsrc
COMF90SRC=$(COMSRC)/f90
#
#
VPATH=$(DIVSRC):$(COMSRC):$(DIVF90SRC):$(COMF90SRC)

#
# Suffixes
#
.SUFFIXES: .o $(DIVEXT) $(DIVF90EXT)

#
# Compiler
#
#FCOMP=ifort
FCOMP=ifort
RM=rm -f
#
FCOMP_INTEL=f95

#
# Optimization and debugging flags
#
# AIX - XLF
#
# ARCH=-qarch=com
# OPTC= -O
# OPTG= -g -bloadmap:load1 -qextchk -qsource
# OPTO= -O -bloadmap:load1 -qmaxmem=16384 -qsource
#
# OPTS= -NQ60000 -NT70000 -ND10000 -NA16384
#
# LINUX - PGI
#
ARCH=
OPTC= -O
OPTG= -g -Mbyteswapio -Mlist -Mdclchk -Mdepchk -Mfptrap -Minfo
OPTGS= -g -Mbyteswapio -Mlist -Mdclchk -Mdepchk -Minform=inform -Minfo -Mchkstk -Mchkptr -Mchkfpstk -Mfptrap -Mbounds
OPTF90= -g -Mbyteswapio -Mlist -Mdclchk -Mdepchk -Minform=inform -Minfo -Mchkstk -Mchkptr -Mchkfpstk -Mfptrap -Mbounds
OPTO= -O -Mbyteswapio -Mlist
OPTO2= -O -Mbyteswapio -Mlist -Minline=level:6
OPTS=
#
# LINUX - INTEL
#
#OPT_INTEL = -CB 
OPT_INTEL = -g -CB -traceback -O0
#
OPT = $(OPT_INTEL)
#
# Fortran compiler options
#
FFLAGS= $(OPT) 
#
# Common block directory
#
IDIR=$(COMMONS)
#
# C-compiler
#
CC= cc
#
# C-flags
#
CFLAGS= $(OPTC)

#
# Libraries
#
#
# AIX
#
# LIBS= -L/u/local/lib -lxlf -lc -lghost -lpostsc
#
# LIBS= -L/usr/local/lib -lc -lghost -lpostsc -L/usr/pgi/linux86/lib -lpgftnrtl
#
#
# LINUX
#
LIBS= -L/usr/local/lib64 -lc -L../libsrc/ifort64 -lghost -lpostcl
#LIBS= -L/usr/local/lib -lc -L../libsrc -lghost -lpostcl
#LIBS= -L/usr/local/lib -lc -L../libsrc -lghost -lpostsc
#
#
# Name of target to build
#
TARG=div6O$(VER)
TARGALT=div6aO$(VER)

#
# Objects to compile
#

include OBJECT_LIST

#
# Rules
#

#$(DIVEXT).o:
#	cp $(DIVSRC)$*$(DIVEXT) $*.f
#	$(FCOMP) $(FFLAGS) $(ARCH) -I$(IDIR) $(OPTS) -c $*.f
#	rm $*.f


$(DIVEXT).o:
	$(FCOMP) $(FFLAGS) $(ARCH) -I$(IDIR) $(OPTS) -c $?


$(DIVF90EXT).o:
	$(FCOMP) $(FFLAGS) $(ARCH) -I$(IDIR) $(OPTS) -c $?


#
# Basic creation rules - apparently the file extensions can't be aliased as a variable
#

%.o: %.f
	$(FCOMP) $(FFLAGS) $(ARCH) -I$(IDIR) $(OPTS) -c $?

%.o: %.f90
	$(FCOMP) $(FFLAGS) $(ARCH) -I$(IDIR) $(OPTS) -c $?


#.f.o:
#	rm -f $*.f
#	rm -f $*.mod
#	cp $? $*.f
#	$(FCOMP) $(FFLAGS) $(ARCH) -I$(IDIR) $(OPTS) -c $*.f
#	$(RM) $*.f

#.f90.o:
#	rm -f $*.f90
#	rm -f $*.mod
#	cp $? $*.f90
#	$(FCOMP) $(FFLAGS) $(ARCH) -I$(IDIR) $(OPTS) -c $*.f90
#	$(RM) $*.f90

#$(COMEXT).o:
#	rm -f $*.f
#	rm -f $*.mod
#	cp $? $*.f
#	$(FCOMP) $(FFLAGS) $(ARCH) -I$(IDIR) $(OPTS) -c $*.f
#	$(RM) $*.f

#$(COMF90EXT).o:
#	rm -f $*.f90
#	rm -f $*.mod
#	cp $? $*.f90
#	$(FCOMP) $(FFLAGS) $(ARCH) -I$(IDIR) $(OPTS) -c $*.f90
#	$(RM) $*.f90

#
# Target
#

$(TARG): $(OBJECTS)
	$(FCOMP) $(OBJECTS) $(ARCH) $(OPT) $(LIBS) -o $(TARG)

#
# Various MAKE targets for different platforms and optimization
# levels - need to do an rm *.o to make sure that the whole
# thing is recompiled - it could be set up to do this automatically
# except for the one environment used for development.  
#

opt:
	$(MAKE)  "OPT=$(OPTO)"

opt2:
	$(MAKE)  "OPT=$(OPTO2)"

debug:
	$(MAKE)  "OPT=$(OPTGS)" "TARG=div6dbg$(VER)"

ifort:
	$(MAKE) "FCOMP=$(FCOMP_INTEL)" "OPT=$(OPT_INTEL)" "VER=$(VER_INTEL)" 

ifortopt:
	$(MAKE) "FCOMP=$(FCOMP_INTEL)" "OPT=$(OPT_INTEL_OPT)" "VER=$(VER_INTEL)" 

alt:
	$(MAKE)  "TARG=$(TARGALT)" "OPT=$(OPTG)"

altopt:
	$(MAKE)  "TARG=$(TARGALT)" "OPT=$(OPTO)"

clean:
	$(RM) *.o
	$(RM) *.lst
	$(RM) *.f
	$(RM) *.f90
	$(RM) *.mod







